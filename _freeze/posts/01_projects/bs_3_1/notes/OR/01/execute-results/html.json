{
  "hash": "7c429a82733cffc5a4e56424be4b7f1e",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Simplex 표 계산\"\ndate: 2025-04-03\ncategories: [\"OR\", \"학부 정리\"]\n---\n\n\n\n\n![](/img/stat-thumb.jpg){.post-thumbnail}\n\n- 노가다 계산 지옥에 지쳐 simplex 표를 계산하는 코드를 작성해보았다.\n\n## General\n\n::: {#5c35c401 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nfrom fractions import Fraction\nfrom tabulate import tabulate\n\n# Convert all elements to Fraction\ndef to_fraction(array):\n    return [Fraction(x).limit_denominator() if isinstance(x, (int, float)) else x for x in array]\n\n# 초기 설정\nobj = [-10, -20, 0, 0, 0, 0]\nA = [\n    [-1, 2, 1, 0, 0, 15],\n    [1, 1, 0, 1, 0, 12],\n    [5, 3, 0, 0, 1, 45]\n]\nbasic = np.array([3, 4, 5]) - 1\nnon_basic = np.array([1, 2]) - 1\n\n# 초기 배열을 분수로 변환\nobj = to_fraction(obj)\nA = [to_fraction(row) for row in A]\n\ndef print_table():\n    headers = [\"\", \"Z\"] + [f\"x{i+1}\" for i in range(len(obj)-1)] + [\"RHS\"]\n    table = [[\"Z\", 1] + [str(x) for x in obj]]\n    for i in range(len(A)):\n        row = [f\"x{basic[i]+1}\", 0] + [str(x) for x in A[i]]\n        table.append(row)\n    print(\"\\nCurrent Simplex Tableau:\")\n    print(tabulate(table, headers=headers, tablefmt=\"grid\"))\n\ndef simplex():\n    global obj, A, basic, non_basic\n    \n    iteration = 1\n    while True:\n        print(f\"\\nIteration {iteration}\")\n        print(\"=\" * 60)\n        print_table()\n\n        # 음의 계수 찾기 (entering variable)\n        min_rc_idx = None\n        min_rc = Fraction(0)\n        for j in range(len(obj) - 1):  # RHS 제외\n            if obj[j] < min_rc:\n                min_rc = obj[j]\n                min_rc_idx = j\n        \n        # 종료 조건: 음수 계수가 없으면 최적\n        if min_rc_idx is None or min_rc >= 0:\n            print(\"Optimal solution reached.\")\n            solution = {f\"x{i+1}\": Fraction(0) for i in range(len(obj)-1)}\n            for i, var_idx in enumerate(basic):\n                solution[f\"x{var_idx+1}\"] = A[i][-1]\n            print(\"Optimal Solution:\")\n            for var, val in solution.items():\n                print(f\"{var} = {val}\")\n            print(f\"Objective Value = {obj[-1]}\")\n            break\n\n        # Pivot 열 선택 및 ratio 계산\n        ratios = []\n        for i in range(len(A)):\n            if A[i][min_rc_idx] > 0:\n                ratios.append((A[i][-1] / A[i][min_rc_idx], i))\n            else:\n                ratios.append((float('inf'), i))\n        \n        min_ratio, pivot_row = min(ratios)\n        if min_ratio == float('inf'):\n            print(\"Unbounded solution detected.\")\n            break\n\n        print(f\"Entering variable: x{min_rc_idx + 1}\")\n        print(f\"Leaving variable: x{basic[pivot_row] + 1}\")\n\n        # Pivot 연산\n        pivot = A[pivot_row][min_rc_idx]\n        A[pivot_row] = [x / pivot for x in A[pivot_row]]\n        \n        # 다른 행 업데이트\n        for i in range(len(A)):\n            if i != pivot_row:\n                factor = A[i][min_rc_idx]\n                A[i] = [A[i][j] - factor * A[pivot_row][j] for j in range(len(obj))]\n        \n        # 목적함수 업데이트\n        factor = obj[min_rc_idx]\n        obj = [obj[j] - factor * A[pivot_row][j] for j in range(len(obj))]\n        \n        # 기본 변수 업데이트\n        leaving_var = basic[pivot_row]\n        basic[pivot_row] = min_rc_idx\n        non_basic[non_basic == min_rc_idx] = leaving_var\n        \n        iteration += 1\n\nsimplex()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nIteration 1\n============================================================\n\nCurrent Simplex Tableau:\n+----+-----+------+------+------+------+------+-------+\n|    |   Z |   x1 |   x2 |   x3 |   x4 |   x5 |   RHS |\n+====+=====+======+======+======+======+======+=======+\n| Z  |   1 |  -10 |  -20 |    0 |    0 |    0 |     0 |\n+----+-----+------+------+------+------+------+-------+\n| x3 |   0 |   -1 |    2 |    1 |    0 |    0 |    15 |\n+----+-----+------+------+------+------+------+-------+\n| x4 |   0 |    1 |    1 |    0 |    1 |    0 |    12 |\n+----+-----+------+------+------+------+------+-------+\n| x5 |   0 |    5 |    3 |    0 |    0 |    1 |    45 |\n+----+-----+------+------+------+------+------+-------+\nEntering variable: x2\nLeaving variable: x3\n\nIteration 2\n============================================================\n\nCurrent Simplex Tableau:\n+----+-----+------+------+------+------+------+-------+\n|    |   Z | x1   |   x2 | x3   |   x4 |   x5 | RHS   |\n+====+=====+======+======+======+======+======+=======+\n| Z  |   1 | -20  |    0 | 10   |    0 |    0 | 150   |\n+----+-----+------+------+------+------+------+-------+\n| x2 |   0 | -1/2 |    1 | 1/2  |    0 |    0 | 15/2  |\n+----+-----+------+------+------+------+------+-------+\n| x4 |   0 | 3/2  |    0 | -1/2 |    1 |    0 | 9/2   |\n+----+-----+------+------+------+------+------+-------+\n| x5 |   0 | 13/2 |    0 | -3/2 |    0 |    1 | 45/2  |\n+----+-----+------+------+------+------+------+-------+\nEntering variable: x1\nLeaving variable: x4\n\nIteration 3\n============================================================\n\nCurrent Simplex Tableau:\n+----+-----+------+------+------+-------+------+-------+\n|    |   Z |   x1 |   x2 | x3   | x4    |   x5 |   RHS |\n+====+=====+======+======+======+=======+======+=======+\n| Z  |   1 |    0 |    0 | 10/3 | 40/3  |    0 |   210 |\n+----+-----+------+------+------+-------+------+-------+\n| x2 |   0 |    0 |    1 | 1/3  | 1/3   |    0 |     9 |\n+----+-----+------+------+------+-------+------+-------+\n| x1 |   0 |    1 |    0 | -1/3 | 2/3   |    0 |     3 |\n+----+-----+------+------+------+-------+------+-------+\n| x5 |   0 |    0 |    0 | 2/3  | -13/3 |    1 |     3 |\n+----+-----+------+------+------+-------+------+-------+\nOptimal solution reached.\nOptimal Solution:\nx1 = 3\nx2 = 9\nx3 = 0\nx4 = 0\nx5 = 3\nObjective Value = 210\n```\n:::\n:::\n\n\n## Big M Method\n\n::: {#8d793325 .cell execution_count=2}\n``` {.python .cell-code}\nimport numpy as np\nfrom fractions import Fraction\nfrom tabulate import tabulate\nfrom sympy import symbols, simplify, oo\n\nM = symbols('M')\n\n# 초기 설정\nobj = [2, -2, -1, 4, -3, 0, 0, M, 0, M, 0]\nA = [\n    [1, -1, 1, 3, 2, 1, 0, 0, 0, 0, 4],\n    [1, -1, 0, -1, 1, 0, -1, 1, 0, 0, -1],\n    [2, -2, 1, 0, 0, 0, 0, 0, 1, 0, 2],\n    [1, -1, 2, 1, 2, 0, 0, 0, 0, 1, 2]\n]\nbasic = np.array([6, 8, 9, 10]) - 1  # x5, x6\nnon_basic = np.array([1, 2, 3, 4, 5, 7]) - 1  # x1, x2, x3, x4\n\ndef to_fraction(array):\n    return [Fraction(x).limit_denominator() if isinstance(x, (int, float)) else x for x in array]\n\n# 초기 배열을 분수로 변환\nobj = to_fraction(obj)\nA = [to_fraction(row) for row in A]\n\ndef print_table():\n    headers = [\"\", \"Z\"] + [f\"x{i+1}\" for i in range(len(obj)-1)] + [\"RHS\"]\n    table = [[\"Z\", 1] + [str(x) for x in obj]]\n    for i in range(len(A)):\n        row = [f\"x{basic[i]+1}\", 0] + [str(x) for x in A[i]]\n        table.append(row)\n    print(\"\\nCurrent Simplex Tableau:\")\n    print(tabulate(table, headers=headers, tablefmt=\"grid\"))\n\ndef adjust_obj_for_big_m():\n    global obj\n    print(\"\\nAdjusting Objective Function for Big M Method\")\n    for i in range(len(basic)):\n        basic_var_idx = basic[i]\n        if obj[basic_var_idx] != 0:  # 인공변수일 경우(M이 포함된 경우)\n            factor = obj[basic_var_idx]\n            obj = [simplify(obj[j] - factor * A[i][j]) for j in range(len(obj))]\n\ndef simplex():\n    global obj, A, basic, non_basic\n    \n    adjust_obj_for_big_m()\n    print_table()\n    \n    iteration = 1\n    while True:\n        print(f\"\\nIteration {iteration}\")\n        print(\"=\" * 60)\n        print_table()\n\n        # 음의 계수 찾기 (entering variable)\n        eval_obj = [x.evalf(subs={M: 1e6}) if x.has(M) else float(x) for x in obj[:-1]]\n        min_rc_idx = min(range(len(obj)-1), key=lambda j: eval_obj[j])\n        \n        if eval_obj[min_rc_idx] >= 0:\n            print(\"Optimal solution reached.\")\n            # 최적 해 출력\n            solution = {f\"x{i+1}\": 0 for i in range(len(obj)-1)}\n            for i, var_idx in enumerate(basic):\n                solution[f\"x{var_idx+1}\"] = A[i][-1]\n            print(\"Optimal Solution:\")\n            for var, val in solution.items():\n                print(f\"{var} = {val}\")\n            print(f\"Objective Value = {obj[-1]}\")\n            break\n\n        # Pivot 열 선택 및 ratio 계산\n        ratios = []\n        for i in range(len(A)):\n            if A[i][min_rc_idx] > 0:\n                ratios.append((A[i][-1] / A[i][min_rc_idx], i))\n            else:\n                ratios.append((oo, i))\n        \n        min_ratio, pivot_row = min(ratios)\n        if min_ratio == oo:\n            print(\"Unbounded solution detected.\")\n            break\n\n        print(f\"Entering variable: x{min_rc_idx + 1}\")\n        print(f\"Leaving variable: x{basic[pivot_row] + 1}\")\n\n        # Pivot 연산\n        pivot = A[pivot_row][min_rc_idx]\n        A[pivot_row] = [simplify(x / pivot) for x in A[pivot_row]]\n        \n        # 다른 행 업데이트\n        for i in range(len(A)):\n            if i != pivot_row:\n                factor = A[i][min_rc_idx]\n                A[i] = [simplify(A[i][j] - factor * A[pivot_row][j]) for j in range(len(obj))]\n        \n        # 목적함수 업데이트\n        factor = obj[min_rc_idx]\n        obj = [simplify(obj[j] - factor * A[pivot_row][j]) for j in range(len(obj))]\n        \n        # 기본 변수 업데이트\n        leaving_var = basic[pivot_row]\n        basic[pivot_row] = min_rc_idx\n        non_basic[non_basic == min_rc_idx] = leaving_var\n        \n        iteration += 1\n\nsimplex()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nAdjusting Objective Function for Big M Method\n\nCurrent Simplex Tableau:\n+-----+-----+---------+---------+----------+------+----------+------+------+------+------+-------+-------+\n|     |   Z | x1      | x2      | x3       |   x4 | x5       |   x6 | x7   |   x8 |   x9 |   x10 | RHS   |\n+=====+=====+=========+=========+==========+======+==========+======+======+======+======+=======+=======+\n| Z   |   1 | 2 - 2*M | 2*M - 2 | -2*M - 1 |    4 | -3*M - 3 |    0 | M    |    0 |    0 |     0 | -M    |\n+-----+-----+---------+---------+----------+------+----------+------+------+------+------+-------+-------+\n| x6  |   0 | 1       | -1      | 1        |    3 | 2        |    1 | 0    |    0 |    0 |     0 | 4     |\n+-----+-----+---------+---------+----------+------+----------+------+------+------+------+-------+-------+\n| x8  |   0 | 1       | -1      | 0        |   -1 | 1        |    0 | -1   |    1 |    0 |     0 | -1    |\n+-----+-----+---------+---------+----------+------+----------+------+------+------+------+-------+-------+\n| x9  |   0 | 2       | -2      | 1        |    0 | 0        |    0 | 0    |    0 |    1 |     0 | 2     |\n+-----+-----+---------+---------+----------+------+----------+------+------+------+------+-------+-------+\n| x10 |   0 | 1       | -1      | 2        |    1 | 2        |    0 | 0    |    0 |    0 |     1 | 2     |\n+-----+-----+---------+---------+----------+------+----------+------+------+------+------+-------+-------+\n\nIteration 1\n============================================================\n\nCurrent Simplex Tableau:\n+-----+-----+---------+---------+----------+------+----------+------+------+------+------+-------+-------+\n|     |   Z | x1      | x2      | x3       |   x4 | x5       |   x6 | x7   |   x8 |   x9 |   x10 | RHS   |\n+=====+=====+=========+=========+==========+======+==========+======+======+======+======+=======+=======+\n| Z   |   1 | 2 - 2*M | 2*M - 2 | -2*M - 1 |    4 | -3*M - 3 |    0 | M    |    0 |    0 |     0 | -M    |\n+-----+-----+---------+---------+----------+------+----------+------+------+------+------+-------+-------+\n| x6  |   0 | 1       | -1      | 1        |    3 | 2        |    1 | 0    |    0 |    0 |     0 | 4     |\n+-----+-----+---------+---------+----------+------+----------+------+------+------+------+-------+-------+\n| x8  |   0 | 1       | -1      | 0        |   -1 | 1        |    0 | -1   |    1 |    0 |     0 | -1    |\n+-----+-----+---------+---------+----------+------+----------+------+------+------+------+-------+-------+\n| x9  |   0 | 2       | -2      | 1        |    0 | 0        |    0 | 0    |    0 |    1 |     0 | 2     |\n+-----+-----+---------+---------+----------+------+----------+------+------+------+------+-------+-------+\n| x10 |   0 | 1       | -1      | 2        |    1 | 2        |    0 | 0    |    0 |    0 |     1 | 2     |\n+-----+-----+---------+---------+----------+------+----------+------+------+------+------+-------+-------+\nEntering variable: x5\nLeaving variable: x8\n\nIteration 2\n============================================================\n\nCurrent Simplex Tableau:\n+-----+-----+-------+--------+----------+---------+------+------+----------+---------+------+-------+----------+\n|     |   Z | x1    | x2     | x3       | x4      |   x5 |   x6 | x7       | x8      |   x9 |   x10 | RHS      |\n+=====+=====+=======+========+==========+=========+======+======+==========+=========+======+=======+==========+\n| Z   |   1 | M + 5 | -M - 5 | -2*M - 1 | 1 - 3*M |    0 |    0 | -2*M - 3 | 3*M + 3 |    0 |     0 | -4*M - 3 |\n+-----+-----+-------+--------+----------+---------+------+------+----------+---------+------+-------+----------+\n| x6  |   0 | -1    | 1      | 1        | 5       |    0 |    1 | 2        | -2      |    0 |     0 | 6        |\n+-----+-----+-------+--------+----------+---------+------+------+----------+---------+------+-------+----------+\n| x5  |   0 | 1     | -1     | 0        | -1      |    1 |    0 | -1       | 1       |    0 |     0 | -1       |\n+-----+-----+-------+--------+----------+---------+------+------+----------+---------+------+-------+----------+\n| x9  |   0 | 2     | -2     | 1        | 0       |    0 |    0 | 0        | 0       |    1 |     0 | 2        |\n+-----+-----+-------+--------+----------+---------+------+------+----------+---------+------+-------+----------+\n| x10 |   0 | -1    | 1      | 2        | 3       |    0 |    0 | 2        | -2      |    0 |     1 | 4        |\n+-----+-----+-------+--------+----------+---------+------+------+----------+---------+------+-------+----------+\nEntering variable: x4\nLeaving variable: x6\n\nIteration 3\n============================================================\n\nCurrent Simplex Tableau:\n+-----+-----+--------------+---------------+--------------+------+------+-------------+---------------+--------------+------+-------+---------------+\n|     |   Z | x1           | x2            | x3           |   x4 |   x5 | x6          | x7            | x8           |   x9 |   x10 | RHS           |\n+=====+=====+==============+===============+==============+======+======+=============+===============+==============+======+=======+===============+\n| Z   |   1 | 2*M/5 + 26/5 | -2*M/5 - 26/5 | -7*M/5 - 6/5 |    0 |    0 | 3*M/5 - 1/5 | -4*M/5 - 17/5 | 9*M/5 + 17/5 |    0 |     0 | -2*M/5 - 21/5 |\n+-----+-----+--------------+---------------+--------------+------+------+-------------+---------------+--------------+------+-------+---------------+\n| x4  |   0 | -1/5         | 1/5           | 1/5          |    1 |    0 | 1/5         | 2/5           | -2/5         |    0 |     0 | 6/5           |\n+-----+-----+--------------+---------------+--------------+------+------+-------------+---------------+--------------+------+-------+---------------+\n| x5  |   0 | 4/5          | -4/5          | 1/5          |    0 |    1 | 1/5         | -3/5          | 3/5          |    0 |     0 | 1/5           |\n+-----+-----+--------------+---------------+--------------+------+------+-------------+---------------+--------------+------+-------+---------------+\n| x9  |   0 | 2            | -2            | 1            |    0 |    0 | 0           | 0             | 0            |    1 |     0 | 2             |\n+-----+-----+--------------+---------------+--------------+------+------+-------------+---------------+--------------+------+-------+---------------+\n| x10 |   0 | -2/5         | 2/5           | 7/5          |    0 |    0 | -3/5        | 4/5           | -4/5         |    0 |     1 | 2/5           |\n+-----+-----+--------------+---------------+--------------+------+------+-------------+---------------+--------------+------+-------+---------------+\nEntering variable: x3\nLeaving variable: x10\n\nIteration 4\n============================================================\n\nCurrent Simplex Tableau:\n+----+-----+------+-------+------+------+------+------+-------+----------+------+---------+-------+\n|    |   Z | x1   | x2    |   x3 |   x4 |   x5 | x6   | x7    | x8       |   x9 | x10     | RHS   |\n+====+=====+======+=======+======+======+======+======+=======+==========+======+=========+=======+\n| Z  |   1 | 34/7 | -34/7 |    0 |    0 |    0 | -5/7 | -19/7 | M + 19/7 |    0 | M + 6/7 | -27/7 |\n+----+-----+------+-------+------+------+------+------+-------+----------+------+---------+-------+\n| x4 |   0 | -1/7 | 1/7   |    0 |    1 |    0 | 2/7  | 2/7   | -2/7     |    0 | -1/7    | 8/7   |\n+----+-----+------+-------+------+------+------+------+-------+----------+------+---------+-------+\n| x5 |   0 | 6/7  | -6/7  |    0 |    0 |    1 | 2/7  | -5/7  | 5/7      |    0 | -1/7    | 1/7   |\n+----+-----+------+-------+------+------+------+------+-------+----------+------+---------+-------+\n| x9 |   0 | 16/7 | -16/7 |    0 |    0 |    0 | 3/7  | -4/7  | 4/7      |    1 | -5/7    | 12/7  |\n+----+-----+------+-------+------+------+------+------+-------+----------+------+---------+-------+\n| x3 |   0 | -2/7 | 2/7   |    1 |    0 |    0 | -3/7 | 4/7   | -4/7     |    0 | 5/7     | 2/7   |\n+----+-----+------+-------+------+------+------+------+-------+----------+------+---------+-------+\nEntering variable: x2\nLeaving variable: x3\n\nIteration 5\n============================================================\n\nCurrent Simplex Tableau:\n+----+-----+------+------+------+------+------+------+------+-------+------+--------+-------+\n|    |   Z |   x1 |   x2 | x3   |   x4 |   x5 | x6   |   x7 | x8    |   x9 | x10    |   RHS |\n+====+=====+======+======+======+======+======+======+======+=======+======+========+=======+\n| Z  |   1 |    0 |    0 | 17   |    0 |    0 | -8   |    7 | M - 7 |    0 | M + 13 |     1 |\n+----+-----+------+------+------+------+------+------+------+-------+------+--------+-------+\n| x4 |   0 |    0 |    0 | -1/2 |    1 |    0 | 1/2  |    0 | 0     |    0 | -1/2   |     1 |\n+----+-----+------+------+------+------+------+------+------+-------+------+--------+-------+\n| x5 |   0 |    0 |    0 | 3    |    0 |    1 | -1   |    1 | -1    |    0 | 2      |     1 |\n+----+-----+------+------+------+------+------+------+------+-------+------+--------+-------+\n| x9 |   0 |    0 |    0 | 8    |    0 |    0 | -3   |    4 | -4    |    1 | 5      |     4 |\n+----+-----+------+------+------+------+------+------+------+-------+------+--------+-------+\n| x2 |   0 |   -1 |    1 | 7/2  |    0 |    0 | -3/2 |    2 | -2    |    0 | 5/2    |     1 |\n+----+-----+------+------+------+------+------+------+------+-------+------+--------+-------+\nEntering variable: x6\nLeaving variable: x4\n\nIteration 6\n============================================================\n\nCurrent Simplex Tableau:\n+----+-----+------+------+------+------+------+------+------+-------+------+-------+-------+\n|    |   Z |   x1 |   x2 |   x3 |   x4 |   x5 |   x6 |   x7 | x8    |   x9 | x10   |   RHS |\n+====+=====+======+======+======+======+======+======+======+=======+======+=======+=======+\n| Z  |   1 |    0 |    0 |    9 |   16 |    0 |    0 |    7 | M - 7 |    0 | M + 5 |    17 |\n+----+-----+------+------+------+------+------+------+------+-------+------+-------+-------+\n| x6 |   0 |    0 |    0 |   -1 |    2 |    0 |    1 |    0 | 0     |    0 | -1    |     2 |\n+----+-----+------+------+------+------+------+------+------+-------+------+-------+-------+\n| x5 |   0 |    0 |    0 |    2 |    2 |    1 |    0 |    1 | -1    |    0 | 1     |     3 |\n+----+-----+------+------+------+------+------+------+------+-------+------+-------+-------+\n| x9 |   0 |    0 |    0 |    5 |    6 |    0 |    0 |    4 | -4    |    1 | 2     |    10 |\n+----+-----+------+------+------+------+------+------+------+-------+------+-------+-------+\n| x2 |   0 |   -1 |    1 |    2 |    3 |    0 |    0 |    2 | -2    |    0 | 1     |     4 |\n+----+-----+------+------+------+------+------+------+------+-------+------+-------+-------+\nOptimal solution reached.\nOptimal Solution:\nx1 = 0\nx2 = 4\nx3 = 0\nx4 = 0\nx5 = 3\nx6 = 2\nx7 = 0\nx8 = 0\nx9 = 10\nx10 = 0\nObjective Value = 17\n```\n:::\n:::\n\n\n## Grubi\n\n::: {#873a9b3a .cell execution_count=3}\n``` {.python .cell-code}\nfrom gurobipy import *\n\nmodel = Model(\"ex4.4-6\")\nmodel.setParam(GRB.Param.OutputFlag, 0)\n\nx1 = model.addVar(vtype=GRB.CONTINUOUS, name=\"x1\")\nx2 = model.addVar(vtype=GRB.CONTINUOUS, name=\"x2\")\n\nmodel.setObjective(20 * x1 + 10 * x2, GRB.MINIMIZE)\n\nmodel.addConstr(4 * x1 - x2 >= 2)\nmodel.addConstr(x1 + x2 >= 3)\n\nmodel.optimize()\n\nfor var in model.getVars():\n    print(f\"{var.varName}: {var.x}\")\nprint(\"Obj: \", model.objVal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nx1: 1.0\nx2: 2.0\nObj:  40.0\n```\n:::\n:::\n\n\n",
    "supporting": [
      "01_files"
    ],
    "filters": [],
    "includes": {}
  }
}