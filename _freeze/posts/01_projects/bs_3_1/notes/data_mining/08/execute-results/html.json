{
  "hash": "fec97ed3b5f472d10d9b0252b82c1528",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"preprocessing\"\ndate: 2025-03-26\ncategories: [\"data mining\"]\n---\n\n\n\n\n![](/img/human-thumb.jpg){.post-thumbnail}\n\n::: {#ea21ad9f .cell execution_count=1}\n``` {.python .cell-code}\nimport chardet\n\nwith open(\"_data/class/2012년_1당사자_법규위반별_주야별_교통사고.csv\", \"rb\") as f:\n    print(chardet.detect(f.read()))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{'encoding': 'EUC-KR', 'confidence': 0.99, 'language': 'Korean'}\n```\n:::\n:::\n\n\n::: {#cd8ebb07 .cell execution_count=2}\n``` {.python .cell-code}\nimport pandas as pd\n\ndf = pd.read_csv(\n    \"_data/class/2012년_1당사자_법규위반별_주야별_교통사고.csv\", encoding=\"EUC-KR\"\n)\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>법규위반</th>\n      <th>주야</th>\n      <th>발생건수</th>\n      <th>사망자수</th>\n      <th>부상자수</th>\n      <th>중상</th>\n      <th>경상</th>\n      <th>부상신고</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>과속</td>\n      <td>주</td>\n      <td>159</td>\n      <td>34</td>\n      <td>334</td>\n      <td>140</td>\n      <td>178</td>\n      <td>16</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>과속</td>\n      <td>야</td>\n      <td>218</td>\n      <td>73</td>\n      <td>348</td>\n      <td>200</td>\n      <td>139</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>교차로 통행방법 위반</td>\n      <td>주</td>\n      <td>8817</td>\n      <td>82</td>\n      <td>14031</td>\n      <td>3915</td>\n      <td>9530</td>\n      <td>586</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>교차로 통행방법 위반</td>\n      <td>야</td>\n      <td>5904</td>\n      <td>29</td>\n      <td>9728</td>\n      <td>2401</td>\n      <td>6884</td>\n      <td>443</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>기타</td>\n      <td>주</td>\n      <td>9388</td>\n      <td>141</td>\n      <td>14070</td>\n      <td>4271</td>\n      <td>9217</td>\n      <td>582</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>기타</td>\n      <td>야</td>\n      <td>6073</td>\n      <td>56</td>\n      <td>9218</td>\n      <td>2348</td>\n      <td>6457</td>\n      <td>413</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>보행자 보호의무 위반</td>\n      <td>주</td>\n      <td>3772</td>\n      <td>80</td>\n      <td>3914</td>\n      <td>2063</td>\n      <td>1729</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>보행자 보호의무 위반</td>\n      <td>야</td>\n      <td>3334</td>\n      <td>94</td>\n      <td>3535</td>\n      <td>1802</td>\n      <td>1626</td>\n      <td>107</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>신호위반</td>\n      <td>주</td>\n      <td>12552</td>\n      <td>210</td>\n      <td>20396</td>\n      <td>6816</td>\n      <td>12765</td>\n      <td>815</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>신호위반</td>\n      <td>야</td>\n      <td>12755</td>\n      <td>179</td>\n      <td>21724</td>\n      <td>7177</td>\n      <td>13749</td>\n      <td>798</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>안전거리 미확보</td>\n      <td>주</td>\n      <td>12408</td>\n      <td>57</td>\n      <td>22392</td>\n      <td>4509</td>\n      <td>16882</td>\n      <td>1001</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>안전거리 미확보</td>\n      <td>야</td>\n      <td>9867</td>\n      <td>40</td>\n      <td>17422</td>\n      <td>3025</td>\n      <td>13644</td>\n      <td>753</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>안전운전 의무 불이행</td>\n      <td>주</td>\n      <td>62608</td>\n      <td>1740</td>\n      <td>91076</td>\n      <td>28081</td>\n      <td>58472</td>\n      <td>4523</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>안전운전 의무 불이행</td>\n      <td>야</td>\n      <td>62783</td>\n      <td>2132</td>\n      <td>92942</td>\n      <td>26451</td>\n      <td>62209</td>\n      <td>4282</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>중앙선 침범</td>\n      <td>주</td>\n      <td>6825</td>\n      <td>243</td>\n      <td>12427</td>\n      <td>4658</td>\n      <td>7339</td>\n      <td>430</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>중앙선 침범</td>\n      <td>야</td>\n      <td>6193</td>\n      <td>202</td>\n      <td>11008</td>\n      <td>3846</td>\n      <td>6770</td>\n      <td>392</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#0c1963b5 .cell execution_count=3}\n``` {.python .cell-code}\ndf = pd.read_csv(\"_data/class/vote.csv\")\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gender</th>\n      <th>region</th>\n      <th>edu</th>\n      <th>income</th>\n      <th>age</th>\n      <th>score_gov</th>\n      <th>score_progress</th>\n      <th>score_intention</th>\n      <th>vote</th>\n      <th>parties</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>4</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>2</td>\n      <td>2</td>\n      <td>4.0</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>5</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>2</td>\n      <td>4</td>\n      <td>3.0</td>\n      <td>0</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>1</td>\n      <td>2</td>\n      <td>4</td>\n      <td>1</td>\n      <td>3</td>\n      <td>2.8</td>\n      <td>1</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>3</td>\n      <td>5</td>\n      <td>4</td>\n      <td>2.6</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>4</td>\n      <td>4</td>\n      <td>3</td>\n      <td>2.4</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>206</th>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>4</td>\n      <td>4</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1.8</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>207</th>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>2.6</td>\n      <td>1</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>208</th>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>2.6</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>209</th>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>3</td>\n      <td>2</td>\n      <td>4.0</td>\n      <td>1</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>210</th>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3.8</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n<p>211 rows × 10 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {#8429638d .cell execution_count=4}\n``` {.python .cell-code}\nx = df.iloc[:, :8]\nx\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gender</th>\n      <th>region</th>\n      <th>edu</th>\n      <th>income</th>\n      <th>age</th>\n      <th>score_gov</th>\n      <th>score_progress</th>\n      <th>score_intention</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>4</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>2</td>\n      <td>2</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>5</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>2</td>\n      <td>4</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>1</td>\n      <td>2</td>\n      <td>4</td>\n      <td>1</td>\n      <td>3</td>\n      <td>2.8</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>3</td>\n      <td>5</td>\n      <td>4</td>\n      <td>2.6</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>4</td>\n      <td>4</td>\n      <td>3</td>\n      <td>2.4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>206</th>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>4</td>\n      <td>4</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1.8</td>\n    </tr>\n    <tr>\n      <th>207</th>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>2.6</td>\n    </tr>\n    <tr>\n      <th>208</th>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>2.6</td>\n    </tr>\n    <tr>\n      <th>209</th>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>3</td>\n      <td>2</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>210</th>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3.8</td>\n    </tr>\n  </tbody>\n</table>\n<p>211 rows × 8 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {#46c5cc81 .cell execution_count=5}\n``` {.python .cell-code}\ny = df[\"vote\"]\ny\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\n0      1\n1      0\n2      1\n3      1\n4      1\n      ..\n206    1\n207    1\n208    1\n209    1\n210    1\nName: vote, Length: 211, dtype: int64\n```\n:::\n:::\n\n\n::: {#311d08f3 .cell execution_count=6}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv(\"_data/class/Car-selling price.csv\")\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Mileage</th>\n      <th>Age(yrs)</th>\n      <th>Sell Price($)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>69000</td>\n      <td>6</td>\n      <td>18000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>35000</td>\n      <td>3</td>\n      <td>34000</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>57000</td>\n      <td>5</td>\n      <td>26100</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>22500</td>\n      <td>2</td>\n      <td>40000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>46000</td>\n      <td>4</td>\n      <td>31500</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>59000</td>\n      <td>5</td>\n      <td>26750</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>52000</td>\n      <td>5</td>\n      <td>32000</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>72000</td>\n      <td>6</td>\n      <td>19300</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>91000</td>\n      <td>8</td>\n      <td>12000</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>67000</td>\n      <td>6</td>\n      <td>22000</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>83000</td>\n      <td>7</td>\n      <td>18700</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>79000</td>\n      <td>7</td>\n      <td>19500</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>59000</td>\n      <td>5</td>\n      <td>26000</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>58780</td>\n      <td>4</td>\n      <td>27500</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>82450</td>\n      <td>7</td>\n      <td>19400</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>25400</td>\n      <td>3</td>\n      <td>35000</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>28000</td>\n      <td>2</td>\n      <td>35500</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>69000</td>\n      <td>5</td>\n      <td>19700</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>87600</td>\n      <td>8</td>\n      <td>12800</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>52000</td>\n      <td>5</td>\n      <td>18200</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#eef02a28 .cell execution_count=7}\n``` {.python .cell-code}\nplt.title(\"Scatter Diagram\")\nplt.xlabel(\"Mileage\")\nplt.ylabel(\"Sell Price($)\")\nplt.scatter(df[\"Mileage\"], df[\"Sell Price($)\"])\n```\n\n::: {.cell-output .cell-output-display}\n![](08_files/figure-html/cell-8-output-1.png){width=610 height=449}\n:::\n:::\n\n\n::: {#5384c7bc .cell execution_count=8}\n``` {.python .cell-code}\nfrom sklearn.model_selection import train_test_split\n\nx = df[[\"Mileage\", \"Age(yrs)\"]]\ny = df[\"Sell Price($)\"]\n\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2)\n```\n:::\n\n\n::: {#0deac85d .cell execution_count=9}\n``` {.python .cell-code}\nfrom sklearn.preprocessing import Binarizer\nimport numpy as np\n\ndata = np.array([[1.1], [2.2], [3.3], [4.4], [5.5]])\nscaler = Binarizer(threshold=3.0)\nscaler.fit(data)\nresult = scaler.transform(data)\nresult\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\narray([[0.],\n       [0.],\n       [1.],\n       [1.],\n       [1.]])\n```\n:::\n:::\n\n\n::: {#f1883459 .cell execution_count=10}\n``` {.python .cell-code}\nfrom sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler()\nscaler.fit(data)\nresult = scaler.transform(data)\nresult\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\narray([[0.  ],\n       [0.25],\n       [0.5 ],\n       [0.75],\n       [1.  ]])\n```\n:::\n:::\n\n\n::: {#8deacbb8 .cell execution_count=11}\n``` {.python .cell-code}\nimport numpy as np\nfrom sklearn.preprocessing import Normalizer\n\ndata = np.array([[1.0, 2.0], [2.0, 3.0], [3.0, 4.0], [4.0, 5.0], [5.0, 6.0]])\n\nscaler = Normalizer(norm='l2')\nX_transformed = scaler.fit_transform(data.T).T\nX_transformed\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\narray([[0.13483997, 0.21081851],\n       [0.26967994, 0.31622777],\n       [0.40451992, 0.42163702],\n       [0.53935989, 0.52704628],\n       [0.67419986, 0.63245553]])\n```\n:::\n:::\n\n\n::: {#00037616 .cell execution_count=12}\n``` {.python .cell-code}\nfrom sklearn.preprocessing import MinMaxScaler\nminmax_scaler = MinMaxScaler(feature_range=(0, 1))\nminmax_scaler.fit_transform(data)\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```\narray([[0.  , 0.  ],\n       [0.25, 0.25],\n       [0.5 , 0.5 ],\n       [0.75, 0.75],\n       [1.  , 1.  ]])\n```\n:::\n:::\n\n\n::: {#b3f95cc0 .cell execution_count=13}\n``` {.python .cell-code}\ndata = pd.read_csv('_data/class/homeprices.csv')\ndf = pd.DataFrame(data)\n\ndummies = pd.get_dummies(df.town)\nmerged = pd.concat([df, dummies], axis='columns')\nmerged\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>town</th>\n      <th>area</th>\n      <th>price</th>\n      <th>monroe township</th>\n      <th>robinsville</th>\n      <th>west windsor</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>monroe township</td>\n      <td>2600</td>\n      <td>550000</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>monroe township</td>\n      <td>3000</td>\n      <td>565000</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>monroe township</td>\n      <td>3200</td>\n      <td>610000</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>monroe township</td>\n      <td>3600</td>\n      <td>680000</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>monroe township</td>\n      <td>4000</td>\n      <td>725000</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>west windsor</td>\n      <td>2600</td>\n      <td>585000</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>west windsor</td>\n      <td>2800</td>\n      <td>615000</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>west windsor</td>\n      <td>3300</td>\n      <td>650000</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>west windsor</td>\n      <td>3600</td>\n      <td>710000</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>robinsville</td>\n      <td>2600</td>\n      <td>575000</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>robinsville</td>\n      <td>2900</td>\n      <td>600000</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>robinsville</td>\n      <td>3100</td>\n      <td>620000</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>robinsville</td>\n      <td>3600</td>\n      <td>695000</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#6c3acc55 .cell execution_count=14}\n``` {.python .cell-code}\nfinal = merged.drop(['town', 'west windsor'], axis='columns')\nfinal\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>area</th>\n      <th>price</th>\n      <th>monroe township</th>\n      <th>robinsville</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2600</td>\n      <td>550000</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3000</td>\n      <td>565000</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3200</td>\n      <td>610000</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3600</td>\n      <td>680000</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4000</td>\n      <td>725000</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2600</td>\n      <td>585000</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2800</td>\n      <td>615000</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>3300</td>\n      <td>650000</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>3600</td>\n      <td>710000</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2600</td>\n      <td>575000</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>2900</td>\n      <td>600000</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>3100</td>\n      <td>620000</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>3600</td>\n      <td>695000</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#94d8fbde .cell execution_count=15}\n``` {.python .cell-code}\nX = final.drop('price', axis='columns')\nX\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>area</th>\n      <th>monroe township</th>\n      <th>robinsville</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2600</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3000</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3200</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3600</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4000</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2600</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2800</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>3300</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>3600</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2600</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>2900</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>3100</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>3600</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#6678a247 .cell execution_count=16}\n``` {.python .cell-code}\ny = final.price\ny\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```\n0     550000\n1     565000\n2     610000\n3     680000\n4     725000\n5     585000\n6     615000\n7     650000\n8     710000\n9     575000\n10    600000\n11    620000\n12    695000\nName: price, dtype: int64\n```\n:::\n:::\n\n\n::: {#067a6f13 .cell execution_count=17}\n``` {.python .cell-code}\nfrom sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\nmodel.fit(X, y)\nmodel.predict([[2800, 0, 1]])\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/home/cryscham123/.local/lib/python3.12/site-packages/sklearn/base.py:493: UserWarning:\n\nX does not have valid feature names, but LinearRegression was fitted with feature names\n\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=17}\n```\narray([590775.63964739])\n```\n:::\n:::\n\n\n::: {#7796f570 .cell execution_count=18}\n``` {.python .cell-code}\nmodel.score(X, y)\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```\n0.9573929037221873\n```\n:::\n:::\n\n\n::: {#4ac58b85 .cell execution_count=19}\n``` {.python .cell-code}\nfrom sklearn.preprocessing import LabelEncoder\n\nle = LabelEncoder()\ndfle = df\ndfle.town = le.fit_transform(dfle.town)\ndfle\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>town</th>\n      <th>area</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>2600</td>\n      <td>550000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>3000</td>\n      <td>565000</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>3200</td>\n      <td>610000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>3600</td>\n      <td>680000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>4000</td>\n      <td>725000</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2</td>\n      <td>2600</td>\n      <td>585000</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2</td>\n      <td>2800</td>\n      <td>615000</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2</td>\n      <td>3300</td>\n      <td>650000</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2</td>\n      <td>3600</td>\n      <td>710000</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1</td>\n      <td>2600</td>\n      <td>575000</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>1</td>\n      <td>2900</td>\n      <td>600000</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>1</td>\n      <td>3100</td>\n      <td>620000</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>1</td>\n      <td>3600</td>\n      <td>695000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "08_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}