{
  "hash": "9d57a69d95ba72dff0aa77f269afde4d",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"pandas\"\ndate: 2025-03-24\ncategories: [\"data mining\"]\n---\n\n\n\n\n![](/img/human-thumb.jpg){.post-thumbnail}\n\n::: {#478dad29 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\n\ndata = [[1.4, np.nan],\n        [7.1, -4.5],\n        [np.nan, np.nan],\n        [0.75, -1.3]]\ndf = pd.DataFrame(data, columns=['one', 'two'], index=['a', 'b', 'c', 'd'])\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>one</th>\n      <th>two</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>a</th>\n      <td>1.40</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>b</th>\n      <td>7.10</td>\n      <td>-4.5</td>\n    </tr>\n    <tr>\n      <th>c</th>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>d</th>\n      <td>0.75</td>\n      <td>-1.3</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#0588af7e .cell execution_count=2}\n``` {.python .cell-code}\ndf.sum(axis=0)\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\none    9.25\ntwo   -5.80\ndtype: float64\n```\n:::\n:::\n\n\n::: {#1b1bc79b .cell execution_count=3}\n``` {.python .cell-code}\ndf.sum(axis=1)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\na    1.40\nb    2.60\nc    0.00\nd   -0.55\ndtype: float64\n```\n:::\n:::\n\n\n::: {#080d79db .cell execution_count=4}\n``` {.python .cell-code}\ndf.mean(axis=1, skipna=False)\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\na      NaN\nb    1.300\nc      NaN\nd   -0.275\ndtype: float64\n```\n:::\n:::\n\n\n::: {#3bba8348 .cell execution_count=5}\n``` {.python .cell-code}\ndf['one'].sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\n9.25\n```\n:::\n:::\n\n\n::: {#9034fe93 .cell execution_count=6}\n``` {.python .cell-code}\ndf.loc['b'].sum().round(2)\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\n2.6\n```\n:::\n:::\n\n\n::: {#5506ede8 .cell execution_count=7}\n``` {.python .cell-code}\ndf2 = pd.DataFrame(np.random.randn(6, 4), columns=['A', 'B', 'C', 'D'], index=pd.date_range(\"2025-03-24\", periods=6))\ndf2\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2025-03-24</th>\n      <td>-2.067944</td>\n      <td>0.005654</td>\n      <td>-0.247531</td>\n      <td>0.415550</td>\n    </tr>\n    <tr>\n      <th>2025-03-25</th>\n      <td>-0.060965</td>\n      <td>2.243269</td>\n      <td>0.130425</td>\n      <td>-1.306482</td>\n    </tr>\n    <tr>\n      <th>2025-03-26</th>\n      <td>0.694764</td>\n      <td>-1.074375</td>\n      <td>1.032794</td>\n      <td>-0.562044</td>\n    </tr>\n    <tr>\n      <th>2025-03-27</th>\n      <td>0.095192</td>\n      <td>-0.074051</td>\n      <td>-0.285623</td>\n      <td>0.045712</td>\n    </tr>\n    <tr>\n      <th>2025-03-28</th>\n      <td>-2.189070</td>\n      <td>0.637167</td>\n      <td>1.609518</td>\n      <td>0.632818</td>\n    </tr>\n    <tr>\n      <th>2025-03-29</th>\n      <td>-0.941798</td>\n      <td>-0.413012</td>\n      <td>-0.463396</td>\n      <td>0.260044</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#56c76b77 .cell execution_count=8}\n``` {.python .cell-code}\ndf2['A'].corr(df2['B'])\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\n-0.13561373135141022\n```\n:::\n:::\n\n\n::: {#1b6721e9 .cell execution_count=9}\n``` {.python .cell-code}\ndf2['B'].cov(df2['C'])\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\n0.005500285499809432\n```\n:::\n:::\n\n\n::: {#f558f429 .cell execution_count=10}\n``` {.python .cell-code}\ndf2['A'].isin(['alpha', 'beta'])\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n2025-03-24    False\n2025-03-25    False\n2025-03-26    False\n2025-03-27    False\n2025-03-28    False\n2025-03-29    False\nFreq: D, Name: A, dtype: bool\n```\n:::\n:::\n\n\n",
    "supporting": [
      "07_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}