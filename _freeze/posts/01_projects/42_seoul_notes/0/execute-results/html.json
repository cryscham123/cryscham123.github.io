{
  "hash": "6753fcaac48472117b3b87b33476d4f9",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"ft_printf\"\ndate: 2025-01-12\ncategories: [\"printf\", \"c\", \"42 seoul\"]\ndirectories: [\"42_seoul_notes\"]\n---\n\n\n\n\n![](/img/stat-thumb.jpg){.post-thumbnail}\n\n거의 2년이 지난 코드를 다시 보니 정말 하나도 기억이 안난다.\n\n[project](https://cdn.intra.42.fr/pdf/pdf/143719/en.subject.pdf)\n[github](https://github.com/cryscham123/my_printf)\n[평가](https://projects.intra.42.fr/42cursus-ft_printf/mine)\n\n[c99 문서](https://www.dii.uchile.cl/~daespino/files/Iso_C_1999_definition.pdf) 260p, 285p\n\n## 코드 구조\n\n## 코드\n\n\n\n\n```{cpp}\n/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   ft_printf.c                                        :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: hyunghki <marvin@42.fr>                    +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2023/04/26 16:29:39 by hyunghki          #+#    #+#             */\n/*   Updated: 2023/05/17 14:43:50 by hyunghki         ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#include \"ft_printf.h\"\n\nstatic void\tft_flag_validate(t_info *i)\n{\n\tif ((i->flag & F_ZERO) && (i->flag & F_LEFT))\n\t\ti->flag &= ~F_ZERO;\n\tif ((i->flag & F_ZERO) && (i->flag & F_PREC))\n\t\ti->flag &= ~F_ZERO;\n\tif ((i->flag & F_SPACE) && (i->flag & F_PLUS))\n\t\ti->flag &= ~F_SPACE;\n}\n\nstatic int\tft_parse(va_list *ap, char c, t_info i)\n{\n\tint\tstatus;\n\n\ti.cmd = c;\n\tft_flag_validate(&i);\n\tif (c == 'c')\n\t\tstatus = ft_putchr((char)(va_arg(*ap, size_t)), &i);\n\telse if (c == '%')\n\t\tstatus = ft_putchr('%', &i);\n\telse if (c == 's')\n\t\tstatus = ft_printstr(va_arg(*ap, char *), &i);\n\telse if (c == 'd' || c == 'i')\n\t\tstatus = ft_putnum(va_arg(*ap, int), &i, 0);\n\telse if (c == 'u')\n\t\tstatus = ft_putnum(va_arg(*ap, unsigned int), &i, 0);\n\telse if (c == 'p')\n\t\tstatus = ft_puthex((unsigned long long)va_arg(*ap, void *), &i, 0);\n\telse\n\t\tstatus = ft_puthex(va_arg(*ap, unsigned int), &i, 0);\n\tif (status < 0 || ft_padding(&i, i.cnt) < 0)\n\t\treturn (-1);\n\treturn (i.cnt);\n}\n\nstatic int\tft_convert(va_list *ap, const char **s)\n{\n\tt_info\ti;\n\tint\t\ttmp;\n\n\ti.flag = 0;\n\ti.cnt = 0;\n\ti.field[0] = 0;\n\ti.field[1] = 0;\n\twhile (**s == '#' || **s == ' ' || **s == '0' || **s == '-' || **s == '+')\n\t{\n\t\ttmp = \"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0!!1!!!!!!!2!3!!4\"[(int)**s];\n\t\ti.flag |= (1 << (tmp - '0'));\n\t\t(*s)++;\n\t}\n\twhile (**s == '.' || (**s >= '1' && **s <= '9'))\n\t{\n\t\ttmp = (**s == '.');\n\t\t(*s) += tmp;\n\t\ti.flag |= (F_WDTH >> tmp);\n\t\twhile (**s >= '0' && **s <= '9')\n\t\t{\n\t\t\ti.field[tmp] = i.field[tmp] * 10 + (**s - '0');\n\t\t\t(*s)++;\n\t\t}\n\t}\n\treturn (ft_parse(ap, **s, i));\n}\n\nint\tft_printf(const char *s, ...)\n{\n\tva_list\tap;\n\tint\t\tcnt;\n\tint\t\ttmp;\n\n\tva_start(ap, s);\n\tcnt = 0;\n\twhile (*s != '\\0')\n\t{\n\t\tif (*s == '%')\n\t\t{\n\t\t\ts++;\n\t\t\ttmp = ft_convert(&ap, &s);\n\t\t}\n\t\telse\n\t\t\ttmp = write(1, s, 1);\n\t\tif (tmp < 0)\n\t\t\treturn (-1);\n\t\tcnt += tmp;\n\t\ts++;\n\t}\n\tva_end(ap);\n\treturn (cnt);\n}\n```\n\n\n\n\n```cpp\n/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   parse.c                                            :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: hyunghki <marvin@42.fr>                    +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2023/04/26 16:30:02 by hyunghki          #+#    #+#             */\n/*   Updated: 2023/04/26 16:30:07 by hyunghki         ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#include \"ft_printf.h\"\n\nint\tft_putchr(char c, t_info *i)\n{\n\tif (c == '!' && i->cmd != 'c' && i->cmd != 's')\n\t\treturn (0);\n\tif ((i->cmd == 'c' || i->cmd == '%') && !(i->flag & F_LEFT))\n\t\tif (ft_padding(i, 1) < 0)\n\t\t\treturn (-1);\n\ti->cnt++;\n\treturn (write(1, &c, 1));\n}\n\nint\tft_printstr(char *s, t_info *i)\n{\n\tint\tlen;\n\n\tlen = 0;\n\tif (s == NULL)\n\t\treturn (ft_printstr(\"(null)\", i));\n\twhile (s[len] && !((i->flag & F_PREC) && len >= i->field[1]))\n\t\tlen++;\n\tif (!(i->flag & F_LEFT))\n\t\tif (ft_padding(i, len) < 0)\n\t\t\treturn (-1);\n\tlen = 0;\n\twhile (s[len] && !((i->flag & F_PREC) && len >= i->field[1]))\n\t{\n\t\tif (ft_putchr(s[len], i) < 0)\n\t\t\treturn (-1);\n\t\tlen++;\n\t}\n\treturn (0);\n}\n\nint\tft_putnum(long long num, t_info *i, int cur)\n{\n\tint\tis_sign;\n\tint\tis_put;\n\n\tif (num < 0)\n\t\ti->flag |= (F_PLUS + F_SPACE);\n\tnum *= 1 * (num >= 0) + -1 * (num < 0);\n\tis_sign = (i->flag & (F_PLUS + F_SPACE)) != 0;\n\tis_put = !(num == 0 && cur == 0 && i->field[1] == 0 && (i->flag & F_PREC));\n\tif (num < 10)\n\t{\n\t\tif ((i->flag & F_ZERO) && ft_putchr(\"! !!+-\"[i->flag & 5], i) < 0)\n\t\t\treturn (-1);\n\t\tif (!(i->flag & F_LEFT))\n\t\t\tif (ft_padding(i, ft_max(cur + is_put, i->field[1]) + is_sign) < 0)\n\t\t\t\treturn (-1);\n\t\tif (!(i->flag & F_ZERO) && ft_putchr(\"! !!+-\"[i->flag & 5], i) < 0)\n\t\t\treturn (-1);\n\t\tif ((i->flag & F_PREC))\n\t\t\treturn (ft_precision(i, num, cur, num % 10 + '0'));\n\t\treturn (ft_putchr(num % 10 + '0', i));\n\t}\n\tif (ft_putnum(num / 10, i, cur + 1) < 0 || ft_putchr(num % 10 + '0', i) < 0)\n\t\treturn (-1);\n\treturn (0);\n}\n\nint\tft_puthex(unsigned long long num, t_info *i, int cur)\n{\n\tchar\ts;\n\tint\t\tis_sign;\n\n\ts = \"0123456789ABCDEF\"[num % 16] | 32 * (i->cmd == 'x' || i->cmd == 'p');\n\tis_sign = (i->cmd == 'p' || (!(cur == 0 && num == 0) && (i->flag & 2))) * 2;\n\tif (num < 16)\n\t{\n\t\tif ((i->flag & F_ZERO) && is_sign != 0)\n\t\t\tif (ft_putchr('0', i) < 0 || ft_putchr(\"xX\"[i->cmd == 'X'], i) < 0)\n\t\t\t\treturn (-1);\n\t\tif (!(i->flag & F_LEFT))\n\t\t\tif (ft_padding(i, ft_max(cur + 1, i->field[1]) + is_sign) < 0)\n\t\t\t\treturn (-1);\n\t\tif (!(i->flag & F_ZERO) && is_sign != 0)\n\t\t\tif (ft_putchr('0', i) < 0 || ft_putchr(\"xX\"[i->cmd == 'X'], i) < 0)\n\t\t\t\treturn (-1);\n\t\tif ((i->flag & F_PREC))\n\t\t\treturn (ft_precision(i, num, cur, s));\n\t\treturn (ft_putchr(s, i));\n\t}\n\tif (ft_puthex(num / 16, i, cur + 1) < 0 || ft_putchr(s, i) < 0)\n\t\treturn (-1);\n\treturn (0);\n}\n```\n\n```cpp\n/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   flag_utils.c                                       :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: hyunghki <marvin@42.fr>                    +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2023/04/26 16:30:14 by hyunghki          #+#    #+#             */\n/*   Updated: 2023/04/26 16:30:18 by hyunghki         ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#include \"ft_printf.h\"\n\nint\tft_max(int a, int b)\n{\n\tif (a >= b)\n\t\treturn (a);\n\treturn (b);\n}\n\nint\tft_padding(t_info *i, int n)\n{\n\tchar\tpadding;\n\n\tpadding = ' ';\n\tif (i->flag & F_ZERO)\n\t\tpadding = '0';\n\twhile ((i->flag & F_WDTH) && n < i->field[0])\n\t{\n\t\tif (write(1, &padding, 1) < 0)\n\t\t\treturn (-1);\n\t\ti->cnt++;\n\t\tn++;\n\t}\n\treturn (0);\n}\n\nint\tft_precision(t_info *i, int num, int n, int target)\n{\n\tif (num == 0 && n == 0 && i->field[1] == 0)\n\t\treturn (0);\n\twhile ((i->flag & F_PREC) && n < i->field[1] - 1)\n\t{\n\t\tif (ft_putchr('0', i) < 0)\n\t\t\treturn (-1);\n\t\tn++;\n\t}\n\treturn (ft_putchr(target, i));\n}\n```\n\n```cpp\n/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   ft_printf.h                                        :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: hyunghki <marvin@42.fr>                    +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2023/04/26 16:29:53 by hyunghki          #+#    #+#             */\n/*   Updated: 2023/04/26 16:29:56 by hyunghki         ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#ifndef FT_PRINTF_H\n# define FT_PRINTF_H\n\n# define F_WDTH 64\n# define F_PREC 32\n# define F_ZERO 16\n# define F_LEFT 8\n# define F_PLUS 4\n# define F_SHAP 2\n# define F_SPACE 1\n\n# include <stdarg.h>\n# include <unistd.h>\n\ntypedef struct s_info\n{\n\tunsigned int\tflag;\n\tint\t\t\t\tfield[2];\n\tint\t\t\t\tcnt;\n\tchar\t\t\tcmd;\n}\tt_info;\n\nint\tft_printf(const char *s, ...);\nint\tft_putchr(char c, t_info *i);\nint\tft_printstr(char *s, t_info *i);\nint\tft_putnum(long long num, t_info *i, int cur);\nint\tft_puthex(unsigned long long n, t_info *i, int cur);\nint\tft_max(int a, int b);\nint\tft_padding(t_info *i, int n);\nint\tft_precision(t_info *i, int num, int n, int target);\n\n#endif\n```\n\n",
    "supporting": [
      "0_files"
    ],
    "filters": [],
    "includes": {}
  }
}