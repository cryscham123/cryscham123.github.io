{
  "hash": "0078506e572007b32a7116b92194cfe3",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"2-기초(1)\"\ndate: 2025-01-10\ncategories: [\"선형 대수\"]\ndirectories: [\"선형대수_복습\"]\n---\n\n\n\n\n![](/img/human-thumb.jpg){.post-thumbnail}\n\n## Vector\n\nvector는 크기와 방향을 가지고 있다.\n\n### Example\n\n\\begin{bmatrix}\n3 \\\\\n2\n\\end{bmatrix}\n\n::: {#9e0b0492 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display}\n![](1_files/figure-html/cell-2-output-1.png){width=591 height=434}\n:::\n:::\n\n\n- 크기: $\\sqrt{9 + 4} = \\sqrt{13}$\n- 방향: $tan^{-1}(\\frac{2}{3})$\n\n크기와 방향이 같으면 같은 벡터이다.\n\n### 덧셈\n\n벡터의 덧셈을 기하학적으로 알아보자\n\n$$\n\\begin{bmatrix}\n3 \\\\\n2\n\\end{bmatrix} +\n\\begin{bmatrix}\n-2 \\\\\n1\n\\end{bmatrix}\n$$\n\n위의 수식을 좌표평면에 나타나면 다음과 같다.\n\n::: {#5172b610 .cell execution_count=2}\n\n::: {.cell-output .cell-output-display}\n![](1_files/figure-html/cell-3-output-1.png){width=591 height=434}\n:::\n:::\n\n\n끝점을 다 더한 좌표와 시작 점을 연결한 벡터인 `초록색 화살표`가 두 벡터의 합이 된다.\n\n### Scalar 배\n\nvector에 scalar, 즉 숫자 하나를 곱하면 무슨 일이 생길까?\n\n$$\n2 * \\begin{bmatrix}\n2 \\\\\n1\n\\end{bmatrix} =\n\\begin{bmatrix}\n4 \\\\\n2\n\\end{bmatrix}\n$$\n$$\n-2 * \\begin{bmatrix}\n2 \\\\\n1\n\\end{bmatrix} = \n\\begin{bmatrix}\n-4 \\\\\n-2\n\\end{bmatrix}\n$$\n\n마찬가지로 좌표평면으로 나타내는건 귀찮아서 생략하겠다.\n\n::: {.callout-note appearance=\"simple\"}\nScalar 배를 한 벡터끼리 더하면 모든 2차원 좌표를 표현할 수 있다.\n:::\n\n## 전치 (Transpose)\n\n행렬 $A$의 요소 $a_{ij}$는 A의 Transpose인 $A^T$의 $a_{ji}$가 된다.\n즉, 행렬 $A$를 전치하면 diagnal(대각선 요소)를 제외한 모든 요소가 대각선을 기준으로 서로 뒤바뀐다.\n\n> `Symmetrix matrix`: $A = A^T$인 행렬, 즉 대각선을 기준으로 값이 전부 같은 행렬\n> `Hermitian matrix`: $(A^*)^T = A^H(conjugate transpose) = A$를 만족하는 행렬\n\nVector의 경우에는 Column Vector의 경우, Transpose시 Row Vector로, Row Vector의 경우도 반대로 작용한다.\n\n### Properties\n\n1. $(A^T)^T = A$\n1. $(A+B)^T = A^T + B^T$\n1. $\\color{red}{(AB)^T = B^TA^T}$\n   \n   $(A^TA)^T$와 $(AA^T)^T$의 결과는 항상 자기 자신이 된다. → `Symmetrix matrix`\n1. $C(A)^T = CA^T$\n1. $det(A^T) = det(A)$\n1. $(A^T)^{-1} = (A^{-1})^T$\n\n## Inner Product & Projection\n\n$$\n\\underset{a}{\\begin{bmatrix}\n1 \\\\\n3\n\\end{bmatrix}} *\n\\underset{b}{\\begin{bmatrix}\n5 \\\\\n1\n\\end{bmatrix}} = 1 * 5 + 3 * 1 = 8 = a^Tb = b^Ta\n$$\n\n갑자기 등장한 $a^Tb$가 의미하는건 아래와 같다.\n\n$a^Tb = ||a||*||b||cosθ$\n\n> ||a||는 a 벡터의 크기를 의미한다.\n\n위의 식을 그림으로 표현해보자\n\n::: {#19a2b37c .cell execution_count=3}\n\n::: {.cell-output .cell-output-display}\n![](1_files/figure-html/cell-4-output-1.png){width=648 height=490}\n:::\n:::\n\n\n내적은 초록색 화살표와 파란색 화살표의 곱으로 표현할 수 있다.  \n이는 a 벡터가 b 벡터의 방향에 대해 얼마나 투영되었는지를 나타낸다.  \n두 벡터의 방향이 일치할 때 내적의 값이 가장 크고, 수직일 때 0 (안 닮음을 의미), 반대 방향일 때 가장 작은 값이 된다.\n\n### 단위 벡터(크기가 1인 벡터) 계산\n\n위의 식으로 부터 다음의 추론 과정을 통해 단위 벡터를 계산할 수 있다.\n\n$a^Ta = ||a||^2$  \n∴ $||a|| = \\sqrt{a^Ta}$  \n∴ 단위 벡터는 $\\frac{a}{||a||}$ = $\\frac{a}{\\sqrt{a^Ta}}$\n\n### 정사형 벡터의 좌표 계산\n\n벡터의 `좌표`는 `방향과 크기의 곱`으로 표현할 수 있다.  \n$a^Tb = ||a||*||b||cosθ$  \n정사형 벡터의 크기는 $\\frac{a^Tb}{||b||} = \\frac{a^Tb}{\\sqrt{b^Tb}}$  \n장사형 벡터의 방향은 b의 단위 벡터와 같다.  \n즉, 정사형 벡터의 좌표는 $\\frac{a^Tb}{\\sqrt{b^Tb}} * \\frac{b}{\\sqrt{b^Tb}} = \\frac{a^Tb}{b^Tb}b$\n\n$a^T\\frac{b}{\\sqrt{b^Tb}}*\\frac{b}{\\sqrt{b^Tb}}$로도 구할 수 있다.\n\n> a와 수직으로 연결되는 정사형 벡터 $\\hat{x}$  \n> $(a-b\\hat{x})^Tb\\hat{x} = 0$  \n> $a^Tb - b^Tbb\\hat{x} = 0$  \n> $\\hat{x} = \\frac{a^Tb}{b^Tb}$\n\n## Norm\n\n크기를 나타내는 것(0 포함, 양 음수 scalar)\n\n### 2-Norm ($l_2$-norm)\n\n벡터의 물리적인 길이.\n\n$$\na = \\begin{bmatrix}\n1 \\\\\n2 \\\\\n3\n\\end{bmatrix}\n$$\n\n$||a||_2 = \\sqrt{1^2+2^2+3^2} = (|1|^{\\color{red}{2}}+|2|^{\\color{red}{2}}+|3|^{\\color{red}{2}})^{\\color{red}{\\frac{1}{2}}}$\n\n2 제곱에, $\\frac{1}{2}$여서 2-norm이다.\n\n> 두 벡터 사이의 거리는 두 벡터의 차이의 2-norm이다.\n\n### 1-Norm ($l_1$-norm)\n\n1 제곱에 $\\frac{1}{1}$을 계산해주면 된다.\n\n$||a||_1 = (|1|^1+|2|^1+|3|^1)^{\\frac{1}{1}}$\n\n### p-Norm ($l_p$-norm)\n\n$||a||_p = (|x_1|^p+|x_2|^p+|x_3|^p+...)^{\\frac{1}{p}} = (\\underset{t}{\\Sigma} |x_t|^p)^{\\frac{1}{p}} \\quad (p ≥ 1)$\n\n### infinity-Norm\n\n$||a||_∞ = \\underset{t}{max}|x_t|$\n\n1-norm, 2-norm, infinity-norm의 값이 1이 되는 모든 벡터들을 좌표평면에 나타내면 다음과 같다.\n\n::: {#3321c794 .cell execution_count=4}\n\n::: {.cell-output .cell-output-display}\n![](1_files/figure-html/cell-5-output-1.png){width=592 height=579}\n:::\n:::\n\n\n같은 벡터일 때, 1-norm ≥ 2-norm ≥ ∞-norm 순으로 크다.\n\n",
    "supporting": [
      "1_files"
    ],
    "filters": [],
    "includes": {}
  }
}