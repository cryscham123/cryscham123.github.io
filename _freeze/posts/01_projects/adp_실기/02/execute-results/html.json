{
  "hash": "a93da9069384da89f21ddd2631137515",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"EDA와 시각화\"\ndate: 2024-12-30\ncategories: [\"데이터 분석\"]\ndirectories: [\"adp_실기\"]\n---\n\n\n\n\n![](/img/stat-thumb.jpg){.post-thumbnail}\n\n## EDA(Exploratory Data Analysis)\n\n: 데이터의 특징과 데이터에 내재된 관계를 알아내기 위해 그래프와 통계적 분석 방법을 활용하여 탐구하는 것\n\n### 주제\n\n1. 저항성 강조: 부분적 변동(이상치 등)에 대한 민감성 확인\n2. 잔차 계산\n3. 자료변수의 재표현: 변수를 적당한 척도로 바꾸는 것\n4. 그래프를 통한 현시성\n\n## 막대 그래프\n\n`범주형 데이터`를 요약하고 시각적으로 비교하는 데 활용\n\n::: {#ee5925b6 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import load_wine\n\nwine_load = load_wine()\nwine = pd.DataFrame(wine_load.data, columns=wine_load.feature_names)\nwine_load\nwine['Class'] = wine_load.target\nwine['Class'] = wine['Class'].map({0: 'class_0', 1: 'class_1', 2: 'class_2'})\n\nwine_type = wine['Class'].value_counts()\nwine_type\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\nClass\nclass_1    71\nclass_0    59\nclass_2    48\nName: count, dtype: int64\n```\n:::\n:::\n\n\n::: {#aa058f8e .cell execution_count=2}\n``` {.python .cell-code}\n# 수직 막대\nplt.bar(wine_type.index, wine_type.values, width=0.8, bottom=None, align = 'center')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](02_files/figure-html/cell-3-output-1.png){width=566 height=411}\n:::\n:::\n\n\n::: {#89ff6be4 .cell execution_count=3}\n``` {.python .cell-code}\n# 수평 막대\nplt.barh(wine_type.index, wine_type.values, height=0.8, left=None, align = 'center')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](02_files/figure-html/cell-4-output-1.png){width=598 height=411}\n:::\n:::\n\n\n각 범주의 값의 갯수 `차이가 극단적`인지 확인한다.\n극단적일 경우, 전처리 과정에서 `업/다운 샘플링 등을 통해 갯수가 유사해지도록 조정`해야한다.\n\n## 히스토그램\n\n`연속형 데이터`의 분포를 확인하는 데 활용\n\n::: {#f92db6e5 .cell execution_count=4}\n``` {.python .cell-code}\nplt.title('Wine alcohol histogram')\nplt.hist('alcohol', bins=8, range=(11, 15), color='purple', data=wine)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](02_files/figure-html/cell-5-output-1.png){width=566 height=431}\n:::\n:::\n\n\n## box plot\n\n`수치형 변수`의 분포를 확인하는 그래프\n\n::: {#3e13a0b0 .cell execution_count=5}\n``` {.python .cell-code}\nfrom sklearn.datasets import load_iris\n\niris_load = load_iris()\niris = pd.DataFrame(iris_load.data, columns=iris_load.feature_names)\niris['class'] = iris_load.target\niris['class'] = iris['class'].map({0: 'setosa', 1: 'versicolor', 2: 'virginica'})\n\nplt.boxplot(iris.drop(columns='class'))\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](02_files/figure-html/cell-6-output-1.png){width=558 height=411}\n:::\n:::\n\n\n::: {#5469f523 .cell execution_count=6}\n``` {.python .cell-code}\nimport seaborn as sns\n\nsns.boxplot(x=\"class\", y=\"sepal width (cm)\", data=iris)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](02_files/figure-html/cell-7-output-1.png){width=589 height=432}\n:::\n:::\n\n\n## 산점도\n\n두 개의 `수치형 변수`의 `분포와 관계`를 확인하는 그래프\n\n::: {#c1e96a31 .cell execution_count=7}\n``` {.python .cell-code}\nplt.title('iris scatter')\nplt.xlabel('sepal length (cm)')\nplt.ylabel('sepal width (cm)')\n\nplt.scatter('sepal length (cm)', 'sepal width (cm)', data=iris, alpha=0.5)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](02_files/figure-html/cell-8-output-1.png){width=589 height=449}\n:::\n:::\n\n\n::: {#933297e8 .cell execution_count=8}\n``` {.python .cell-code}\nsns.scatterplot(x='sepal length (cm)', y='sepal width (cm)', hue='class', data=iris, style='class')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](02_files/figure-html/cell-9-output-1.png){width=589 height=432}\n:::\n:::\n\n\n## 선그래프\n\n## 상관관계 시각화\n\n## Pandas Profiling\n\n",
    "supporting": [
      "02_files"
    ],
    "filters": [],
    "includes": {}
  }
}