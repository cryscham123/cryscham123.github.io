{
  "hash": "d53838826bde72b68fd10162c3df6d26",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"로지스틱 회귀\"\ndate: 2025-07-01\ncategories: [\"확률 통계\"]\n---\n\n\n\n\n![](/img/stat-thumb.jpg){.post-thumbnail}\n\n$logO(H|x) = β_0 + β_1x$\n\n## 우주 왕복선 문제\n\n::: {#03633cd8 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\n\ndf = pd.read_csv('https://raw.githubusercontent.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/master/Chapter2_MorePyMC/data/challenger_data.csv')\npred = df.iloc[-1]\ndf = df[:-1].dropna()\noffset = df['Temperature'].mean().round()\ndf['x'] = df['Temperature'] - offset\ndf['y'] = df['Damage Incident'].astype(int)\n\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Temperature</th>\n      <th>Damage Incident</th>\n      <th>x</th>\n      <th>y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>04/12/1981</td>\n      <td>66</td>\n      <td>0</td>\n      <td>-4.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>11/12/1981</td>\n      <td>70</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3/22/82</td>\n      <td>69</td>\n      <td>0</td>\n      <td>-1.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>01/11/1982</td>\n      <td>68</td>\n      <td>0</td>\n      <td>-2.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>04/04/1983</td>\n      <td>67</td>\n      <td>0</td>\n      <td>-3.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>6/18/83</td>\n      <td>72</td>\n      <td>0</td>\n      <td>2.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>8/30/83</td>\n      <td>73</td>\n      <td>0</td>\n      <td>3.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>11/28/83</td>\n      <td>70</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>02/03/1984</td>\n      <td>57</td>\n      <td>1</td>\n      <td>-13.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>04/06/1984</td>\n      <td>63</td>\n      <td>1</td>\n      <td>-7.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>8/30/84</td>\n      <td>70</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>10/05/1984</td>\n      <td>78</td>\n      <td>0</td>\n      <td>8.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>11/08/1984</td>\n      <td>67</td>\n      <td>0</td>\n      <td>-3.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>1/24/85</td>\n      <td>53</td>\n      <td>1</td>\n      <td>-17.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>04/12/1985</td>\n      <td>67</td>\n      <td>0</td>\n      <td>-3.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>4/29/85</td>\n      <td>75</td>\n      <td>0</td>\n      <td>5.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>6/17/85</td>\n      <td>70</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>7/29/85</td>\n      <td>81</td>\n      <td>0</td>\n      <td>11.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>8/27/85</td>\n      <td>76</td>\n      <td>0</td>\n      <td>6.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>10/03/1985</td>\n      <td>79</td>\n      <td>0</td>\n      <td>9.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>10/30/85</td>\n      <td>75</td>\n      <td>1</td>\n      <td>5.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>11/26/85</td>\n      <td>76</td>\n      <td>0</td>\n      <td>6.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>01/12/1986</td>\n      <td>58</td>\n      <td>1</td>\n      <td>-12.0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### 전통 로지스틱\n\n::: {#502d4dc8 .cell execution_count=2}\n``` {.python .cell-code}\nimport statsmodels.formula.api as smf\n\nformula = 'y ~ x'\nresults = smf.logit(formula, data=df).fit(disp=False)\nresults.params\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\nIntercept   -1.208490\nx           -0.232163\ndtype: float64\n```\n:::\n:::\n\n\n::: {#1e8ff3e5 .cell execution_count=3}\n``` {.python .cell-code}\nfrom scipy.special import expit\nimport matplotlib.pyplot as plt\n\nplt.rcParams['font.family'] = 'Noto Sans KR'\n\ninter = results.params['Intercept']\nslope = results.params['x']\nxs = np.arange(53, 83) - offset\nps = expit(inter + slope * xs)\nplt.plot(xs + offset, ps)\nplt.scatter(df['x'] + offset, df['y'])\n```\n\n::: {.cell-output .cell-output-display}\n![](15_files/figure-html/cell-4-output-1.png){width=568 height=412}\n:::\n:::\n\n\n### 사전 분포\n\n::: {#5f4e805e .cell execution_count=4}\n``` {.python .cell-code}\nfrom empiricaldist import Pmf\n\ndef make_joint(pmf1, pmf2):\n    X, Y = np.meshgrid(pmf1, pmf2)\n    return pd.DataFrame(X * Y, columns=pmf1.qs, index=pmf2.qs)\n\nqs = np.linspace(-5, 1, 101)\nprior_inter = Pmf.from_seq(qs)\nqs = np.linspace(-0.8, 0.1, 101)\nprior_slope = Pmf.from_seq(qs)\njoint = make_joint(prior_inter, prior_slope)\njoint_pmf = Pmf(joint.stack())\njoint_pmf\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>probs</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">-0.8</th>\n      <th>-5.00</th>\n      <td>0.000098</td>\n    </tr>\n    <tr>\n      <th>-4.94</th>\n      <td>0.000098</td>\n    </tr>\n    <tr>\n      <th>-4.88</th>\n      <td>0.000098</td>\n    </tr>\n    <tr>\n      <th>-4.82</th>\n      <td>0.000098</td>\n    </tr>\n    <tr>\n      <th>-4.76</th>\n      <td>0.000098</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">0.1</th>\n      <th>0.76</th>\n      <td>0.000098</td>\n    </tr>\n    <tr>\n      <th>0.82</th>\n      <td>0.000098</td>\n    </tr>\n    <tr>\n      <th>0.88</th>\n      <td>0.000098</td>\n    </tr>\n    <tr>\n      <th>0.94</th>\n      <td>0.000098</td>\n    </tr>\n    <tr>\n      <th>1.00</th>\n      <td>0.000098</td>\n    </tr>\n  </tbody>\n</table>\n<p>10201 rows × 1 columns</p>\n</div>\n```\n:::\n:::\n\n\n### 가능도\n\n::: {#da240aa7 .cell execution_count=5}\n``` {.python .cell-code}\nfrom scipy.stats import binom\n\ngrouped = df.groupby('x')['y'].agg(['count', 'sum'])\nns = grouped['count']\nks = grouped['sum']\nxs = grouped.index\nps = expit(inter + slope * xs)\nlikes = binom.pmf(ks, ns, ps)\nlikes\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\narray([0.93924781, 0.85931657, 0.82884484, 0.60268105, 0.56950687,\n       0.24446388, 0.67790595, 0.72637895, 0.18815003, 0.8419509 ,\n       0.87045398, 0.15645171, 0.86667894, 0.95545945, 0.96435859,\n       0.97729671])\n```\n:::\n:::\n\n\n::: {#89fa1bc6 .cell execution_count=6}\n``` {.python .cell-code}\nlikelihood = joint_pmf.copy()\nfor slope, inter in joint_pmf.index:\n    ps = expit(inter + slope * xs)\n    likes = binom.pmf(ks, ns, ps)\n    likelihood[slope, inter] = likes.prod()\n```\n:::\n\n\n### 갱신\n\n::: {#452601db .cell execution_count=7}\n``` {.python .cell-code}\nposterior_pmf = joint_pmf * likelihood\nposterior_pmf.normalize()\njoint_posterior = posterior_pmf.unstack()\n\nmarginal_inter = Pmf(joint_posterior.sum(axis=0))\nmarginal_inter.normalize()\nmarginal_slope = Pmf(joint_posterior.sum(axis=1))\nmarginal_slope.normalize()\n\nmarginal_inter.plot()\n```\n\n::: {.cell-output .cell-output-display}\n![](15_files/figure-html/cell-8-output-1.png){width=583 height=412}\n:::\n:::\n\n\n::: {#c6b58425 .cell execution_count=8}\n``` {.python .cell-code}\nmarginal_slope.plot()\n```\n\n::: {.cell-output .cell-output-display}\n![](15_files/figure-html/cell-9-output-1.png){width=583 height=412}\n:::\n:::\n\n\n### 분포 변환\n\n::: {#6402c0cf .cell execution_count=9}\n``` {.python .cell-code}\nmarginal_probs = marginal_inter.transform(expit)\nmarginal_lr = marginal_slope.transform(np.exp)\n```\n:::\n\n\n### 예측 분포\n\n::: {#96634644 .cell execution_count=10}\n``` {.python .cell-code}\nsample = posterior_pmf.choice(101)\ntemps = np.arange(31, 83)\nxs = temps - offset\npred = np.empty((len(sample), len(xs)))\nfor i, (slope, inter) in enumerate(sample):\n    pred[i] = expit(inter + slope * xs)\nlow, median, high = np.percentile(pred, [5, 50, 95], axis=0)\nplt.fill_between(temps, low, high, color='C1', alpha=0.2, label='95% 신뢰구간')\nplt.plot(temps, median, color='C1', label='logistic model')\nplt.legend()\nplt.scatter(df['x'] + offset, df['y'], label='data')\n```\n\n::: {.cell-output .cell-output-display}\n![](15_files/figure-html/cell-11-output-1.png){width=568 height=412}\n:::\n:::\n\n\n",
    "supporting": [
      "15_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}