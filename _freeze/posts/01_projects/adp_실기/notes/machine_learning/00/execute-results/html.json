{
  "hash": "18acf7e2e5d7490a58bdb00bc36d1e4c",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Titanic\"\ndate: 2025-07-03\ncategories: [\"확률 통계\"]\n---\n\n\n\n\n![](/img/stat-thumb.jpg){.post-thumbnail}\n\n## Preprocessing\n\n### Data load\n\n::: {#940ce690 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\n\nwarnings.filterwarnings('ignore')\nplt.rcParams['font.family'] = 'Noto Sans KR'\n\ntrain = pd.read_csv('_data/train.csv', index_col=0)\ntest_X = pd.read_csv('_data/test.csv', index_col=0)\ntrain_X = train.drop('Survived', axis=1)\ntrain_y = train.iloc[:, 0]\n```\n:::\n\n\n### 결측치 처리\n\n::: {#7c84a433 .cell execution_count=2}\n``` {.python .cell-code}\ntrain_X.info(), test_X.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nIndex: 891 entries, 1 to 891\nData columns (total 10 columns):\n #   Column    Non-Null Count  Dtype  \n---  ------    --------------  -----  \n 0   Pclass    891 non-null    int64  \n 1   Name      891 non-null    object \n 2   Sex       891 non-null    object \n 3   Age       714 non-null    float64\n 4   SibSp     891 non-null    int64  \n 5   Parch     891 non-null    int64  \n 6   Ticket    891 non-null    object \n 7   Fare      891 non-null    float64\n 8   Cabin     204 non-null    object \n 9   Embarked  889 non-null    object \ndtypes: float64(2), int64(3), object(5)\nmemory usage: 76.6+ KB\n<class 'pandas.core.frame.DataFrame'>\nIndex: 418 entries, 892 to 1309\nData columns (total 10 columns):\n #   Column    Non-Null Count  Dtype  \n---  ------    --------------  -----  \n 0   Pclass    418 non-null    int64  \n 1   Name      418 non-null    object \n 2   Sex       418 non-null    object \n 3   Age       332 non-null    float64\n 4   SibSp     418 non-null    int64  \n 5   Parch     418 non-null    int64  \n 6   Ticket    418 non-null    object \n 7   Fare      417 non-null    float64\n 8   Cabin     91 non-null     object \n 9   Embarked  418 non-null    object \ndtypes: float64(2), int64(3), object(5)\nmemory usage: 35.9+ KB\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\n(None, None)\n```\n:::\n:::\n\n\n- 결측치가 있는 column은 Age, Cabin, Embarked, Fare\n- Cabin은 너무 많으니까 걍 삭제하자\n\n::: {#a61def00 .cell execution_count=3}\n``` {.python .cell-code}\ntrain_X.drop('Cabin', axis=1, inplace=True)\ntest_X.drop('Cabin', axis=1, inplace=True)\n```\n:::\n\n\n- Age, Fare랑 Embarked는 일단 지워보자\n\n::: {#bab8b80e .cell execution_count=4}\n``` {.python .cell-code}\ntrain_X.dropna(subset=['Embarked', 'Age'], inplace=True)\ntest_X.dropna(subset=['Fare', 'Age'], inplace=True)\ntrain_X.info(), test_X.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nIndex: 712 entries, 1 to 891\nData columns (total 9 columns):\n #   Column    Non-Null Count  Dtype  \n---  ------    --------------  -----  \n 0   Pclass    712 non-null    int64  \n 1   Name      712 non-null    object \n 2   Sex       712 non-null    object \n 3   Age       712 non-null    float64\n 4   SibSp     712 non-null    int64  \n 5   Parch     712 non-null    int64  \n 6   Ticket    712 non-null    object \n 7   Fare      712 non-null    float64\n 8   Embarked  712 non-null    object \ndtypes: float64(2), int64(3), object(4)\nmemory usage: 55.6+ KB\n<class 'pandas.core.frame.DataFrame'>\nIndex: 331 entries, 892 to 1307\nData columns (total 9 columns):\n #   Column    Non-Null Count  Dtype  \n---  ------    --------------  -----  \n 0   Pclass    331 non-null    int64  \n 1   Name      331 non-null    object \n 2   Sex       331 non-null    object \n 3   Age       331 non-null    float64\n 4   SibSp     331 non-null    int64  \n 5   Parch     331 non-null    int64  \n 6   Ticket    331 non-null    object \n 7   Fare      331 non-null    float64\n 8   Embarked  331 non-null    object \ndtypes: float64(2), int64(3), object(4)\nmemory usage: 25.9+ KB\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n(None, None)\n```\n:::\n:::\n\n\n### EDA\n\n::: {#2a6d3df4 .cell execution_count=5}\n``` {.python .cell-code}\ntrain_X.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Pclass</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Fare</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>712.000000</td>\n      <td>712.000000</td>\n      <td>712.000000</td>\n      <td>712.000000</td>\n      <td>712.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>2.240169</td>\n      <td>29.642093</td>\n      <td>0.514045</td>\n      <td>0.432584</td>\n      <td>34.567251</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.836854</td>\n      <td>14.492933</td>\n      <td>0.930692</td>\n      <td>0.854181</td>\n      <td>52.938648</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n      <td>0.420000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.000000</td>\n      <td>20.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>8.050000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>2.000000</td>\n      <td>28.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>15.645850</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>3.000000</td>\n      <td>38.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>33.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>3.000000</td>\n      <td>80.000000</td>\n      <td>5.000000</td>\n      <td>6.000000</td>\n      <td>512.329200</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n- Pclass: 명목 1, 2, 3\n- Sex: 명목 male, female\n- Age: 연속형 (0.42~80)\n- SibSp: 명목, 0, 1, 2, 3, 4, 5\n- Parch: 명목, 0, 1, 2, 3, 4, 5, 6\n- Ticket: 541개 짜리 명목\n- Fare: 연속 (34.56~512.32)\n- Embarked: 명목 S C Q\n\n::: {#54559e2d .cell execution_count=6}\n``` {.python .cell-code}\nbindo = pd.DataFrame(train_X['Pclass'].value_counts())\n\nsns.barplot(bindo, x=\"Pclass\", y=\"count\", legend=False)\n```\n\n::: {.cell-output .cell-output-display}\n![](00_files/figure-html/cell-7-output-1.png){width=590 height=430}\n:::\n:::\n\n\n",
    "supporting": [
      "00_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}