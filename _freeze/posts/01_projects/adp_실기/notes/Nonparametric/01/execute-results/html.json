{
  "hash": "2bea28ccbe3aeead3956c2fd1d9246a0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"순열검정과 전통적인 비모수통계\"\ndate: 2025-07-02\ncategories: [\"확률 통계\"]\n---\n\n\n\n\n![](/img/stat-thumb.jpg){.post-thumbnail}\n\n## 부호검정(이항검정)\n\n- 모집단 분포가 정규분포가 아니고, 대칭이 아닐경우 사용\n- 어떤 분포라도 중앙값이 존재한다.\n- 표본 중 절반은 중앙값보다 작고, 절반은 크다.\n- 검정통계량은 $\\sum_{i=1}^{n}I(X_i > θ_0)$\n- 영분포는 B(n, 1/2)를 따른다.\n\n$P(S≥c_{val} | H_0) = \\sum_{k=c_{val}}^{n}nCk(\\frac{1}{2})^n ≤ α$\n\n$c_{val} = Q_{1-α} + 1$\n\n- 만약 이산형 변수여서 $θ_0$와 같은 값이 m개 이면 n - m개에 대해서만 검정을 진행\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsign_test <- function(S0, sample, dir='two') {\n    n <- sum(sample != S0)\n    Sobs <- sum(sample > S0)\n    \n    if (dir == 'greater') {\n        pvalue <- 1 - pbinom(Sobs-1, n, 1/2)\n    } else if (dir == 'less') {\n        pvalue <- pbinom(Sobs, n, 1/2)\n    } else {\n        prob_lower <- pbinom(Sobs, n, 1/2)\n        prob_upper <- 1 - pbinom(Sobs-1, n, 1/2)\n        pvalue <- 2 * min(prob_lower, prob_upper)\n    }\n    \n    return(pvalue)\n}\n\nS0 <- 100\niq <- c(98, 121, 110, 89, 109, 108, 102, 92, 131, 114)\nsign_test(S0, iq, 'greater')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.171875\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nquantile(iq, probs = 0.95)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  95% \n126.5 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsign_test(127.5, iq, 'greater')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9990234\n```\n\n\n:::\n:::\n\n\n\n\n### 부호검정의 영분포 시각화\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n# 부호검정 영분포 plotting 함수\nplot_sign_test_null <- function(sample, S0, dir = 'two', alpha = 0.05) {\n    n <- sum(sample != S0)\n    Sobs <- sum(sample > S0)\n    \n    # 이항분포 B(n, 0.5)의 가능한 값들\n    x_vals <- 0:n\n    probs <- dbinom(x_vals, n, 0.5)\n    \n    # 데이터프레임 생성\n    df <- data.frame(x = x_vals, prob = probs)\n    \n    # p-value 계산 및 영역 표시를 위한 색상 설정\n    if (dir == 'greater') {\n        critical_region <- x_vals >= Sobs\n        pvalue <- 1 - pbinom(Sobs-1, n, 0.5)\n        title_suffix <- \"(우측검정)\"\n    } else if (dir == 'less') {\n        critical_region <- x_vals <= Sobs\n        pvalue <- pbinom(Sobs, n, 0.5)\n        title_suffix <- \"(좌측검정)\"\n    } else {\n        # 양측검정\n        prob_lower <- pbinom(Sobs, n, 0.5)\n        prob_upper <- 1 - pbinom(Sobs-1, n, 0.5)\n        if (prob_lower <= prob_upper) {\n            critical_region <- x_vals <= Sobs | x_vals >= (n - Sobs)\n        } else {\n            critical_region <- x_vals >= Sobs | x_vals <= (n - Sobs)\n        }\n        pvalue <- 2 * min(prob_lower, prob_upper)\n        title_suffix <- \"(양측검정)\"\n    }\n    \n    df$region <- ifelse(critical_region, \"p-value 영역\", \"채택역\")\n    \n    # 그래프 생성\n    p <- ggplot(df, aes(x = x, y = prob)) +\n        geom_col(aes(fill = region), alpha = 0.7, width = 0.8) +\n        geom_point(data = df[df$x == Sobs, ], \n                   aes(x = x, y = prob), \n                   color = \"red\", size = 4, shape = 19) +\n        scale_fill_manual(values = c(\"p-value 영역\" = \"red\", \"채택역\" = \"lightblue\")) +\n        labs(\n            title = paste0(\"부호검정의 영분포 B(\", n, \", 0.5) \", title_suffix),\n            subtitle = paste0(\"관찰값 S = \", Sobs, \", p-value = \", round(pvalue, 4)),\n            x = \"검정통계량 S (중앙값보다 큰 값의 개수)\",\n            y = \"확률\",\n            fill = \"영역\"\n        ) +\n        theme_minimal() +\n        theme(\n            plot.title = element_text(hjust = 0.5, size = 14),\n            plot.subtitle = element_text(hjust = 0.5, size = 12),\n            legend.position = \"bottom\"\n        ) +\n        scale_x_continuous(breaks = x_vals)\n    \n    return(p)\n}\n\nS0 <- 100\niq <- c(98, 121, 110, 89, 109, 108, 102, 92, 131, 114)\n\nplot_sign_test_null(iq, S0, 'greater')\n```\n\n::: {.cell-output-display}\n![](01_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_sign_test_null(iq, S0, 'two')\n```\n\n::: {.cell-output-display}\n![](01_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_sign_test_null(iq, 127.5, 'less')\n```\n\n::: {.cell-output-display}\n![](01_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n- α를 정확하게 통제할 수 없다.\n    - 대표본의 경우 이산형 분포가 정규분포로 근사할 수 있기 때문에, 근사해서 검정 진행해서 α 통제\n\n### 신뢰구간\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 신뢰구간 계산\na = 0.05\nn = length(iq)\nl = qbinom(a / 2, n, 1/2)\nu = n + 1 - l\nsorted_iq = sort(iq)\n(ci = sorted_iq[c(l, u)])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  92 121\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 실제 신뢰도 계산 (이산분포 특성상 정확히 95%가 아님)\n(coverage = sum(dbinom(l:(u-1), n, 1/2)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9785156\n```\n\n\n:::\n:::\n\n\n\n\n**왜 비대칭 분포에서도 유효한가?**\n\n1. **중앙값의 불변성**: 분포가 비대칭이어도 중앙값은 여전히 모집단을 반으로 나누는 점\n2. **부호의 독립성**: 각 관측값이 중앙값보다 클 확률은 항상 0.5 (연속분포 가정)\n3. **순서통계량의 분포**: 순서통계량들 사이의 확률적 관계는 분포 형태와 무관\n\n**시뮬레이션 검증: 비대칭 분포에서의 신뢰구간**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 부호검정 신뢰구간 함수\nsign_ci <- function(sample, alpha = 0.05) {\n    n <- length(sample)\n    l <- qbinom(alpha / 2, n, 0.5)\n    u <- n + 1 - l\n    sorted_sample <- sort(sample)\n    return(c(lower = sorted_sample[l], upper = sorted_sample[u]))\n}\n\n# 비대칭 분포 시뮬레이션\nset.seed(123)\nn_sim <- 1000\nn_sample <- 20\ncoverage_results <- data.frame(\n    distribution = character(),\n    true_median = numeric(),\n    coverage_rate = numeric(),\n    stringsAsFactors = FALSE\n)\n\n# 1. 정규분포 (대칭)\ntrue_median_normal <- 0\ncoverage_normal <- 0\nfor (i in 1:n_sim) {\n    sample <- rnorm(n_sample, mean = 0, sd = 1)\n    ci <- sign_ci(sample)\n    if (true_median_normal >= ci[1] && true_median_normal <= ci[2]) {\n        coverage_normal <- coverage_normal + 1\n    }\n}\ncoverage_results <- rbind(coverage_results, \n    data.frame(distribution = \"정규분포\", \n               true_median = true_median_normal,\n               coverage_rate = coverage_normal / n_sim))\n\n# 2. 지수분포 (오른쪽 비대칭)\ntrue_median_exp <- log(2)  # 지수분포의 중앙값\ncoverage_exp <- 0\nfor (i in 1:n_sim) {\n    sample <- rexp(n_sample, rate = 1)\n    ci <- sign_ci(sample)\n    if (true_median_exp >= ci[1] && true_median_exp <= ci[2]) {\n        coverage_exp <- coverage_exp + 1\n    }\n}\ncoverage_results <- rbind(coverage_results, \n    data.frame(distribution = \"지수분포\", \n               true_median = true_median_exp,\n               coverage_rate = coverage_exp / n_sim))\n\n# 3. 베타분포 (왼쪽 비대칭)\ntrue_median_beta <- qbeta(0.5, shape1 = 5, shape2 = 2)\ncoverage_beta <- 0\nfor (i in 1:n_sim) {\n    sample <- rbeta(n_sample, shape1 = 5, shape2 = 2)\n    ci <- sign_ci(sample)\n    if (true_median_beta >= ci[1] && true_median_beta <= ci[2]) {\n        coverage_beta <- coverage_beta + 1\n    }\n}\ncoverage_results <- rbind(coverage_results, \n    data.frame(distribution = \"베타분포(5,2)\", \n               true_median = true_median_beta,\n               coverage_rate = coverage_beta / n_sim))\n\nprint(coverage_results)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   distribution true_median coverage_rate\n1      정규분포   0.0000000         0.952\n2      지수분포   0.6931472         0.971\n3 베타분포(5,2)   0.7355500         0.961\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 각 분포의 형태와 중앙값 시각화\nlibrary(ggplot2)\nlibrary(gridExtra)\n\nset.seed(123)\nx_normal <- rnorm(1000)\nx_exp <- rexp(1000)\nx_beta <- rbeta(1000, 5, 2)\n\np1 <- ggplot() + \n    geom_histogram(aes(x = x_normal), bins = 30, alpha = 0.7, fill = \"blue\") +\n    geom_vline(xintercept = 0, color = \"red\", size = 1) +\n    labs(title = \"정규분포 (대칭)\", x = \"값\", y = \"빈도\") +\n    annotate(\"text\", x = 0.5, y = 80, label = \"중앙값 = 0\", color = \"red\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n```{.r .cell-code}\np2 <- ggplot() + \n    geom_histogram(aes(x = x_exp), bins = 30, alpha = 0.7, fill = \"green\") +\n    geom_vline(xintercept = log(2), color = \"red\", size = 1) +\n    labs(title = \"지수분포 (오른쪽 비대칭)\", x = \"값\", y = \"빈도\") +\n    annotate(\"text\", x = 2, y = 150, label = paste(\"중앙값 =\", round(log(2), 3)), color = \"red\")\n\np3 <- ggplot() + \n    geom_histogram(aes(x = x_beta), bins = 30, alpha = 0.7, fill = \"orange\") +\n    geom_vline(xintercept = qbeta(0.5, 5, 2), color = \"red\", size = 1) +\n    labs(title = \"베타분포(5,2) (왼쪽 비대칭)\", x = \"값\", y = \"빈도\") +\n    annotate(\"text\", x = 0.5, y = 80, label = paste(\"중앙값 =\", round(qbeta(0.5, 5, 2), 3)), color = \"red\")\n\ngrid.arrange(p1, p2, p3, ncol = 1)\n```\n\n::: {.cell-output-display}\n![](01_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n**결론**: 시뮬레이션 결과에서 볼 수 있듯이, 분포가 대칭이든 비대칭이든 부호검정의 신뢰구간 포함률(coverage rate)은 명목 신뢰수준(95%)에 근접합니다. 이는 부호검정 신뢰구간이 **분포무관(distribution-free)** 성질을 가지기 때문입니다.\n\n### 부호검정 사용 시 주의사항\n\n1. **동일한 값 처리**: 중앙값과 정확히 같은 값들은 검정에서 제외\n2. **표본 크기**: 작은 표본에서는 정확한 이항분포 사용, 큰 표본에서는 정규분포 근사\n3. **검정 방향**: 양측검정 vs 단측검정 선택 중요\n4. **가정**: 표본이 연속분포에서 추출되었다고 가정\n\n## 윌콕슨 부호순위검정\n\n- 모집단이 대칭인 경우 사용 가능\n- rank가 동점인 경우 평균으로 처리\n- 영분포는 잘 알려져 있지 않은 분포\n- 평균: $\\frac{n(n+1)}{4}$\n- 분산: $\\frac{n(n+1)(2n+1)}{24}$\n- 일반적으로 resampling 방식으로 구하고, 수가 많아지면 표준정규분포로 근사해서 계산(Lyapunov의 중심극한정리)\n\n### 중앙값 추정과 신뢰구간\n\n- 왈시평균: $W_{ij} = \\frac{X_i + X_j}{2}$\n- $SR_{+}(θ) = \\#{W_{ij} > θ}$\n\n\n## 순열 검정\n\n",
    "supporting": [
      "01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}