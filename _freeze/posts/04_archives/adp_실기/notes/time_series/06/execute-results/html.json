{
  "hash": "ae20dcf94d01be4a9dbb491b9397ab67",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"계절성 고려\"\ndate: 2025-07-12\ncategories: [\"확률 통계\", \"시계열 분석\"]\n---\n\n\n\n\n![](/img/stat-thumb.jpg){.post-thumbnail}\n\n## SARIMA 모델\n\n- $SARIMA(p, d, q)(P, D, Q)_m$ 형태로 표현\n- $m$: 계절성 주기\n- $P, D, Q$: 계절성 AR, 차분, MA 차수\n\n::: {#24ee71e7 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.rcParams['font.family'] = 'Noto Sans KR'\n\ndf = pd.read_csv('_data/air.csv')\n```\n:::\n\n\n::: {#f3838933 .cell execution_count=2}\n``` {.python .cell-code}\nfrom statsmodels.tsa.seasonal import STL\n\ndecomposition = STL(df['Passengers'], period=12).fit()\ndecomposition.plot()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](06_files/figure-html/cell-3-output-1.png){width=662 height=469}\n:::\n:::\n\n\n::: {#2a928bf3 .cell execution_count=3}\n``` {.python .cell-code}\nfrom statsmodels.tsa.stattools import adfuller\n\ndf_diff = np.diff(df['Passengers'], n=1)\n\nADF_result = adfuller(df_diff)\nADF_result[0], ADF_result[1]\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n(np.float64(-2.8292668241700047), np.float64(0.05421329028382478))\n```\n:::\n:::\n\n\n::: {#012c67c6 .cell execution_count=4}\n``` {.python .cell-code}\ndf_diff = np.diff(df_diff, n=12)\n\nADF_result = adfuller(df_diff)\nADF_result[0], ADF_result[1]\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n(np.float64(-17.62486236026156), np.float64(3.823046855601547e-30))\n```\n:::\n:::\n\n\n::: {#9054cb36 .cell execution_count=5}\n``` {.python .cell-code}\nfrom typing import Union\nfrom statsmodels.tsa.statespace.sarimax import SARIMAX\n\ndef optimize_SARIMA(endog: Union[pd.Series, list], order_list: list, d: int, D: int, s: int) -> pd.DataFrame:\n    results = []\n    for order in order_list:\n        try:\n            model = SARIMAX(endog, \n                            order=(order[0], d, order[1]), \n                            seasonal_order=(order[2], D, order[3], s),\n                            simple_differencing=False).fit(disp=False)\n        except:\n            continue\n        aic = model.aic\n        results.append([order, aic])\n    result_df = pd.DataFrame(results)\n    result_df.columns = ['(p, q, P, Q)', 'AIC']\n    result_df = result_df.sort_values(by=\"AIC\").reset_index(drop=True)\n\n    return result_df\n```\n:::\n\n\n::: {#952d522d .cell execution_count=6}\n``` {.python .cell-code}\nfrom itertools import product\n\ntrain = df.iloc[:-12]['Passengers']\ntest = df.iloc[-12:]\n#  ps = range(0, 4, 1)\n#  qs = range(0, 4, 1)\n#  Ps = range(0, 4, 1)\n#  Qs = range(0, 4, 1)\n# \n#  SARIMA_order_list = list(product(ps, qs, Ps, Qs))\n# \n# \n#  d = 1\n#  D = 1\n#  s = 12\n#  SARIMA_result_df = optimize_SARIMA(train, SARIMA_order_list, d, D, s)\n#  SARIMA_result_df\n```\n:::\n\n\n::: {#c44c8ef0 .cell execution_count=7}\n``` {.python .cell-code}\nSARIMA_model = SARIMAX(train, order=(2, 1, 1), seasonal_order=(1, 1, 2, 12), simple_differencing=False)\nSARIMA_model_fit = SARIMA_model.fit(disp=False)\n\nSARIMA_model_fit.plot_diagnostics(figsize=(10, 8))\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](06_files/figure-html/cell-8-output-1.png){width=806 height=673}\n:::\n:::\n\n\n::: {#9e770fb1 .cell execution_count=8}\n``` {.python .cell-code}\nfrom statsmodels.stats.diagnostic import acorr_ljungbox\n\ntr = acorr_ljungbox(SARIMA_model_fit.resid, np.arange(1, 11))\ntr\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>lb_stat</th>\n      <th>lb_pvalue</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0.004688</td>\n      <td>0.945412</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.743919</td>\n      <td>0.689382</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1.018359</td>\n      <td>0.796810</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1.223784</td>\n      <td>0.874167</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1.435211</td>\n      <td>0.920423</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1.710187</td>\n      <td>0.944332</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2.304834</td>\n      <td>0.941063</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2.715298</td>\n      <td>0.950935</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2.731198</td>\n      <td>0.974006</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>4.968094</td>\n      <td>0.893299</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#92a60e2a .cell execution_count=9}\n``` {.python .cell-code}\nSARIMA_pred = SARIMA_model_fit.get_prediction(132, 143).predicted_mean\n\ntest['SARIMA_pred'] = SARIMA_pred\n\nsns.lineplot(data=df, x=df.index, y='Passengers', label='실제 값')\nsns.lineplot(data=test, x=test.index, y='SARIMA_pred', label='SARIMA 예측값')\nplt.xticks(np.arange(0, 145, 12), np.arange(1949, 1962, 1))\nplt.xlim(120, 143)\n```\n\n::: {.cell-output .cell-output-display}\n![](06_files/figure-html/cell-10-output-1.png){width=590 height=430}\n:::\n:::\n\n\n",
    "supporting": [
      "06_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}