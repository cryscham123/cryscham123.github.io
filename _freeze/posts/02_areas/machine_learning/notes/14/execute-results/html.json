{
  "hash": "56cff809f45a742258c2a01258da9195",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"k-means clustering\"\ndate: 2025-03-09\ncategories: [\"machine learning\"]\n---\n\n\n\n\n![](/img/stat-thumb.jpg){.post-thumbnail}\n\n## K-means++ algorithm\n\n- 시작점을 잘 선택하여 수렴 속도를 높이는 알고리즘\n- 초기 중심점을 선택할 때, 멀리 떨어진 중심점을 선택하도록 함\n  1. 첫 번째 중심점을 랜덤하게 선택\n  1. 나머지 중심점을 선택할 때, 각 데이터 포인트와 가장 먼 중심점을 선택\n  1. k개의 중심점을 선택할 때까지 반복\n\n## preprocessing\n\n::: {#f0f00f4f .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport warnings\n\nwarnings.filterwarnings('ignore')\n\ndataset = pd.read_csv('_data/14.csv')\nx = dataset.iloc[:, [3, 4]].values\n```\n:::\n\n\n## Modeling\n\n::: {#4b9f3790 .cell execution_count=2}\n``` {.python .cell-code}\nfrom sklearn.cluster import KMeans\n\nwcss = []\nfor i in range(1, 11):\n  cluster = KMeans(n_clusters=i, init='k-means++')\n  cluster.fit(x)\n  wcss.append(cluster.inertia_)\nplt.plot(range(1, 11), wcss)\nplt.title('Elbow Method')\nplt.xlabel('Number of Cluster')\nplt.ylabel('WCSS')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](14_files/figure-html/cell-3-output-1.png){width=618 height=449}\n:::\n:::\n\n\n::: {#08cd03c3 .cell execution_count=3}\n``` {.python .cell-code}\ncluster = KMeans(n_clusters=5, init='k-means++')\ny_kmeans = cluster.fit_predict(x)\n```\n:::\n\n\n## Visualize\n\n::: {#2749ddfe .cell execution_count=4}\n``` {.python .cell-code}\nplt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], c='red', label='Cluster 1')\nplt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], c='pink', label='Cluster 2')\nplt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1], c='blue', label='Cluster 3')\nplt.scatter(x[y_kmeans == 3, 0], x[y_kmeans == 3, 1], c='purple', label='Cluster 4')\nplt.scatter(x[y_kmeans == 4, 0], x[y_kmeans == 4, 1], c='cyan', label='Cluster 5')\nplt.scatter(cluster.cluster_centers_[:, 0], cluster.cluster_centers_[:, 1], s=100, c='black', label='Centroids')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](14_files/figure-html/cell-5-output-1.png){width=575 height=411}\n:::\n:::\n\n\n",
    "supporting": [
      "14_files"
    ],
    "filters": [],
    "includes": {}
  }
}