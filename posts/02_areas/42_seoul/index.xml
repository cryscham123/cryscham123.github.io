<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>김형훈의 학습 블로그</title>
<link>https://cryscham123.github.io/posts/02_areas/42_seoul/</link>
<atom:link href="https://cryscham123.github.io/posts/02_areas/42_seoul/index.xml" rel="self" type="application/rss+xml"/>
<description>안녕하세요. 김형훈의 학습 블로그 입니다.</description>
<image>
<url>https://cryscham123.github.io/profile.jpg</url>
<title>김형훈의 학습 블로그</title>
<link>https://cryscham123.github.io/posts/02_areas/42_seoul/</link>
</image>
<generator>quarto-1.5.56</generator>
<lastBuildDate>Sun, 16 Feb 2025 15:00:00 GMT</lastBuildDate>
<item>
  <title>inception-of-things part 1</title>
  <link>https://cryscham123.github.io/posts/02_areas/42_seoul/notes/04.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">Intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-outer-1.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul outer 과제</figcaption>
</figure>
</div>
<p>42 Seoul의 공통 과정을 마무리하면, 원하는 분야를 선택하여 심화 과제를 수행할 수 있습니다. 그중에서도 ’Inception-of-Things’는 인프라 관련 심화 과제로, 가장 많은 경험치를 얻을 수 있는 과제입니다.</p>
<p>얼핏 보면 매우 어려운 과제처럼 느껴질 수 있지만, 개념을 확실히 이해하고 공부한다면 누구나 빠르게 완료할 수 있다고 생각합니다. 저의 경우, CKA 자격증 취득을 목표로 k8s를 공부하던 중 우연히 팀원을 구하게 되어 이 과제를 수행하게 되었습니다. 배경지식이 어느 정도 있는 상태에서 진행하다 보니, 크게 어렵지 않게 잘 마무리할 수 있었던 것 같습니다.</p>
</section>
<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p><a href="https://cdn.intra.42.fr/pdf/pdf/143948/en.subject.pdf">과제 명세서</a></p>
<p>참고한 자료는 다음과 같습니다:</p>
<ul>
<li><a href="https://www.udemy.com/course/certified-kubernetes-administrator-with-practice-tests/">CKA Udemy 강의</a></li>
<li><a href="https://www.udemy.com/course/argo-cd-essential-guide-for-end-users-with-practice/">ArgoCD Udemy 강의</a></li>
<li><a href="https://docs.gitlab.com/charts/">gitlab helm 베포 Docs</a></li>
<li><a href="https://developer.hashicorp.com/vagrant/docs">Vagrant Docs</a></li>
</ul>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>전체 코드는 비공개 되어있는 상태입니다</p>
</div>
</div>
</div>
</section>
<section id="개념-설명" class="level2">
<h2 class="anchored" data-anchor-id="개념-설명">개념 설명</h2>
<p>cluster는 노드(컴퓨터)들의 논리적인 집합을 의미합니다. 일반적으로, 하나의 컴퓨터로 처리하기 어려운 방대한 양의 작업을 처리하기 위해 도입을 합니다.</p>
<p>클러스터는 특정한 목적을 가지고 있고, 그 안의 노드들을 각자 맡은 역할을 수행합니다. (보통 클러스터 내부의 노드들을 관리하는 master, 작업을 수행하는 worker로 구분할 수 있습니다.) 이때, k8s는 분산된 노드(컴퓨터)들을 하나의 클러스터로 묶어주고, 관리해주는 도구로써 사용할 수 있습니다.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
노트
</div>
</div>
<div class="callout-body-container callout-body">
<p>컴퓨팅 능력을 확장할 목적으로 수직적 확장과 수평적 확장을 고려할 수 있습니다.</p>
<p>수직적 확장은 cpu나 memmory 성능을 높여서 단일 노드의 성능을 향상시키는 것을 의미하고, 수평적 확장은 작업을 분산시킬 수 있는 여러 노드를 추가하는 것을 의미합니다.</p>
<p>클러스터링은 수평적으로 확장된 컴퓨팅 리소스들을 그룹화 해주는 것을 의미합니다.</p>
</div>
</div>
<p>한 가지 주의해야 하는 것은, k8s 자체는 노드를 생성(provision)해주는 도구가 아니라는 것입니다. 즉, provision 단계는 k8s clustering 이전에 진행되어야 합니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-18-17-01-26.png" class="img-fluid figure-img"></p>
<figcaption>Part 1 구조</figcaption>
</figure>
</div>
<p>Part 1에서는 <code>vagrant</code> tool을 이용해서 master, agent 역할을 하는 두 대의 가상 머신을 local에서 <code>provision</code>하고, <code>k3s</code>를 이용해서 <code>clustering</code> 하는 것을 요구합니다. 참고로 k3s는 k8s의 경량화 버전입니다.</p>
</section>
<section id="코드-설명" class="level2">
<h2 class="anchored" data-anchor-id="코드-설명">코드 설명</h2>
<p>파일 구조는 아래와 같습니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">p1/</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> scripts/</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   ├── agent.yml</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   └── server.yml</span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> Vagrantfile</span></code></pre></div>
<p>vagrant는 local에서 가상 머신을 생성하고, provision을 할 수 있는 도구입니다. 사용자가 원하는 스펙을 Vagrantfile 이름의 파일에 정의하면, <code>vagrant up</code> 명령어를 통해 간단하게 가상머신을 생성할 수 있습니다.</p>
<p>과제 요구사항에 맞게 spec을 정의해줍니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Vagrantfile</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="Vagrantfile" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">Vagrant.configure(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>) do <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>config<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb2-2">  config.vm.box <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bento/ubuntu-24.04"</span></span>
<span id="cb2-3">  config.vm.box_version <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"202404.26.0"</span></span>
<span id="cb2-4"></span>
<span id="cb2-5">  config.vm.define <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hyunghkiS"</span> do <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>control<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb2-6">    control.vm.hostname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hyunghkiS"</span></span>
<span id="cb2-7">    control.vm.network <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"private_network"</span>, ip: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"192.168.56.110"</span></span>
<span id="cb2-8">    control.vm.provider <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"virtualbox"</span> do <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb2-9">      v.customize [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"modifyvm"</span>, :<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hyunghkiS"</span>]</span>
<span id="cb2-10">      v.memory <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1024"</span></span>
<span id="cb2-11">      v.cpus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span></span>
<span id="cb2-12">    end</span>
<span id="cb2-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># just for evaluation</span></span>
<span id="cb2-14">    control.vm.provision <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shell"</span>, inline: <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;-</span>SHELL</span>
<span id="cb2-15">      sudo apt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>get update</span>
<span id="cb2-16">      sudo apt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>get install <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>y net<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>tools</span>
<span id="cb2-17">    SHELL</span>
<span id="cb2-18">    control.vm.provision <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shell"</span>, path: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scripts/server.sh"</span></span>
<span id="cb2-19">  end</span>
<span id="cb2-20">  config.vm.define <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hyunghkiSW"</span> do <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>control<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb2-21">    control.vm.hostname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hyunghkiSW"</span></span>
<span id="cb2-22">    control.vm.network <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"private_network"</span>, ip: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"192.168.56.111"</span></span>
<span id="cb2-23">    control.vm.provider <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"virtualbox"</span> do <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb2-24">      v.customize [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"modifyvm"</span>, :<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hyunghkiSW"</span>]</span>
<span id="cb2-25">      v.memory <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1024"</span></span>
<span id="cb2-26">      v.cpus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span></span>
<span id="cb2-27">    end</span>
<span id="cb2-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># just for evaluation</span></span>
<span id="cb2-29">    control.vm.provision <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shell"</span>, inline: <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;-</span>SHELL</span>
<span id="cb2-30">      sudo apt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>get update</span>
<span id="cb2-31">      sudo apt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>get install <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>y net<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>tools</span>
<span id="cb2-32">    SHELL</span>
<span id="cb2-33">    control.vm.provision <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shell"</span>, path: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scripts/agent.sh"</span></span>
<span id="cb2-34">  end</span>
<span id="cb2-35">end</span></code></pre></div>
</div>
<p>저 just for evaluation 부분은 아마 과제 명세서에 ifconfig 명령어를 입력해보는 부분 때문에 추가한 것 같습니다. (사실 이 글을 쓰는 시점은 과제를 수행하고 1년이 지난 시점이라 기억이 가물가물 합니다.)</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>server.sh</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="server.sh" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">echo <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alias k=kubectl'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>vagrant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>.bashrc</span>
<span id="cb3-4">source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>vagrant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>.bashrc</span>
<span id="cb3-5"></span>
<span id="cb3-6">curl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sfL https:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>get.k3s.io <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> K3S_KUBECONFIG_MODE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"644"</span> sh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> server <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>node<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>ip <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">192.168.56.110</span></span>
<span id="cb3-7">K3S_TOKEN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(sudo cat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>var<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>lib<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>rancher<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>k3s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>server<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>node<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>token)</span>
<span id="cb3-8">echo $K3S_TOKEN <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>vagrant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>k3s_token <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># vagrant 공유 폴더에 master token 정보를 저장해주었습니다.</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>agent.sh</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="agent.sh" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb4-2"></span>
<span id="cb4-3">echo <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alias k=kubectl'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>vagrant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>.bashrc</span>
<span id="cb4-4">source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>vagrant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>.bashrc</span>
<span id="cb4-5"></span>
<span id="cb4-6">K3S_TOKEN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(cat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>vagrant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>k3s_token) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># vagrant 공유 폴더에 저장된 master token 정보를 읽어옵니다.</span></span>
<span id="cb4-7">curl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sfL https:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>get.k3s.io <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> K3S_URL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>https:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">192.168.56.110</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6443</span> K3S_TOKEN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$K3S_TOKEN sh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>node<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>ip <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">192.168.56.111</span></span></code></pre></div>
</div>
<p><a href="https://docs.k3s.io/quick-start">k3s 공식 문서</a>를 참고해서 master와 agent를 clustering 해주는 스크립트를 작성해주었습니다. 각각 노드 안에서 로직이 실행되어, 하나는 master로, 하나는 agent로 역할을 수행하게 됩니다.</p>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">Outro</h2>
<p>오랜만에 해당 과제의 로직을 다시 보니까 기억이 잘 안납니다.</p>
<p>남은 부분은 천천히 포스팅하겠습니다.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>vagrant</category>
  <category>k8s</category>
  <category>argoCD</category>
  <category>gitlab</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/02_areas/42_seoul/notes/04.html</guid>
  <pubDate>Sun, 16 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>cloud-1 코드 설명</title>
  <link>https://cryscham123.github.io/posts/02_areas/42_seoul/notes/09.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-outer-1.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul outer 과제</figcaption>
</figure>
</div>
<p><a href="../../../../posts/02_areas/42_seoul/notes/08.html">개념 설명</a>에 이어서 진행하도록 하겠습니다.</p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>전체 코드는 <a href="https://github.com/cryscham123/cloud-1">github repo</a>에서 확인하실 수 있습니다.</p>
</div>
</div>
</div>
</section>
<section id="프로젝트-및-구현-설명" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-및-구현-설명">프로젝트 및 구현 설명</h2>
<section id="pre-requirements" class="level3">
<h3 class="anchored" data-anchor-id="pre-requirements">pre requirements</h3>
<p>이 프로젝트를 진행하기 위해 필요한 것들은 다음과 같습니다.</p>
<ul>
<li>AWS IAM 계정</li>
<li>Packer</li>
<li>Terraform</li>
<li>Ansible</li>
<li>jq</li>
<li>boto3</li>
</ul>
</section>
<section id="build" class="level3">
<h3 class="anchored" data-anchor-id="build">build</h3>
<p>최종 build는 (42 seoul 사람에게 익숙한) <code>makefile</code>을 사용했습니다.</p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>제가 아직 로컬에서 돌려볼만한 다른 build 툴을 배우지 않아서 makefile을 사용하긴 했지만, 사실 c언어도 아니고..이 과제 구현에서 이 tool이 그렇게 어울리진 않은거 같긴 합니다.</p>
</div>
</div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>.env</strong></pre>
</div>
<div class="sourceCode" id="cb1" data-filename=".env" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># only 1 line variable is allowed</span></span>
<span id="cb1-2"></span>
<span id="cb1-3">AWS_REGION<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-4">AWS_ACCESS_KEY_ID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-5">AWS_SECRET_ACCESS_KEY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-6">SERVER_INSTANCE_COUNT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># public subnet에 접근할 수 있는 ip address를 지정해줍니다.</span></span>
<span id="cb1-9">SSH_IP<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># public subnet에 접근할 때 사용할 ssh key path를 지정해줍니다.</span></span>
<span id="cb1-12">SSH_PUBLIC_KEY_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-13">SSH_PRIVATE_KEY_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># docker compose setting</span></span>
<span id="cb1-16">MYSQL_USER<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-17">MYSQL_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-18">MYSQL_ROOT_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-19">DATABASE_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-20">SITE_TITLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-21">ADMIN_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-22">ADMIN_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-23">ADMIN_EMAIL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-24">USER_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-25">USER_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-26">USER_EMAIL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Makefile</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="Makefile" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .env의 내용들을 makefile의 변수로 load 해줍니다.</span></span>
<span id="cb2-2"></span>
<span id="cb2-3">include .env</span>
<span id="cb2-4">export</span></code></pre></div>
</div>
<p>먼저 <code>필요한 변수들</code>을 모두 <code>.env</code>에 저장해 <code>한번에 관리</code>할 수 있게 구현했습니다. 저장된 .env 내용은 makefile에서 위의 명령어로 불러와 build 명령어 실행시 사용할 수 있게 했습니다.</p>
<p>makefile이 .env 파일을 읽을 때 한 줄씩 읽기 때문에, 위의 방식으로 구현하면 여러 줄에 걸친 환경변수는 사용하기 어려울 수 있습니다. (그럴땐 그냥 makefile 말고 다른 tool을 쓰면 됩니다)</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Makefile</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="Makefile" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">.PHONY: provision deploy <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span> destroy re build_ami</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>: build_ami provision deploy</span>
<span id="cb3-4"></span>
<span id="cb3-5">build_ami: packer</span>
<span id="cb3-6">    packer init $(PACKER_PATH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>database.pkr.hcl</span>
<span id="cb3-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@PKR_VAR_AWS_REGION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(AWS_REGION) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-8">    PKR_VAR_MYSQL_USER<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(MYSQL_USER) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-9">    PKR_VAR_MYSQL_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(MYSQL_PASSWORD) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-10">    PKR_VAR_DATABASE_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(DATABASE_NAME) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-11">    PKR_VAR_MYSQL_ROOT_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(MYSQL_ROOT_PASSWORD) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-12">    packer build $(PACKER_PATH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>database.pkr.hcl</span>
<span id="cb3-13"></span>
<span id="cb3-14">provision: build_ami terraform</span>
<span id="cb3-15">    terraform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>chdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(PROVISION_PATH) init</span>
<span id="cb3-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@TF_VAR_AWS_REGION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(AWS_REGION) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-17">    TF_VAR_SERVER_INSTANCE_COUNT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SERVER_INSTANCE_COUNT) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-18">    TF_VAR_SSH_IP<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SSH_IP) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-19">    TF_VAR_SSH_PUBLIC_KEY_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SSH_PUBLIC_KEY_PATH) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-20">    terraform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>chdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(PROVISION_PATH) <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>auto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>approve</span>
<span id="cb3-21"></span>
<span id="cb3-22">deploy: ansible</span>
<span id="cb3-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@DB_PRIVATE_IP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$(shell terraform -chdir=$(PROVISION_PATH) output -json db_private_ip | jq -r '.[]' | tr '</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' ' ')"</span> \</span>
<span id="cb3-24">    ANSIBLE_HOST_KEY_CHECKING<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-25">    ANSIBLE_REMOTE_USER<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ubuntu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-26">    AWS_DEFAULT_REGION<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(AWS_REGION) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-27">    ANSIBLE_PYTHON_INTERPRETER<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auto_silent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-28">    ansible<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>playbook <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-29">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i $(DEPLOY_PATH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>inventories <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-30">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>private<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SSH_PRIVATE_KEY_PATH) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-31">    $(DEPLOY_PATH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>server.yml </span></code></pre></div>
</div>
<p>build 과정은 <code>ami 생성</code>, <code>provision</code>, <code>ansible deploy</code> 순서로 진행됩니다.</p>
<p>각 과정에 필요한 변수들은 <code>명령어 수행 시 환경변수로 제공</code>해줍니다. 대표적으로 ansible의 경우, provision 이후 생성된 database ec2의 private ip를 전달하고 있습니다.</p>
</section>
<section id="packer-코드" class="level3">
<h3 class="anchored" data-anchor-id="packer-코드">Packer 코드</h3>
<p>이 프로젝트에서는 데이터베이스 서버를 Private subnet에 위치시키고, Public subnet의 EC2만 이 데이터베이스에 접근할 수 있도록 설계했습니다. <code>Private subnet에 있는 서버</code>는 SSH 접근이 제한되기 때문에 <code>Ansible로 직접 설정하기는 어렵습니다.</code> 이런 경우 <code>Packer로 미리 설정된 AMI를 생성</code>하는 방법을 생각해볼 수 있습니다.</p>
<p>구현한 Packer 파일 구조는 아래와 같습니다.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">packer/</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> database.pkr.hcl</span>
<span id="cb4-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> ansible/</span>
<span id="cb4-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> _requirements/                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># docker compose setting files</span></span>
<span id="cb4-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> roles/setting_docker/tasks</span>
<span id="cb4-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   └── main.yml</span>
<span id="cb4-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> database.yml                        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># playbook</span></span></code></pre></div>
<p>먼저 <code>기본 이미지로 Ubuntu 20.04</code>를 사용하도록 작성했습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>database.pkr.hcl</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="database.pkr.hcl" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">source <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"amazon-ebs"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"database"</span> {</span>
<span id="cb5-2">  region  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var.AWS_REGION</span>
<span id="cb5-3">  profile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"default"</span></span>
<span id="cb5-4"></span>
<span id="cb5-5">  ami_name      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hyunghki-database-${formatdate("</span>YYYYMMDDhhmmss<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", timestamp())}"</span></span>
<span id="cb5-6">  instance_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t2.micro"</span></span>
<span id="cb5-7">  source_ami_filter {</span>
<span id="cb5-8">    filters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb5-9">      name                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"</span></span>
<span id="cb5-10">      root<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ebs"</span></span>
<span id="cb5-11">      virtualization<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hvm"</span></span>
<span id="cb5-12">    }</span>
<span id="cb5-13">    most_recent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> true</span>
<span id="cb5-14">    owners      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"099720109477"</span>]</span>
<span id="cb5-15">  }</span>
<span id="cb5-16">  ssh_username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu"</span></span>
<span id="cb5-17">}</span></code></pre></div>
</div>
<p>Packer는 기본적으로 이미지 생성을 위한 최소한의 기능만 제공하지만, 다양한 플러그인을 지원합니다. 여기서는 <code>Ansible 플러그인을 사용</code>하여 데이터베이스 서버 설정을 자동화했습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>database.pkr.hcl</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="database.pkr.hcl" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">build {</span>
<span id="cb6-2">  sources <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"source.amazon-ebs.database"</span>]</span>
<span id="cb6-3"></span>
<span id="cb6-4">  provisioner <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ansible"</span> {</span>
<span id="cb6-5">    playbook_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{path.root}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/ansible/database.yml"</span></span>
<span id="cb6-6">    user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu"</span></span>
<span id="cb6-7">    ansible_env_vars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb6-8">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ANSIBLE_HOST_KEY_CHECKING=False"</span>,</span>
<span id="cb6-9">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MYSQL_USER=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.MYSQL_USER}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb6-10">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MYSQL_PASSWORD=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.MYSQL_PASSWORD}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb6-11">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATABASE_NAME=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.DATABASE_NAME}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb6-12">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MYSQL_ROOT_PASSWORD=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.MYSQL_ROOT_PASSWORD}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb6-13">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ANSIBLE_PYTHON_INTERPRETER=auto_silent"</span></span>
<span id="cb6-14">    ]</span>
<span id="cb6-15">  }</span>
<span id="cb6-16">}</span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>ansible/database.yml</strong></pre>
</div>
<div class="sourceCode" id="cb7" data-filename="ansible/database.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> hosts: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span></span>
<span id="cb7-2">  gather_facts: false</span>
<span id="cb7-3">  become: true</span>
<span id="cb7-4">  roles:</span>
<span id="cb7-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># docker compose를 machine에 설치해줍니다.</span></span>
<span id="cb7-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> role: setting_docker</span>
<span id="cb7-7"></span>
<span id="cb7-8">  tasks:</span>
<span id="cb7-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># docker compose에 필요한 파일들을 옮겨줍니다.</span></span>
<span id="cb7-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: copy_requirements</span>
<span id="cb7-11">      copy:</span>
<span id="cb7-12">        src: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./_requirements/"</span></span>
<span id="cb7-13">        dest: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> ansible_user </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/app/"</span></span>
<span id="cb7-14">        mode: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0755'</span></span>
<span id="cb7-15">        directory_mode: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0755'</span></span>
<span id="cb7-16"></span>
<span id="cb7-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 적절한 환경변수와 함께 docker compose 명령어를 실행합니다.</span></span>
<span id="cb7-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: execute docker compose</span>
<span id="cb7-19">      shell:</span>
<span id="cb7-20">        cmd: docker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>compose up <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>d</span>
<span id="cb7-21">        chdir: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> ansible_user </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/app/"</span></span>
<span id="cb7-22">      environment:</span>
<span id="cb7-23">        MYSQL_USER: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'MYSQL_USER') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb7-24">        MYSQL_PASSWORD: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'MYSQL_PASSWORD') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb7-25">        DATABASE_NAME: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'DATABASE_NAME') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb7-26">        MYSQL_ROOT_PASSWORD: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'MYSQL_ROOT_PASSWORD') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span></code></pre></div>
</div>
<p>이렇게 Ansible과 Packer를 조합하면 <code>멱등성이 보장되는 안정적인 서버 이미지를 생성</code>할 수 있습니다.</p>
<p>참고로 packer에서 ansible plugin을 사용할 때 <code>taget host를 ami가 build되는 임시 EC2로 간주</code>하기 때문에, <code>inventory는 사용하지 않습니다.</code> 자세한 내용은 ansible part를 참고해주세요.</p>
</section>
<section id="terraform-코드" class="level3">
<h3 class="anchored" data-anchor-id="terraform-코드">Terraform 코드</h3>
<p>이제 본격적으로 provision을 해보겠습니다. 잠시 전체적인 구조를 다시 한번 보겠습니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-05-20-27-45.png" class="img-fluid figure-img"></p>
<figcaption>구현 aws 구조</figcaption>
</figure>
</div>
<p>필요한 리소스는 VPC, subnet, security group, ec2 입니다.</p>
<p><code>server ec2</code>와 <code>database ec2</code>는 환경변수 SERVER_INSTANCE_COUNT에 지정된 갯수 만큼 생성됩니다. database ec2는 이전 단계에서 생성한 ami를 사용해줍니다.</p>
<p>public, private subnet의 갯수는 임의로 생성했습니다.</p>
<p>파일 구조는 아래와 같습니다.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">terraform/</span></span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> main/</span>
<span id="cb8-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   ├── main.tf</span>
<span id="cb8-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   ├── data.tf</span>
<span id="cb8-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   ├── output.tf</span>
<span id="cb8-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   └── variables.tf</span>
<span id="cb8-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> modules/network/</span>
<span id="cb8-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> main.tf</span>
<span id="cb8-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> output.tf</span>
<span id="cb8-10">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> variables.tf</span></code></pre></div>
<p>main.tf에서는 <code>aws_instance</code>를 생성하고, 그 외 VPC, subnet과 같은 리소스는 <code>network module</code>로 분리해서 생성했습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>modules/network/main.tf</strong></pre>
</div>
<div class="sourceCode" id="cb9" data-filename="modules/network/main.tf" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_vpc"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"main_vpc"</span> {</span>
<span id="cb9-2">  cidr_block           <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10.0.0.0/16"</span></span>
<span id="cb9-3">  instance_tenancy     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"default"</span></span>
<span id="cb9-4">  enable_dns_hostnames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb9-5">}</span>
<span id="cb9-6"></span>
<span id="cb9-7">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_subnet"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"public-1"</span> {</span>
<span id="cb9-8">  vpc_id                  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_vpc.main_vpc.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb9-9">  cidr_block              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10.0.1.0/24"</span></span>
<span id="cb9-10">  map_public_ip_on_launch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb9-11">  availability_zone       <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.AWS_REGION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">a"</span></span>
<span id="cb9-12">}</span>
<span id="cb9-13"></span>
<span id="cb9-14">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_subnet"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"public-2"</span> {</span>
<span id="cb9-15">  vpc_id                  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_vpc.main_vpc.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb9-16">  cidr_block              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10.0.2.0/24"</span></span>
<span id="cb9-17">  map_public_ip_on_launch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb9-18">  availability_zone       <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.AWS_REGION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">c"</span></span>
<span id="cb9-19">}</span>
<span id="cb9-20"></span>
<span id="cb9-21">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_subnet"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"private"</span> {</span>
<span id="cb9-22">  vpc_id                  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_vpc.main_vpc.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb9-23">  cidr_block              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10.0.3.0/24"</span></span>
<span id="cb9-24">  map_public_ip_on_launch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"false"</span></span>
<span id="cb9-25">  availability_zone       <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.AWS_REGION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">a"</span></span>
<span id="cb9-26">}</span></code></pre></div>
</div>
<p>먼저 VPC와 subnet을 생성합니다.</p>
<p>cidr_block은 private ip 중에서 겹치지 않는 범위로 지정해줍니다.</p>
<div class="callout callout-style-simple callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Private IP ranges
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Class A: 10.0.0.0–10.255.255.255</li>
<li>Class B: 172.16.0.0–172.31.255.255</li>
<li>Class C: 192.168.0.0–192.168.255.255</li>
</ul>
</div>
</div>
<p>Public subnet이 인터넷과 통신하기 위해서는 <code>Internet Gateway</code>와 <code>Route Table</code>이 필요합니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>modules/network/main.tf</strong></pre>
</div>
<div class="sourceCode" id="cb10" data-filename="modules/network/main.tf" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_internet_gateway"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gate_way"</span> {</span>
<span id="cb10-2">  vpc_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_vpc.main_vpc.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb10-3">}</span>
<span id="cb10-4"></span>
<span id="cb10-5">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_route_table"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"public_route_table"</span> {</span>
<span id="cb10-6">  vpc_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_vpc.main_vpc.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb10-7"></span>
<span id="cb10-8">  route {</span>
<span id="cb10-9">    cidr_block <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.0.0.0/0"</span></span>
<span id="cb10-10">    gateway_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_internet_gateway.gate_way.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb10-11">  }</span>
<span id="cb10-12">}</span>
<span id="cb10-13"></span>
<span id="cb10-14">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_route_table_association"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"public-1"</span> {</span>
<span id="cb10-15">  subnet_id      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_subnet.public<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb10-16">  route_table_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_route_table.public_route_table.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb10-17">}</span>
<span id="cb10-18"></span>
<span id="cb10-19">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_route_table_association"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"public-2"</span> {</span>
<span id="cb10-20">  subnet_id      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_subnet.public<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb10-21">  route_table_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_route_table.public_route_table.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb10-22">}</span></code></pre></div>
</div>
<p>모든 외부 트래픽을 Internet Gateway로 보내도록 Route Table을 설정하고, 이를 두 개의 Public subnet에 연결했습니다.</p>
<p>참고로 VPC 내부 통신은 자동으로 라우팅됩니다. 같은 VPC 안에 있는 리소스들은 VPC의 기본 라우팅 테이블을 통해 서로 통신할 수 있기 때문에 내부 통신을 위한 route table은 따로 생성하지 않았습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>modules/network/main.tf</strong></pre>
</div>
<div class="sourceCode" id="cb11" data-filename="modules/network/main.tf" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_security_group"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"server_sg"</span> {</span>
<span id="cb11-2">  vpc_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_vpc.main_vpc.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb11-3">  name   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"server_sg"</span></span>
<span id="cb11-4"></span>
<span id="cb11-5">  ingress {</span>
<span id="cb11-6">    from_port   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span></span>
<span id="cb11-7">    to_port     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span></span>
<span id="cb11-8">    protocol    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tcp"</span></span>
<span id="cb11-9">    cidr_blocks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var.SSH_CIDR_BLOCKS</span>
<span id="cb11-10">  }</span>
<span id="cb11-11"></span>
<span id="cb11-12">  ingress {</span>
<span id="cb11-13">    from_port   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb11-14">    to_port     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb11-15">    protocol    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tcp"</span></span>
<span id="cb11-16">    cidr_blocks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.0.0.0/0"</span>]</span>
<span id="cb11-17">  }</span>
<span id="cb11-18"></span>
<span id="cb11-19">  ingress {</span>
<span id="cb11-20">    from_port   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">443</span></span>
<span id="cb11-21">    to_port     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">443</span></span>
<span id="cb11-22">    protocol    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tcp"</span></span>
<span id="cb11-23">    cidr_blocks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.0.0.0/0"</span>]</span>
<span id="cb11-24">  }</span>
<span id="cb11-25"></span>
<span id="cb11-26">  egress {</span>
<span id="cb11-27">    from_port   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-28">    to_port     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-29">    protocol    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-1"</span></span>
<span id="cb11-30">    cidr_blocks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.0.0.0/0"</span>]</span>
<span id="cb11-31">  }</span>
<span id="cb11-32">}</span>
<span id="cb11-33"></span>
<span id="cb11-34">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_security_group"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"database_sg"</span> {</span>
<span id="cb11-35">  vpc_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_vpc.main_vpc.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb11-36">  name   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"efs_sg"</span></span>
<span id="cb11-37"></span>
<span id="cb11-38">  ingress {</span>
<span id="cb11-39">    from_port       <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3306</span></span>
<span id="cb11-40">    to_port         <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3306</span></span>
<span id="cb11-41">    protocol        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tcp"</span></span>
<span id="cb11-42">    security_groups <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [aws_security_group.server_sg.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>]</span>
<span id="cb11-43">  }</span>
<span id="cb11-44"></span>
<span id="cb11-45">  egress {</span>
<span id="cb11-46">    from_port   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-47">    to_port     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-48">    protocol    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-1"</span></span>
<span id="cb11-49">    cidr_blocks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.0.0.0/0"</span>]</span>
<span id="cb11-50">  }</span>
<span id="cb11-51">}</span></code></pre></div>
</div>
<p>마지막으로 security group입니다.</p>
<p>server ec2의 ssh 접근은 환경변수를 통해 ansible을 실행하는 머신의 ip에서만 접근 가능하도록 설정해줬습니다.</p>
<p>database ec2는 server ec2만 접근할 수 있도록 설정했습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>main/main.tf</strong></pre>
</div>
<div class="sourceCode" id="cb12" data-filename="main/main.tf" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사용자가 지정한 경로의 ssh key를 사용해 ec2에 접근 가능하도록 설정했습니다.</span></span>
<span id="cb12-2">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_key_pair"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_labtop"</span> {</span>
<span id="cb12-3">  key_name   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_labtop"</span></span>
<span id="cb12-4">  public_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>(var.SSH_PUBLIC_KEY_PATH)</span>
<span id="cb12-5">}</span>
<span id="cb12-6"></span>
<span id="cb12-7">module <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"network"</span> {</span>
<span id="cb12-8">  source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../modules/network"</span></span>
<span id="cb12-9"></span>
<span id="cb12-10">  AWS_REGION           <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var.AWS_REGION</span>
<span id="cb12-11">  SSH_CIDR_BLOCKS      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.SSH_IP}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/32"</span>]</span>
<span id="cb12-12">}</span>
<span id="cb12-13"></span>
<span id="cb12-14">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_instance"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"server"</span> {</span>
<span id="cb12-15">  count         <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var.SERVER_INSTANCE_COUNT</span>
<span id="cb12-16">  ami           <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.aws_ami.latest_ubuntu.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb12-17">  instance_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t2.micro"</span></span>
<span id="cb12-18"></span>
<span id="cb12-19">  vpc_security_group_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [module.network.server_sg_id]</span>
<span id="cb12-20">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># subnet은 2개를 번걸아가면서 사용하도록 설정했습니다.</span></span>
<span id="cb12-21">  subnet_id              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> module.network.public_subnets[count.index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb12-22"></span>
<span id="cb12-23">  key_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_key_pair.my_labtop.key_name</span>
<span id="cb12-24">  tags <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb12-25">    Name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"serverNode"</span></span>
<span id="cb12-26">  }</span>
<span id="cb12-27">}</span>
<span id="cb12-28"></span>
<span id="cb12-29">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_instance"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"database"</span> {</span>
<span id="cb12-30">  count         <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var.SERVER_INSTANCE_COUNT</span>
<span id="cb12-31">  ami           <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.aws_ami.database_ami.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb12-32">  instance_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t2.micro"</span></span>
<span id="cb12-33"></span>
<span id="cb12-34">  vpc_security_group_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [module.network.database_sg_id]</span>
<span id="cb12-35">  subnet_id              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> module.network.private_subnets</span>
<span id="cb12-36"></span>
<span id="cb12-37">  key_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_key_pair.my_labtop.key_name</span>
<span id="cb12-38">  tags <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb12-39">    Name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dbNode"</span></span>
<span id="cb12-40">  }</span>
<span id="cb12-41">}</span></code></pre></div>
</div>
<p>최종적으로 main.tf에서 network module을 불러와서 필요한 리소스를 생성한 후, server와 database ec2를 생성했습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>main/data.tf</strong></pre>
</div>
<div class="sourceCode" id="cb13" data-filename="main/data.tf" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">data <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_ami"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latest_ubuntu"</span> {</span>
<span id="cb13-2">  most_recent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> true</span>
<span id="cb13-3"></span>
<span id="cb13-4">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span> {</span>
<span id="cb13-5">    name   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span></span>
<span id="cb13-6">    values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"</span>]</span>
<span id="cb13-7">  }</span>
<span id="cb13-8"></span>
<span id="cb13-9">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span> {</span>
<span id="cb13-10">    name   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"virtualization-type"</span></span>
<span id="cb13-11">    values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hvm"</span>]</span>
<span id="cb13-12">  }</span>
<span id="cb13-13"></span>
<span id="cb13-14">  owners <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"099720109477"</span>]</span>
<span id="cb13-15">}</span>
<span id="cb13-16"></span>
<span id="cb13-17">data <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_ami"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"database_ami"</span> {</span>
<span id="cb13-18">  most_recent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> true</span>
<span id="cb13-19">  owners <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"self"</span>]</span>
<span id="cb13-20">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span> {</span>
<span id="cb13-21">    name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span></span>
<span id="cb13-22">    values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hyunghki-database-*"</span>]</span>
<span id="cb13-23">  }</span>
<span id="cb13-24">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span> {</span>
<span id="cb13-25">    name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"root-device-type"</span></span>
<span id="cb13-26">    values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ebs"</span>]</span>
<span id="cb13-27">  }</span>
<span id="cb13-28">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span> {</span>
<span id="cb13-29">    name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"virtualization-type"</span></span>
<span id="cb13-30">    values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hvm"</span>]</span>
<span id="cb13-31">  }</span>
<span id="cb13-32">}</span></code></pre></div>
</div>
<p>server ec2는 기본 ubuntu 20.04 이미지를 사용하고, database ec2는 이전에 생성한 ami를 사용했습니다.</p>
</section>
<section id="ansible-코드" class="level3">
<h3 class="anchored" data-anchor-id="ansible-코드">ansible 코드</h3>
<p>이제 필요한 설정을 진행하겠습니다.</p>
<p>파일 구조는 아래와 같습니다.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">terraform/</span></span>
<span id="cb14-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> _requirements/                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># docker compose setting files</span></span>
<span id="cb14-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> inventories/</span>
<span id="cb14-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   └── aws_ec2.yml</span>
<span id="cb14-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> roles/setting_docker/tasks</span>
<span id="cb14-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   └── main.yml</span>
<span id="cb14-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> server.yml</span></code></pre></div>
<p>먼저 용어를 알아야 합니다.</p>
<ol type="1">
<li><p>Inventory (인벤토리)</p>
<p>인벤토리는 Ansible이 관리할 호스트(서버)의 목록입니다. 호스트를 그룹으로 묶어 관리할 수 있습니다.</p></li>
<li><p>Playbook (플레이북)</p>
<p>플레이북은 Ansible에서 작업을 정의하는 YAML 파일입니다. 플레이북은 하나 이상의 <code>플레이</code>로 구성되며, 각 플레이는 특정 호스트 그룹에 대해 수행할 작업(task)을 정의합니다.</p></li>
<li><p>Role (롤)</p>
<p>롤은 Ansible에서 재사용 가능한 구성 단위입니다. 플레이북을 모듈화하고 구조화하여 재사용성을 높이는 데 사용됩니다.</p></li>
</ol>
<p>Inventory에서 server 그룹을 정의한 후, playbook으로 docker compose 환경을 설정하겠습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>aws_ec2.yml</strong></pre>
</div>
<div class="sourceCode" id="cb15" data-filename="aws_ec2.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">plugin: aws_ec2</span>
<span id="cb15-2">keyed_groups:</span>
<span id="cb15-3">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> key: tags</span>
<span id="cb15-4">compose:</span>
<span id="cb15-5">  ansible_host: public_ip_address</span>
<span id="cb15-6">leading_separator: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb15-7">filters:</span>
<span id="cb15-8">  instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>name: running</span></code></pre></div>
</div>
<p>AWS EC2 동적 인벤토리 설정입니다. Terraform으로 생성한 EC2 인스턴스들을 자동으로 관리할 수 있습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>server.yml</strong></pre>
</div>
<div class="sourceCode" id="cb16" data-filename="server.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> hosts: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Name_serverNode"</span></span>
<span id="cb16-2">  gather_facts: false</span>
<span id="cb16-3">  become: true</span>
<span id="cb16-4">  roles:</span>
<span id="cb16-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> role: setting_docker</span>
<span id="cb16-6">  tasks:</span>
<span id="cb16-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: copy_requirements</span>
<span id="cb16-8">      copy:</span>
<span id="cb16-9">        src: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./_requirements/"</span></span>
<span id="cb16-10">        dest: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> ansible_user </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/app/"</span></span>
<span id="cb16-11">        mode: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0755'</span></span>
<span id="cb16-12">        directory_mode: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0755'</span></span>
<span id="cb16-13"></span>
<span id="cb16-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: Split array values <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> DB_PRIVATE_IP</span>
<span id="cb16-15">      set_fact:</span>
<span id="cb16-16">        target: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'DB_PRIVATE_IP') | split(' ') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-17"></span>
<span id="cb16-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: execute docker compose</span>
<span id="cb16-19">      shell:</span>
<span id="cb16-20">        cmd: docker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>compose up <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>d</span>
<span id="cb16-21">        chdir: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> ansible_user </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/app/"</span></span>
<span id="cb16-22">      environment:</span>
<span id="cb16-23">        DOMAIN_NAME: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> ansible_host </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-24">        MYSQL_USER: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'MYSQL_USER') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-25">        MYSQL_PASSWORD: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'MYSQL_PASSWORD') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-26">        DATABASE_NAME: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'DATABASE_NAME') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-27">        SITE_TITLE: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'SITE_TITLE') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-28">        ADMIN_NAME: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'ADMIN_NAME') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-29">        ADMIN_PASSWORD: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'ADMIN_PASSWORD') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-30">        ADMIN_EMAIL: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'ADMIN_EMAIL') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-31">        USER_NAME: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'USER_NAME') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-32">        USER_PASSWORD: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'USER_PASSWORD') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-33">        USER_EMAIL: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'USER_EMAIL') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-34">        DB_PRIVATE_IP: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> target[ansible_play_hosts.index(inventory_hostname)] </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-35"></span>
<span id="cb16-36">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span> done message</span>
<span id="cb16-37">      debug:</span>
<span id="cb16-38">        msg: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> ansible_host </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span></code></pre></div>
</div>
<p>’Name’이 ’serverNode’인 인스턴스들만 선택하여 설정을 진행하겠습니다.</p>
</section>
</section>
<section id="실행" class="level2">
<h2 class="anchored" data-anchor-id="실행">실행</h2>
<p>먼저 .env 파일에 환경변수를 설정해줍니다.</p>
<p>ip 정보도 알아낸 후, SSH_IP에 설정해줍니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-05-20-30-17.png" class="img-fluid figure-img"></p>
<figcaption>naver에 내 ip 검색</figcaption>
</figure>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>.env</strong></pre>
</div>
<div class="sourceCode" id="cb17" data-filename=".env" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># only 1 line variable is allowed</span></span>
<span id="cb17-2">AWS_REGION<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>northeast<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb17-3">AWS_ACCESS_KEY_ID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=********************</span></span>
<span id="cb17-4">AWS_SECRET_ACCESS_KEY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=********************</span></span>
<span id="cb17-5">SERVER_INSTANCE_COUNT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb17-6">SSH_IP<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">121.135.181.56</span></span>
<span id="cb17-7">SSH_PUBLIC_KEY_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=~/</span>.ssh<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>id_rsa.pub</span>
<span id="cb17-8">SSH_PRIVATE_KEY_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=~/</span>.ssh<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>id_rsa</span>
<span id="cb17-9">MYSQL_USER<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dudu</span>
<span id="cb17-10">MYSQL_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>secret</span>
<span id="cb17-11">MYSQL_ROOT_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>secret</span>
<span id="cb17-12">DATABASE_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cloud</span>
<span id="cb17-13">SITE_TITLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hyunghki blog'</span></span>
<span id="cb17-14">ADMIN_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>admin</span>
<span id="cb17-15">ADMIN_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>secret</span>
<span id="cb17-16">ADMIN_EMAIL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>admin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>example.com</span>
<span id="cb17-17">USER_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user</span>
<span id="cb17-18">USER_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>secret</span>
<span id="cb17-19">USER_EMAIL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>example.com</span></code></pre></div>
</div>
<p>그후 make 명령어를 입력하면 자동으로 build가 진행됩니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-05-20-24-46.png" class="img-fluid figure-img"></p>
<figcaption>명령어 실행 결과</figcaption>
</figure>
</div>
<p>build가 완료되면 완료 메세지의 ip로 접속해줍니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-05-20-44-52.png" class="img-fluid figure-img"></p>
<figcaption>접속 페이지</figcaption>
</figure>
</div>
<p>wordpress 접속 페이지가 잘 뜨는 것을 확인할 수 있습니다.</p>
</section>
<section id="결과" class="level2">
<h2 class="anchored" data-anchor-id="결과">결과</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-05-20-19-46.png" class="img-fluid figure-img"></p>
<figcaption>최종 점수</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-05-20-21-13.png" class="img-fluid figure-img"></p>
<figcaption>최종 평가</figcaption>
</figure>
</div>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">outro</h2>
<p>솔직히 일반적으로 사용되는 cloud 구조를 적용한건 아니긴 하지만, 과제에 맞춰서 진행하기 위해 고민하는 과정에서 다양한 구조를 적용해봤는데, 그 과정이 나름 학습에 도움이 된거 같습니다. 이 분야에 공부를 꽤 했고, 그 내용들을 다양하게 고민하며 적용해보고 싶다면 이 프로젝트가 괜찮은 선택지가 될 수도 있어 보입니다.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>aws</category>
  <category>packer</category>
  <category>terraform</category>
  <category>ansible</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/02_areas/42_seoul/notes/09.html</guid>
  <pubDate>Wed, 29 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>cloud-1 개념 설명</title>
  <link>https://cryscham123.github.io/posts/02_areas/42_seoul/notes/08.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-outer-1.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul outer 과제</figcaption>
</figure>
</div>
<p>다음 학기 시작 전까지 개념공부만 하면서 시간을 보내려고 하니까 프로젝트가 하고 싶어졌습니다. 원래는 python 과제를 하려고 했는데, 이전에 cloud 과제를 진행하다가 말았던게 기억나서 이어서 해보면 괜찮겠다 생각했습니다.</p>
</section>
<section id="프로젝트-및-구현-설명" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-및-구현-설명">프로젝트 및 구현 설명</h2>
<section id="개요" class="level3">
<h3 class="anchored" data-anchor-id="개요">개요</h3>
<p><a href="https://cdn.intra.42.fr/pdf/pdf/147805/en.subject.pdf">과제 명세서</a></p>
<p>참고한 자료는 다음과 같습니다:</p>
<ul>
<li><a href="https://www.udemy.com/course/aws-certified-solutions-architect-associate-saa-c03/">AWS SAA Udemy 강의</a></li>
<li><a href="https://www.udemy.com/course/terraform-and-ansible/?utm_campaign=2025-01-21&amp;utm_content=promo&amp;utm_medium=4897172&amp;utm_source=email-sendgrid&amp;utm_term=38475056">ansible terraform Udemy 강의</a></li>
</ul>
<p>이 강의들도 본 지 1년이 다되어가긴 하지만..과제할 때 사용한 제 배경지식이 여기서 나온거니까요. 과제를 진행하실 분들은 한번 수강해보시면 도움이 될 것 같습니다.</p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>이 포스팅에서 docker와 nginx, wordpress, mysql 구조에 대한 설명은 생략하겠습니다.<br>
전체 코드는 <a href="https://github.com/cryscham123/cloud-1">github repo</a>에서 확인하실 수 있습니다.</p>
</div>
</div>
</div>
</section>
<section id="what-is-iac" class="level3">
<h3 class="anchored" data-anchor-id="what-is-iac">What is IaC?</h3>
<p>이 프로젝트의 목표는 <code>IaC(Infrastructure as Code) tool</code>을 이용하여 wordpress 사이트를 cloud에 자동으로 배포하는 것입니다.</p>
<p>IaC는 <code>인프라 구성을 코드로 관리하는 방식</code>으로, 수동으로 리소스를 생성하고 설정하는 방식에 비해 <code>버전 관리가 간편</code>하고, <code>동일한 환경을 쉽게 재현</code>하거나, <code>코드 리뷰 등의 방식으로 휴먼 에러를 줄이는 데 용이</code>하게 사용할 수 있습니다.</p>
<p>이번 프로젝트에서는 <code>Packer, Terraform, Ansible</code> 세 가지 IaC tool을 조합해 사용했습니다</p>
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-05-20-27-17.png" class="img-fluid"></p>
<ol type="1">
<li><p><strong>Packer</strong>: <code>인프라 생성 전, 상세 설정</code>이 되어있는 image를 build할 수 있는 tool 입니다.</p></li>
<li><p><strong>Terraform</strong>: <code>cloud 인프라를 생성</code>하는 tool입니다. <code>packer에서 생성한 ami를 사용</code>할 수 있습니다.</p></li>
<li><p><strong>Ansible</strong>: 서버 내부의 <code>상세 설정을 자동화</code>합니다. 일반적인 bash script와는 다르게 <code>멱등성 있는 설정</code>이 가능하다는 점이 큰 장점입니다. 이때, 서버는 <code>python이 설치되어 있어야 하고, ssh로 접근 가능</code>해야 합니다.</p></li>
</ol>
<p>위의 이미지 처럼, packer로 <code>필요한 설정이 완료된 image를 생성</code>한 뒤, 그 이미지를 기반으로 <code>cloud infra</code>를 terraform으로 생성하고, <code>생성된 infra의 상세 설정</code>을 ansible을 이용해서 구현해줄 것입니다.</p>
<p>Packer와 Ansible은 서버 설정 자동화라는 <code>동일한 기능</code>을 수행하는 도구입니다. 두 도구는 각각 다양한 특징과 장단점이 있지만, 이 과제에서 알아야 하는 차이점은 아래와 같습니다.</p>
<p>Packer는 <code>임시 EC2 인스턴스</code>를 생성하여 그 위에서 필요한 설정을 완료한 후, 해당 인스턴스를 AMI로 변환하는 방식으로 동작합니다. 이렇게 생성된 AMI는 이후 실제 인프라 구축 시 그대로 사용할 수 있습니다. 따라서 최종 목적지 서버가 <code>SSH 접근이 제한되는 환경</code>이더라도, 미리 필요한 <code>모든 설정이 완료된 이미지를 사용</code>할 수 있다는 장점이 있습니다.</p>
<p>반면에 Ansible은 <code>SSH 접근이 가능한 서버에서만 동작</code>하지만, Packer와 달리 <code>인프라 구축 후에 얻을 수 있는 정보</code>(예: EC2의 IP)를 활용할 수 있습니다.</p>
<p>이러한 특성을 고려하여 이 프로젝트에서는 두 도구를 상황에 맞게 조합하여 사용했습니다.</p>
</section>
<section id="전체적인-구조" class="level3">
<h3 class="anchored" data-anchor-id="전체적인-구조">전체적인 구조</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-05-20-27-45.png" class="img-fluid figure-img"></p>
<figcaption>구현 aws 구조</figcaption>
</figure>
</div>
<p><code>Public subnet의 EC2</code>들에 대한 <code>ssh 접근</code>은 <code>관리용 컴퓨터에서만</code>(terraform, ansible 코드가 실행되는 컴퓨터) 접근이 가능하도록 제한했고, MySQL의 데이터는 <code>Private subnet의 EC2</code>에 저장한 뒤 <code>Public subnet의 EC2만 접근</code>할 수 있도록 설정했습니다. <code>Public subnet의 EC2</code>는 <code>사용자가 원하는 갯수를 설정</code>할 수 있고, <code>그 갯수에 맞춰서</code> private subnet의 <code>dbms EC2</code>가 생성되도록 설계했습니다.</p>
<p>실제 프로덕션 환경이라면 위와 같은 구조로는 설계하지 않습니다. 일단 EC2 머신들을 Auto Scaling Group으로 묶고, 그 앞에 Network Load Balancer를 두어 단일 엔드포인트로 관리하는 것이 좋습니다. 또한 Database는 AWS RDS를 이용하고, WordPress의 파일 시스템은 EFS나 S3를 활용해 Stateless하게 구현하는게 좋습니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-05-20-29-17.png" class="img-fluid figure-img"></p>
<figcaption>조금 더 일반적인 구조(물론 docker compose는 잘 안쓸것 같긴 합니다)</figcaption>
</figure>
</div>
<p>제 구현에서는 <code>각 서버가 독립적인 상태와 엔드포인트</code>를 가지고 있습니다.</p>
<p>그렇게 한 이유는 일단 <code>aws free tier</code> 서비스만으로 과제를 구현하려고 했던게 제일 크고요..(NLB는 사용할 수 없었습니다.) 나머지는 과제 제약사항 때문인데,</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-05-20-28-30.png" class="img-fluid figure-img"></p>
<figcaption>과제 제약사항</figcaption>
</figure>
</div>
<p>모든 프로세스는 컨테이너 안에서 동작해야 한다는 제약때문에, <code>aws RDS</code>는 <code>사용할 수 없었습니다</code>. 그리고 database는 public internet에서 접근할 수 없다고 해서, <code>db</code>는 <code>private subnet</code>의 ec2에서 돌아가게 설계했습니다.</p>
</section>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">outro</h2>
<p>여기서 구현된 infra 구조는 사실 별로 근본있는 구조는 아니니까, 이것보다는 IaC 툴을 얼마나 편리하게 사용할 수 있는지에 초점을 맞춰서 봐주시길 바라고 있습니다.</p>
<p>이어서 코드에 대한 설명은 다음 게시글에 포스팅하겠습니다.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>aws</category>
  <category>packer</category>
  <category>terraform</category>
  <category>ansible</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/02_areas/42_seoul/notes/08.html</guid>
  <pubDate>Mon, 27 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>ft_transcendence - github action</title>
  <link>https://cryscham123.github.io/posts/02_areas/42_seoul/notes/01.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-course-6.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul 공통과정 6서클 과제</figcaption>
</figure>
</div>
<p>42 Seoul 공통과정의 마지막 과제입니다. 이 프로젝트는 개발자가 선호하는 라이브러리와 프레임워크를 자유롭게 선택하여 구현할 수 있다는 점이 특징입니다.</p>
<p>대형 협업 과제인 만큼, 과제에 명시되어있지 않지만 협업을 위한 툴도 공부해서 다양하게 적용해볼 수 있는 좋은 과제인것 같습니다. 저같은 경우에는 coursera, udemy 강의를 통해 <strong>agile</strong> 협업 방식과 <strong>github에서의 적용 방법</strong>에 대해 공부를 했고, 프로젝트 진행에 있어서 꽤 도움이 됐던걸로 기억합니다. 사실 프로젝트를 진행하다보니, agile 방식을 온전히 다 적용하기엔 적합하지 않다고 판단했지만, <strong>Kanban Board</strong>로 프로젝트를 관리하는 것 같은 부분은 꽤 유용하게 활용할 수 있었습니다.</p>
</section>
<section id="프로젝트-및-구현-설명" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-및-구현-설명">프로젝트 및 구현 설명</h2>
<section id="개요" class="level3">
<h3 class="anchored" data-anchor-id="개요">개요</h3>
<p><a href="https://cdn.intra.42.fr/pdf/pdf/140713/en.subject.pdf">과제 명세서</a></p>
<p>해당 과제는 실시간 <a href="https://www.ponggame.org/">Pong 게임</a> 매칭 웹사이트를 만드는게 목표입니다. 저는 이번 프로젝트에서 <strong>github action 설정, User Management Backend 설계와 42 API를 이용한 OAuth 인증, JWT 구현, Game History를 Block Chain으로 저장</strong>하는 파트를 담당했습니다.</p>
<p>참고한 자료는 다음과 같습니다:</p>
<ul>
<li><a href="https://www.coursera.org/learn/agile-project-management">Google Agile Project 관리</a></li>
<li><a href="https://docs.github.com/ko/actions">Github Action Docs</a></li>
<li><a href="https://cli.github.com/manual/">Github CLI Docs</a></li>
<li><a href="https://www.udemy.com/course/python-django-the-practical-guide/?couponCode=KRLETSLEARNNOW">Django udemy 강좌</a></li>
<li><a href="https://www.django-rest-framework.org/">Django Rest Framework Docs</a></li>
<li><a href="https://django-rest-framework-simplejwt.readthedocs.io/en/latest/index.html">Django Simple JWT</a></li>
<li><a href="https://mgyo.tistory.com/832">JWT Token 탈취 대응 시나리오</a></li>
<li><a href="https://medium.com/@jose-luis-navarro/securing-our-microservices-through-authentication-and-authorization-with-jwt-refresh-tokens-and-f4439810fce7">micro service에서 JWT 활용 방법</a></li>
<li><a href="https://puleugo.tistory.com/154">Refresh Token을 사용해야 하는 이유</a></li>
<li><a href="https://www.hahwul.com/2020/01/18/samesite-lax/">Cookie에서의 same site 옵션</a></li>
<li><a href="https://bitcoin.org/files/bitcoin-paper/bitcoin_ko.pdf">Bitcoin 백서</a></li>
<li><a href="https://www.udemy.com/course/ethereum-and-solidity-the-complete-developers-guide/?couponCode=KRLETSLEARNNOW">Solidity Udemy 강의</a></li>
<li><a href="https://docs.soliditylang.org/en/latest/">Solidity Docs</a></li>
<li><a href="https://youtube.com/playlist?list=PL7jH19IHhOLOJfXeVqjtiawzNQLxOgTdq&amp;si=k5TMs5VUF0Z1xIA2">nomad coder 블록체인 시리즈</a></li>
<li><a href="https://www.cyfrin.io/updraft">블록체인 강의</a></li>
</ul>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>이 포스팅에서는 <strong>github action setting, jwt, block chain</strong> 부분만 다루겠습니다.<br>
전체 코드는 비공개 되어있는 상태입니다.</p>
</div>
</div>
</div>
</section>
<section id="github-action-setting" class="level3">
<h3 class="anchored" data-anchor-id="github-action-setting">Github Action Setting</h3>
<p>github를 이용해서 agile 방법론을 적용할 수 있도록 의도했고, <strong>자동화</strong>와 <strong>template</strong>을 이용해 통일성 있는 구조를 유지하려고 했습니다.</p>
<p><strong>1. 회의를 통해 진행해야 하는 작업을 Kanban board에 정리한다.</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-01-17-11-28-18.png" class="img-fluid figure-img"></p>
<figcaption>Github Kanban Board</figcaption>
</figure>
</div>
<p>각각의 column에는 다음과 같은 내용이 들어갑니다.</p>
<ol type="1">
<li><strong>Discussion</strong>: 논의가 필요한 작업. 개개인이 자유롭게 올릴 수 있습니다</li>
<li><strong>Backlog</strong>: Discussion에 있는 내용 중 구현하기로 회의에서 정한 작업</li>
<li><strong>Ready</strong>: Back log에 있는 작업 중 이번 Sprint에서 구현할 작업들</li>
<li><strong>In Progress</strong>: Ready에 있는 작업 중 누군가가 작업중인 것</li>
<li><strong>Done</strong>: master branch에 merge가 완료된 작업</li>
</ol>
<p>자세한 내용은 meeting 부분을 참고해 주세요.</p>
<p>참고로 <strong>Disccusion</strong>에 작업을 올리는 방법은 <strong>template에 맞게 issue를 올리</strong>면 됩니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-01-16-19-51-40.png" class="img-fluid figure-img"></p>
<figcaption>Discussion template</figcaption>
</figure>
</div>
<p>아래와 같이 설정 파일을 만들어서 ‘.github/ISSUE_TEMPLATE/’ 폴더 안에 저장하면 issue create 시 자동으로 template이 뜨게 할 수 있습니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name:</span> New discussion</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">description:</span> new discussion</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">title:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[DISCUSSION]"</span></span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">labels:</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enhancement"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">projects:</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"org_name/5"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb1-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">body:</span></span>
<span id="cb1-7">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> type: markdown</span>
<span id="cb1-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">attributes:</span></span>
<span id="cb1-9">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">value:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb1-10">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">해당</span> 기능과 관련된 request가 이미 존재하는지 확인해주세요.</span>
<span id="cb1-11">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> type: textarea</span>
<span id="cb1-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">id:</span> story</span>
<span id="cb1-13">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">attributes:</span></span>
<span id="cb1-14">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">label:</span> Story</span>
<span id="cb1-15">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">description:</span> 해당 기능에 대한 설명이나 필요한 배경을 작성해주세요.</span>
<span id="cb1-16">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">placeholder:</span> 자유로운 양식으로 작성해주세요.</span>
<span id="cb1-17">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">validations:</span></span>
<span id="cb1-18">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">required:</span> true</span></code></pre></div>
<p><strong>2. Kanban board를 보고 개인이 능동적으로 고유 브랜치에 작업을 진행한다.</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-01-17-11-29-41.png" class="img-fluid figure-img"></p>
<figcaption>빨간 밑줄 부분을 설정해줍니다.</figcaption>
</figure>
</div>
<p>Kanban board의 Ready section에 있는 작업을 클릭해서 들어간 후, <strong>assignees를 본인으로 선택해서 작업</strong>하면 됩니다. <strong>task completion criteria</strong>라는 내용이 보이는데, 이는 <strong>회의를 통해 결정</strong>하는 것으로, 나중에 작업이 완료되고 <strong>pull request 시, 평가자가 작업에 완성도에 대해 판단할 수 있는 기준</strong>으로 제공됩니다.</p>
<p>자동화 코드는 아래와 같이 구현했습니다.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name:</span> Create branch</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">on:</span></span>
<span id="cb2-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">issues:</span></span>
<span id="cb2-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">types:</span> [ assigned ]</span>
<span id="cb2-5">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pull_request:</span></span>
<span id="cb2-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">types:</span> [ opened, closed ]</span>
<span id="cb2-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jobs:</span></span>
<span id="cb2-8">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">create_issue_branch_job:</span></span>
<span id="cb2-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">runs-on:</span> ubuntu-latest</span>
<span id="cb2-10">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">steps:</span></span>
<span id="cb2-11">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Generate token</span>
<span id="cb2-12">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">id:</span> generate_token</span>
<span id="cb2-13">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uses:</span> tibdex/github-app-token@v2</span>
<span id="cb2-14">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">with:</span></span>
<span id="cb2-15">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">app_id:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ secrets.APP_ID </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb2-16">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">private_key:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ secrets.PRIVATE_KEY </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb2-17"></span>
<span id="cb2-18">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gh 명령어를 이용해 project의 상태를 In progress로 수정해줍니다.</span></span>
<span id="cb2-19">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Project in-progress</span>
<span id="cb2-20">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">if:</span> github.event.action == <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'assigned'</span></span>
<span id="cb2-21">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb2-22">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PROJECT_ID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> project view 5 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--owner</span> organization-for-practice <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.id'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-23">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ITEM_ID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> project item-list 5 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--owner</span> organization-for-practice <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".items[] | select(.content.number == </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${NUMBER}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">) | .id"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-24">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">FIELD_ID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> project field-list 5 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--owner</span> organization-for-practice <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.fields[2].id'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-25">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">SINGLE_ID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> project field-list 5 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--owner</span> organization-for-practice <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.fields[2].options[] | select(.name == "In progress") | .id'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-26">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> project item-edit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--id</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${ITEM_ID}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--field-id</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${FIELD_ID}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--single-select-option-id</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${SINGLE_ID}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--project-id</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${PROJECT_ID}</span></span>
<span id="cb2-27">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb2-28">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GH_TOKEN:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.generate_token.outputs.token </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb2-29">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NUMBER:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ github.event.issue.number </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb2-30"></span>
<span id="cb2-31">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign한 작업에 대한 branch를 새로 만들어줍니다.</span></span>
<span id="cb2-32">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Create Issue Branch</span>
<span id="cb2-33">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uses:</span> robvanderleek/create-issue-branch@main</span>
<span id="cb2-34">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb2-35">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GITHUB_TOKEN:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.generate_token.outputs.token </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span></code></pre></div>
<p>위의 코드는 assign한 작업을 Ready column에서 In progress column으로 옮겨주고, 자동으로 작업할 branch를 만들어줍니다.</p>
<p>branch 자동 생성은 <a href="https://github.com/robvanderleek/create-issue-branch">이 workflow</a>를 사용하였고, 적용 시 아래와 같이 브랜치가 생성됩니다.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoLinkIssue</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoCloseIssue</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">branchName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> tiny</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">commentMessage</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb3-5">  \"${branchName}\" branch 생성 완료.</span>
<span id="cb3-6">  해당 branch를 통해서 main에 pull request 올려주세요.</span>
<span id="cb3-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">branches</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'task list'</span></span>
<span id="cb3-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prefix</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> feature/${issue.title[12,27],}/</span></span>
<span id="cb3-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">copyIssueAssigneeToPR</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bug'</span></span>
<span id="cb3-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prefix</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> hot_fix/${issue.title[6,21],}/</span></span>
<span id="cb3-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">copyIssueAssigneeToPR</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*'</span></span>
<span id="cb3-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">skip</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<p>위의 config 파일을 작성해주면 아래와 같이 브랜치가 생성됩니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-01-17-11-30-26.png" class="img-fluid figure-img"></p>
<figcaption>자동 생성된 branch</figcaption>
</figure>
</div>
<p>이름도 자동으로 생성되게 해서 <strong>convention을 지켜야 한다는 부담을 줄여</strong>줬습니다.</p>
<p><strong>3. 작업이 완료되면, 모든 조건을 충족하는지 확인한 후, master에 merge 한다.</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-01-17-11-31-07.png" class="img-fluid figure-img"></p>
<figcaption>pull request 화면</figcaption>
</figure>
</div>
<p>작업이 완료됬다고 판단되면 위 화면과 같이 <strong>pull request를 생성</strong>하고, <strong>Reviewer를 설정</strong>해주면 됩니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-01-17-11-31-35.png" class="img-fluid figure-img"></p>
<figcaption>task completion criteria</figcaption>
</figure>
</div>
<p>그러면 이전에 설정했던 기준들이 자동으로 불러와지고, <strong>모든 항목에 체크가 완료</strong>되어야 <strong>merge를 할 수 있게 설정</strong>했습니다. 구현 코드는 아래와 같습니다.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name:</span> Master merge rutine</span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">on:</span></span>
<span id="cb4-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pull_request_target:</span></span>
<span id="cb4-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">types:</span> [ opened, synchronize ]</span>
<span id="cb4-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">branches:</span></span>
<span id="cb4-6">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> master</span>
<span id="cb4-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb4-8">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PR_NUM:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ github.event.pull_request.number </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-9">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GH_REPO:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ github.repository </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jobs:</span></span>
<span id="cb4-11">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">get_checklist:</span></span>
<span id="cb4-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">runs-on:</span> ubuntu-latest</span>
<span id="cb4-13">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">if:</span> github.event.action == <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'opened'</span></span>
<span id="cb4-14">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">steps:</span></span>
<span id="cb4-15">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Generate token</span>
<span id="cb4-16">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">id:</span> generate_token</span>
<span id="cb4-17">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uses:</span> tibdex/github-app-token@v2</span>
<span id="cb4-18">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">with:</span></span>
<span id="cb4-19">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">app_id:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ secrets.APP_ID </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-20">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">private_key:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ secrets.PRIVATE_KEY </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-21">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Get issue</span>
<span id="cb4-22">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">id:</span> issue_num</span>
<span id="cb4-23">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb4-24">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">BRANCH:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ github.event.pull_request.head.ref </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-25">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb4-26">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$BRANCH</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature\/.*\/i[0-9]\+'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$BRANCH</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hot_fix\/.*\/i[0-9]\+'</span></span>
<span id="cb4-27">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">TMP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$BRANCH</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'i[0-9]\+'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-28">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NUMBER=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${TMP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span>i<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$GITHUB_OUTPUT</span></span>
<span id="cb4-29">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Get issue body</span>
<span id="cb4-30">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">id:</span> issue_body</span>
<span id="cb4-31">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb4-32">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GH_TOKEN:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.generate_token.outputs.token </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-33">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NUM:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.issue_num.outputs.number </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-34">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb4-35">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CONTENTS&lt;&lt;EOF"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$GITHUB_OUTPUT</span></span>
<span id="cb4-36">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> issue view <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${NUM}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span> body <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.body'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$GITHUB_OUTPUT</span></span>
<span id="cb4-37">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EOF"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$GITHUB_OUTPUT</span></span>
<span id="cb4-38">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Update checklist</span>
<span id="cb4-39">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb4-40">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> pr comment <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PR_NUM</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--body</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${BODY}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-41">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb4-42">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GH_TOKEN:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.generate_token.outputs.token </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-43">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">BODY:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.issue_body.outputs.contents </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}"</span></span></code></pre></div>
<p><strong>merge가 완료된 branch</strong>는 <strong>자동으로 삭제</strong>가 되도록 설정을 해주었습니다.</p>
<p>이제 아래는 실제 <strong>프로젝트를 진행할 때 만들었던 rule</strong>들입니다.</p>
<section id="work-flow" class="level4">
<h4 class="anchored" data-anchor-id="work-flow"><strong>1. work flow</strong></h4>
<p><strong>github flow</strong>로 진행됩니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-01-16-20-11-33.png" class="img-fluid figure-img"></p>
<figcaption>github flow</figcaption>
</figure>
</div>
<ol type="1">
<li>매 작업은 master branch의 HEAD를 기반으로 이루어집니다.<br>
pr을 올리지 않는 개인 작업용 <strong>local branch는 자유롭게 생성</strong>해주세요.</li>
<li>master에 직접적인 push는 관리자를 제외하고는 불가능합니다.</li>
<li>master에 대한 merge는 squash merge로 진행됩니다.</li>
<li>그 외의 merge는 rebase로 진행해주세요.</li>
</ol>
</section>
<section id="work" class="level4">
<h4 class="anchored" data-anchor-id="work"><strong>2. work</strong></h4>
<ol type="1">
<li>kanban board의 'Ready' 섹션에서 하나를 정해서 새로운 기능에 대한 작업을 진행해주세요.<br>
선택한 작업은 assignees에 자신의 팀원을 등록 후, Start Date를 해당 날짜로 설정해주세요.<br>
assignees 등록이 완료되면 자동으로 target branch가 생성됩니다.<br>
해당 branch에 팀원들이 필요한 기능들을 자유로운 방식으로 구현한 후, master branch에 merge 해주세요.<br>
단, 해당 branch에 대한 merge는 rebase로 진행해주세요.</li>
<li>hot_fix issue나, new feature request issue는 discussion의 필요성이 있을 경우에 등록해주세요.</li>
<li>작업 중, 현재 작업하는 범위 외에서 추가적인 기능이 필요할 경우 관련 issue에 comment를 남기거나, reopen 해주세요.</li>
</ol>
</section>
<section id="commit-message-convention" class="level4">
<h4 class="anchored" data-anchor-id="commit-message-convention"><strong>3. commit message convention</strong></h4>
<p>아래의 명령어를 입력해주세요</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config commit.template .github/COMMIT_MESSAGE_TEMPLATE</span></code></pre></div>
<p>이후, -m 옵션 없이 ’git commit’으로 message를 입력해주세요.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>COMMIT_MESSAGE_TEMPLATE</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="COMMIT_MESSAGE_TEMPLATE" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># commit message template</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ▼ &lt;Title&gt; 작성</span></span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ▼ &lt;빈 줄&gt;</span></span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ▼ &lt;body&gt; 작성</span></span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ▼ &lt;빈 줄&gt;</span></span>
<span id="cb6-9"></span>
<span id="cb6-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ▼ &lt;footer&gt; 작성</span></span>
<span id="cb6-11"></span>
<span id="cb6-12"></span>
<span id="cb6-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># About Convention</span></span>
<span id="cb6-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   &lt;Title&gt;</span></span>
<span id="cb6-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 필수로 입력해주세요</span></span>
<span id="cb6-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 형식: &lt;type&gt;: &lt;short summary&gt;</span></span>
<span id="cb6-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb6-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       &lt;type&gt;</span></span>
<span id="cb6-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - config: 설정 관련 파일 작성 또는 변경</span></span>
<span id="cb6-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - docs: 문서 변경사항</span></span>
<span id="cb6-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - feat: 새로운 기능</span></span>
<span id="cb6-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - fix: 버그 수정</span></span>
<span id="cb6-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - refactor: 기능 추가나 버그 수정이 아닌 변경 사항</span></span>
<span id="cb6-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - remove: 코드나 파일 제거</span></span>
<span id="cb6-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - style: 스타일 작성 또는 수정</span></span>
<span id="cb6-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - test: 누락된 테스트 추가 또는 기존 테스트 수정</span></span>
<span id="cb6-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - core: 기능 구현 외 시스템 관련 작업</span></span>
<span id="cb6-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb6-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       &lt;short summary&gt;</span></span>
<span id="cb6-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - 변경 사항에 대한 간단한 설명</span></span>
<span id="cb6-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - 첫글자 소문자, 현재 시제, 명령문으로 마지막에 .(마침표) 없이 작성</span></span>
<span id="cb6-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb6-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   &lt;body&gt;</span></span>
<span id="cb6-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 선택적으로 입력 해주세요</span></span>
<span id="cb6-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 현재 시제, 명령문으로 작성</span></span>
<span id="cb6-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 변경 사항의 동기(왜)를 설명</span></span>
<span id="cb6-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 변경 효과를 설명하기 위해 이전 동작과 현재 동작의 비교를 포함할 수 있음</span></span>
<span id="cb6-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb6-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   &lt;footer&gt;</span></span>
<span id="cb6-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 선택적으로 입력 해주세요</span></span>
<span id="cb6-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 해당 commit과 관련된 task의 issue 번호들을 적어주세요</span></span>
<span id="cb6-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 'bug'나 'task list' label이 붙은 issue는 제외해주세요</span></span>
<span id="cb6-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - ex) closes #&lt;issue 번호&gt; closes #&lt;issue 번호&gt; ...</span></span></code></pre></div>
</div>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>commit message template은 <a href="https://www.conventionalcommits.org/en/v1.0.0/">이 사이트</a>를 참고해서 만들었습니다.</p>
</div>
</div>
</div>
</section>
<section id="pull-request" class="level4">
<h4 class="anchored" data-anchor-id="pull-request"><strong>4. pull request</strong></h4>
<ol type="1">
<li>pull request는 <strong>500줄의 코드</strong>를 넘어가지 않게 작성 바랍니다.</li>
<li>모든 check list를 통과한 request만 master에 merge 가능합니다.</li>
<li>reviewers에는 해당 작업과 관련된 domain의 팀원을 선택해주세요. 최소 1명 이상의 동료에게 평가를 받은 request만 merge 가능합니다.</li>
</ol>
</section>
<section id="meeting" class="level4">
<h4 class="anchored" data-anchor-id="meeting"><strong>5. meeting</strong></h4>
<ul>
<li><p>daily meeting</p>
<ul>
<li><p>매일 정해진 시간에 팀원들은 각각 다음과 같은 사안에 대해 논의합니다.</p>
<ol type="1">
<li>개인이 어제 작업한 내용</li>
<li>개인이 오늘 작업할 내용</li>
<li>개인이 현재 도움이 필요한 내용</li>
</ol></li>
<li><p>이후, 새로운 내용이 추가된 ('Disccusion' 섹션에 있는) issue 중 다음과 같은 내용에 대해 논의합니다.</p>
<ol type="1">
<li>해당 issue가 유효한가</li>
<li>추가적으로 필요하거나 필요 없는 내용</li>
<li>해당 issue의 priority (매우 급함 / 급함 / 안 급함)</li>
<li>해당 issue의 estimate (작업하는데 필요한 노력의 정량적인 수치)</li>
</ol></li>
<li><p>추가적으로, project의 'Back log' 항목에서 'Ready' 항목으로 추가해야 할 작업에 대해 논의하거나 'Ready' 항목에서 'Back log' 항목으로 제외할 작업에 대해 논의할 수 있습니다.</p></li>
</ul></li>
<li><p>sprint planning / retrospective</p>
<ul>
<li>2주에 한번 진행.</li>
<li>이전 sprint에 대한 평가와 이후 sprint를 위한 계획을 세웁니다.<br>
</li>
<li>planning
<ul>
<li>Project의 'Back log' 항목 중 본격적으로 작업을 진행할 항목을 정합니다.</li>
<li>daily meeting 시간을 조정할 수 있습니다.</li>
</ul></li>
<li>retrospective
<ul>
<li>이전 sprint의 문제점에 대해 서로 의논해봅니다.</li>
</ul></li>
</ul></li>
</ul>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>프로젝트를 하다보니, 생각보다 진행 속도가 빨라서 2주에 한번 진행하는 sprint는 유명무실해져버렸습니다. 실제로는 daily meeting만 진행을 했습니다.</p>
</div>
</div>
</div>
</section>
</section>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">outro</h2>
<p>내용이 너무 길어져서 2편에 계속 포스팅 하겠습니다.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>agile</category>
  <category>github action</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/02_areas/42_seoul/notes/01.html</guid>
  <pubDate>Thu, 16 Jan 2025 15:00:00 GMT</pubDate>
</item>
</channel>
</rss>
