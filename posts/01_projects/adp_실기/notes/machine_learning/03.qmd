---
title: "분류 - 산탄데르 고객 만족 예측"
date: 2025-07-27
categories: ["머신 러닝"]
---

![](/img/stat-thumb.jpg){.post-thumbnail}

## Preprocessing

```{python}
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import warnings

plt.rcParams['font.family'] = 'Noto Sans KR'
warnings.filterwarnings('ignore')

df = pd.read_csv('_data/santander/train.csv', encoding='latin-1')
df.info()
```

```{python}
df.describe()
```

```{python}
df['var3'].replace(-999999, 2, inplace=True)
df.drop('ID', axis=1, inplace=True)

X_features = df.iloc[:, :-1]
labels = df.iloc[:, -1]
```

```{python}
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X_features, labels, test_size=0.2)
```

- train, test의 label의 비율이 동일한게 좋은걸까

## XGBoost

```{python}
X_tr, X_val, y_tr, y_val = train_test_split(X_train, y_train, test_size=0.3)
```

```{python}
from xgboost import XGBClassifier
from sklearn.metrics import roc_auc_score

evals = [(X_tr, y_tr), (X_val, y_val)]
xgb_clf = XGBClassifier(n_estimators=400, 
                    learning_rate=0.05, 
                    early_stopping_rounds=100,
                    eval_metric=['auc'])
xgb_clf.fit(X_tr, y_tr, eval_set=evals, verbose=False)
xgb_roc_score = roc_auc_score(y_test, xgb_clf.predict_proba(X_test)[:, 1])
print(f'{xgb_roc_score:.3f}')
```


