---
title: "EDA 템플릿"
date: 2025-09-29
categories: ["데이터 분석"]
---

![](/img/stat-thumb.jpg){.post-thumbnail}

# 데이터 이해

## Load Library

```{python}
#| eval: false
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import platform
import warnings
```

## Settings

```{python}
#| eval: false
warnings.filterwarnings('ignore')

if platform.system() == 'Darwin': #맥
        plt.rc('font', family='AppleGothic') 
elif platform.system() == 'Windows': #윈도우
        plt.rc('font', family='Malgun Gothic') 
elif platform.system() == 'Linux': #리눅스 (구글 콜랩)
        #!wget "https://www.wfonts.com/download/data/2016/06/13/malgun-gothic/malgun.ttf"
        #!mv malgun.ttf /usr/share/fonts/truetype/
        #import matplotlib.font_manager as fm 
        #fm._rebuild() 
        plt.rc('font', family='Malgun Gothic') 
plt.rcParams['axes.unicode_minus'] = False #한글 폰트 사용시 마이너스 폰트 깨짐 해결
warnings.filterwarnings('ignore')
```

## Load Data

```{python}
#| eval: false

df = pd.read_csv('df.csv')

print(f"df shape: {df.shape}")
```

## Statistical Summary

```{python}
df.head()
```

```{python}
df.info()
```

### 범주형

```{python}
import matplotlib.pyplot as plt

cat_cols = []
num_cols = []
ord_cols = [] # 연속형으로 처리하던가 범주형으로 처리하던가 알아서 정하면 됨

for col in cat_cols + ord_cols:
    target_counts = df[col].value_counts().sort_index()
    target_ratio = df[col].value_counts(normalize=True).sort_index()

    _, (ax1, ax2) = plt.subplots(1, 2, figsize=(14, 6))

    target_counts.plot(kind='bar', ax=ax1)
    ax1.set_title(f'{col}'s Count', fontsize=14, pad=20)
    ax1.set_xlabel('Support Level', fontsize=12)
    ax1.set_ylabel('count', fontsize=12)
    ax1.set_xticklabels()

    colors = ['#3498db', '#e74c3c', '#2ecc71']
    wedges, texts, autotexts = ax2.pie(target_ratio, labels=['Level 0', 'Level 1', 'Level 2'], 
                                                                           autopct='%1.1f%%', colors=colors, startangle=90)
    ax2.set_title('Support Level Distribution', fontsize=14, pad=20)

    plt.tight_layout()
    plt.show()

    print("Target variable distribution:")
    for i in range(3):
            print(f"Level {i}: {target_counts[i]:,} customers ({target_ratio[i]*100:.1f}%)")
```

### 연속형

```{python}


```

## Missing Values

```{python}
print(df.isnull().sum())

print(df[df.isnull().any(axis=1)])
```

```{python}

```
