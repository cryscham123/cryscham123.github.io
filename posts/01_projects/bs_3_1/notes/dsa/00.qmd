---
title: "시험 범위"
date: 2025-04-03
categories: ["Data Structure", "학부 정리"]
---

![](/img/stat-thumb.jpg){.post-thumbnail}

- 2주차
  - 순서, 시간복잡도 Big O 계산하는거. python code 5줄 이내로 간단한거로 나옴.
  - 재귀 알고리즘 간단한 소스코드, 결과 물어봄
- 3~5주차
  - 연결리스트
    - 이중 연결리스트: 객관식
    - 원형: 시간복잡도, method 일부분? 전체 빈칸?

## single linked list

- 안 나오지만 그냥 외우셈

![](img/2025-04-20-19-46-31.png)

![](img/2025-04-20-19-46-38.png)

![](img/2025-04-20-19-46-46.png)

![](img/2025-04-20-19-47-11.png)

## doubly linked list

![](img/2025-04-20-19-47-57.png)

![](img/2025-04-20-19-48-04.png)

![](img/2025-04-20-19-48-10.png)

![](img/2025-04-20-19-48-22.png)

## circular linked list

![](img/2025-04-20-19-48-50.png)

![](img/2025-04-20-19-48-56.png)

![](img/2025-04-20-19-49-05.png)

![](img/2025-04-20-19-49-32.png)

- 5~6주차
  - stack
    - t자 철로 출력
    - stack을 이용하는 응용
    - stack을 이용하지 않는 중위 -> 후위, 전위 표기
- 7주차
  - 원형 queue

![](img/2025-04-20-19-28-11.png)

![](img/2025-04-20-19-28-20.png)

![](img/2025-04-20-19-35-14.png)

![](img/2025-04-20-19-35-22.png)

![](img/2025-04-20-19-35-48.png)

![](img/2025-04-20-19-36-55.png)

![](img/2025-04-20-19-37-07.png)

![](img/2025-04-20-19-37-14.png)

![](img/2025-04-20-19-37-23.png)
