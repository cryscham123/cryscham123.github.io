<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>김형훈의 학습 블로그</title>
<link>https://cryscham123.github.io/posts/03_resources/42_seoul/</link>
<atom:link href="https://cryscham123.github.io/posts/03_resources/42_seoul/index.xml" rel="self" type="application/rss+xml"/>
<description>안녕하세요. 김형훈의 학습 블로그 입니다.</description>
<image>
<url>https://cryscham123.github.io/profile.jpg</url>
<title>김형훈의 학습 블로그</title>
<link>https://cryscham123.github.io/posts/03_resources/42_seoul/</link>
</image>
<generator>quarto-1.5.56</generator>
<lastBuildDate>Tue, 28 Jan 2025 12:45:38 GMT</lastBuildDate>
<item>
  <title>cloud-1</title>
  <link>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/5.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>아직 작성중인 노트입니다.</p>
</div>
</div>
</div>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-outer-1.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul outer 과제</figcaption>
</figure>
</div>
<p>다음 학기 시작 전까지 개념공부만 하면서 시간을 보내려고 하니까 프로젝트가 하고 싶어졌습니다. 원래는 python 과제를 하려고 했는데, 이전에 cloud 과제를 진행하다가 말았던게 기억나서 이어서 해보면 괜찮겠다 생각했습니다.</p>
</section>
<section id="프로젝트-및-구현-설명" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-및-구현-설명">프로젝트 및 구현 설명</h2>
<section id="개요" class="level3">
<h3 class="anchored" data-anchor-id="개요">개요</h3>
<p><a href="https://cdn.intra.42.fr/pdf/pdf/147805/en.subject.pdf">과제 명세서</a></p>
<p>참고한 자료는 다음과 같습니다:</p>
<ul>
<li><a href="https://www.udemy.com/course/aws-certified-solutions-architect-associate-saa-c03/">AWS SAA Udemy 강의</a></li>
<li><a href="https://www.udemy.com/course/terraform-and-ansible/?utm_campaign=2025-01-21&amp;utm_content=promo&amp;utm_medium=4897172&amp;utm_source=email-sendgrid&amp;utm_term=38475056">ansible terraform Udemy 강의</a></li>
</ul>
<p>이 강의들도 본 지 1년이 다되어가긴 하지만..과제할 때 사용한 제 배경지식이 여기서 나온거니까요. 과제를 진행하실 분들은 한번 수강해보시면 도움이 될 것 같습니다.</p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>이 포스팅에서 docker와 nginx, wordpress, mysql 구조에 대한 설명은 생략하겠습니다.<br>
전체 코드는 <a href="https://github.com/cryscham123/cloud-1">github repo</a>에서 확인하실 수 있습니다.</p>
</div>
</div>
</div>
</section>
<section id="what-is-iac" class="level3">
<h3 class="anchored" data-anchor-id="what-is-iac">What is IaC?</h3>
<p>이 프로젝트의 목표는 <code>IaC(Infrastructure as Code) tool</code>을 이용하여 wordpress 사이트를 cloud에 자동으로 배포하는 것입니다.</p>
<p>IaC는 <code>인프라 구성을 코드로 관리하는 방식</code>으로, 수동으로 리소스를 생성하고 설정하는 방식에 비해 <code>버전 관리가 간편</code>하고, <code>동일한 환경을 쉽게 재현</code>하거나, <code>코드 리뷰 등의 방식으로 휴먼 에러를 줄이는 데 용이</code>하게 사용할 수 있습니다.</p>
<p>이번 프로젝트에서는 <code>Packer, Terraform, Ansible</code> 세 가지 IaC tool을 조합해 사용했습니다</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://snipboard.io/Tq01JU.jpg" class="img-fluid figure-img"></p>
<figcaption>napkin ai를 써봤습니다</figcaption>
</figure>
</div>
<ol type="1">
<li><p><strong>Packer</strong>: <code>인프라 생성 전, 상세 설정</code>이 되어있는 image를 build할 수 있는 tool 입니다.</p></li>
<li><p><strong>Terraform</strong>: <code>cloud 인프라를 생성</code>하는 tool입니다. <code>packer에서 생성한 ami를 사용</code>할 수 있습니다.</p></li>
<li><p><strong>Ansible</strong>: 서버 내부의 <code>상세 설정을 자동화</code>합니다. 일반적인 bash script와는 다르게 <code>멱등성 있는 설정</code>이 가능하다는 점이 큰 장점입니다. 이때, 서버는 <code>python이 설치되어 있어야 하고, ssh로 접근 가능</code>해야 합니다.</p></li>
</ol>
</section>
<section id="전체적인-구조" class="level3">
<h3 class="anchored" data-anchor-id="전체적인-구조">전체적인 구조</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://snipboard.io/LxOGgU.jpg" class="img-fluid figure-img"></p>
<figcaption>구현 aws 구조</figcaption>
</figure>
</div>
<p>Public subnet의 EC2들에 대한 ssh 접근은 관리용 컴퓨터에서만(terraform, ansible 코드가 실행되는 컴퓨터) 접근이 가능하도록 제한했고, MySQL의 데이터는 Private subnet의 EC2에 저장하되 Public subnet의 EC2만 접근할 수 있도록 설정했습니다.</p>
<p>실제 프로덕션 환경이라면 위와 같은 구조로는 설계하지 않습니다. 일단 EC2 머신들을 Auto Scaling Group으로 묶고, 그 앞에 Network Load Balancer를 두어 단일 엔드포인트로 관리하는 것이 좋습니다. 또한 Database는 AWS RDS를 이용하고, WordPress의 파일 시스템은 EFS나 S3를 활용해 Stateless하게 구현하는게 좋습니다.</p>
<p>제 구현에서는 <code>각 서버가 독립적인 상태와 엔드포인트</code>를 가지고 있습니다.</p>
<p>그렇게 한 이유는 일단 <code>aws free tier</code> 서비스만으로 과제를 구현하려고 했던게 제일 크고요..(NLB는 사용할 수 없었습니다.) 나머지는 과제 제약사항 때문인데,</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://snipboard.io/Tx21SW.jpg" class="img-fluid figure-img"></p>
<figcaption>과제 제약사항</figcaption>
</figure>
</div>
<p>모든 프로세스는 컨테이너 안에서 동작해야 한다는 제약때문에, <code>aws RDS</code>는 <code>사용할 수 없었습니다</code>. 그리고 database는 public internet에서 접근할 수 없다고 해서, <code>db</code>는 <code>private subnet</code>의 ec2에서 돌아가게 설계했습니다.</p>
</section>
<section id="pakcer-코드" class="level3">
<h3 class="anchored" data-anchor-id="pakcer-코드">Pakcer 코드</h3>
<p>database ec2는 private subnet에 두고, public subnet의 ec2만 연결이 가능하도록 설계할것입니다.</p>
<p>따라서 ansible로는 설정이 어렵습니다.</p>
<p>packer를 그래서 씁니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>database.pkr.hcl</strong></pre>
</div>
<div class="sourceCode" id="cb1" data-filename="database.pkr.hcl" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">source <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"amazon-ebs"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"database"</span> {</span>
<span id="cb1-2">  region  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var.AWS_REGION</span>
<span id="cb1-3">  profile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"default"</span></span>
<span id="cb1-4"></span>
<span id="cb1-5">  ami_name      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hyunghki-database-${formatdate("</span>YYYYMMDDhhmmss<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", timestamp())}"</span></span>
<span id="cb1-6">  instance_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t2.micro"</span></span>
<span id="cb1-7">  source_ami_filter {</span>
<span id="cb1-8">    filters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb1-9">      name                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"</span></span>
<span id="cb1-10">      root<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ebs"</span></span>
<span id="cb1-11">      virtualization<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hvm"</span></span>
<span id="cb1-12">    }</span>
<span id="cb1-13">    most_recent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> true</span>
<span id="cb1-14">    owners      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"099720109477"</span>]</span>
<span id="cb1-15">  }</span>
<span id="cb1-16">  ssh_username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu"</span></span>
<span id="cb1-17">}</span></code></pre></div>
</div>
<p>ubuntu-20.04를 기본 이미지로 시작합니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>database.pkr.hcl</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="database.pkr.hcl" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">build {</span>
<span id="cb2-2">  sources <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"source.amazon-ebs.database"</span>]</span>
<span id="cb2-3"></span>
<span id="cb2-4">  provisioner <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ansible"</span> {</span>
<span id="cb2-5">    playbook_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{path.root}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/ansible/database.yml"</span></span>
<span id="cb2-6">    user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu"</span></span>
<span id="cb2-7">    ansible_env_vars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb2-8">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ANSIBLE_HOST_KEY_CHECKING=False"</span>,</span>
<span id="cb2-9">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MYSQL_USER=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.MYSQL_USER}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb2-10">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MYSQL_PASSWORD=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.MYSQL_PASSWORD}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb2-11">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATABASE_NAME=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.DATABASE_NAME}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb2-12">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MYSQL_ROOT_PASSWORD=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.MYSQL_ROOT_PASSWORD}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-13">    ]</span>
<span id="cb2-14">  }</span>
<span id="cb2-15">}</span></code></pre></div>
</div>
<p>packer의 ansible plugin을 사용하면, ansible을 이용해서 golden ami를 만들 수 있습니다.</p>
<p>조금 더 멱등성 있게 편리한 세팅을 진행할 수 있죠.</p>
</section>
<section id="terraform-코드" class="level3">
<h3 class="anchored" data-anchor-id="terraform-코드">Terraform 코드</h3>
<p>이제 본격적으로 provision을 해보겠습니다.</p>
</section>
<section id="ansible-코드" class="level3">
<h3 class="anchored" data-anchor-id="ansible-코드">ansible 코드</h3>
<p>이제 software 세팅을 시작하겠습니다. 사실 ansible 안쓰고 packer로 다 설정할 수 있긴 한데, 걍 ansible 쓰는게 초기 세팅에는 훨씬 빠르긴 함</p>
</section>
<section id="build" class="level3">
<h3 class="anchored" data-anchor-id="build">build</h3>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Makefile</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="Makefile" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">PROVISION_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>terraform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>main</span>
<span id="cb3-2">PACKER_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>packer</span>
<span id="cb3-3">DEPLOY_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ansible</span>
<span id="cb3-4">include .env</span>
<span id="cb3-5">export</span>
<span id="cb3-6"></span>
<span id="cb3-7">.PHONY: provision deploy <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span> destroy re build_ami</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>: provision deploy</span>
<span id="cb3-10"></span>
<span id="cb3-11">build_ami: packer</span>
<span id="cb3-12">    packer init $(PACKER_PATH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>database.pkr.hcl</span>
<span id="cb3-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@PKR_VAR_AWS_REGION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(AWS_REGION) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-14">    PKR_VAR_MYSQL_USER<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(MYSQL_USER) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-15">    PKR_VAR_MYSQL_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(MYSQL_PASSWORD) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-16">    PKR_VAR_DATABASE_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(DATABASE_NAME) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-17">    PKR_VAR_MYSQL_ROOT_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(MYSQL_ROOT_PASSWORD) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-18">    packer build $(PACKER_PATH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>database.pkr.hcl</span>
<span id="cb3-19"></span>
<span id="cb3-20">provision: build_ami terraform</span>
<span id="cb3-21">    terraform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>chdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(PROVISION_PATH) init</span>
<span id="cb3-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@TF_VAR_AWS_REGION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(AWS_REGION) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-23">    TF_VAR_SERVER_INSTANCE_COUNT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SERVER_INSTANCE_COUNT) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-24">    TF_VAR_SSH_IP<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SSH_IP) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-25">    TF_VAR_SSH_PUBLIC_KEY_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SSH_PUBLIC_KEY_PATH) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-26">    terraform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>chdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(PROVISION_PATH) <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>auto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>approve</span>
<span id="cb3-27"></span>
<span id="cb3-28">deploy: ansible</span>
<span id="cb3-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@DB_PRIVATE_IP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$(shell terraform -chdir=$(PROVISION_PATH) output -json db_private_ip | jq -r '.[]' | tr '</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' ' ')"</span> \</span>
<span id="cb3-30">    ANSIBLE_HOST_KEY_CHECKING<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-31">    ANSIBLE_REMOTE_USER<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ubuntu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-32">    ansible<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>playbook <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-33">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i $(DEPLOY_PATH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>inventories <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-34">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>private<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SSH_PRIVATE_KEY_PATH) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-35">    $(DEPLOY_PATH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>server.yml </span>
<span id="cb3-36"></span>
<span id="cb3-37">destroy: terraform</span>
<span id="cb3-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@TF_VAR_AWS_REGION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(AWS_REGION) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-39">    TF_VAR_SERVER_INSTANCE_COUNT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SERVER_INSTANCE_COUNT) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-40">    TF_VAR_SSH_IP<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SSH_IP) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-41">    TF_VAR_SSH_PUBLIC_KEY_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SSH_PUBLIC_KEY_PATH) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-42">    terraform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>chdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(PROVISION_PATH) destroy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>auto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>approve</span>
<span id="cb3-43"></span>
<span id="cb3-44">re: destroy <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span></span></code></pre></div>
</div>
<p>최종 build는 (42 seoul 사람에게 익숙한) <code>makefile</code>을 사용했습니다.</p>
<p>모든 변수는 <code>.env</code>로 관리하고 <code>makefile 내부에서 환경변수</code>로 가져와 packer, terraform, ansible <code>명령어를 실행</code>해주었습니다.</p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>사실 c언어도 아니고..이 과제 구현에서 makefile은 별로 어울리진 않은거 같긴 합니다만, 제가 아직 로컬에서 돌려볼만한 다른 build 툴을 배우지 않아서..</p>
</div>
</div>
</div>
</section>
</section>
<section id="결과" class="level2">
<h2 class="anchored" data-anchor-id="결과">결과</h2>
<p>아직 평가 전입니다.</p>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">outro</h2>
<p>솔직히 일반적으로 사용되는 cloud 구조를 적용한건 아니긴 하지만, 과제에 맞춰서 진행하기 위해 고민하는 과정에서 다양한 구조를 적용해봤는데, 그 과정이 나름 학습에 도움이 된거 같습니다.</p>
<p>그렇다고 cloud를 처음 공부하시는 분들에게 학습 용도로 추천할만한 과제까지는 아닌거 같지만, 이 분야에 공부를 꽤 했고, 그 내용들을 다양하게 고민하며 적용해보고 싶다면 괜찮은 선택지가 될 것 같습니다.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>aws</category>
  <category>packer</category>
  <category>terraform</category>
  <category>ansible</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/5.html</guid>
  <pubDate>Tue, 28 Jan 2025 12:45:38 GMT</pubDate>
</item>
<item>
  <title>ft_transcendence - github action</title>
  <link>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/1.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-course-6.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul 공통과정 6서클 과제</figcaption>
</figure>
</div>
<p>42 Seoul 공통과정의 마지막 과제입니다. 이 프로젝트는 개발자가 선호하는 라이브러리와 프레임워크를 자유롭게 선택하여 구현할 수 있다는 점이 특징입니다.</p>
<p>대형 협업 과제인 만큼, 과제에 명시되어있지 않지만 협업을 위한 툴도 공부해서 다양하게 적용해볼 수 있는 좋은 과제인것 같습니다. 저같은 경우에는 coursera, udemy 강의를 통해 <strong>agile</strong> 협업 방식과 <strong>github에서의 적용 방법</strong>에 대해 공부를 했고, 프로젝트 진행에 있어서 꽤 도움이 됐던걸로 기억합니다. 사실 프로젝트를 진행하다보니, agile 방식을 온전히 다 적용하기엔 적합하지 않다고 판단했지만, <strong>Kanban Board</strong>로 프로젝트를 관리하는 것 같은 부분은 꽤 유용하게 활용할 수 있었습니다.</p>
</section>
<section id="프로젝트-및-구현-설명" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-및-구현-설명">프로젝트 및 구현 설명</h2>
<section id="개요" class="level3">
<h3 class="anchored" data-anchor-id="개요">개요</h3>
<p><a href="https://cdn.intra.42.fr/pdf/pdf/140713/en.subject.pdf">과제 명세서</a></p>
<p>해당 과제는 실시간 <a href="https://www.ponggame.org/">Pong 게임</a> 매칭 웹사이트를 만드는게 목표입니다. 저는 이번 프로젝트에서 <strong>github action 설정, User Management Backend 설계와 42 API를 이용한 OAuth 인증, JWT 구현, Game History를 Block Chain으로 저장</strong>하는 파트를 담당했습니다.</p>
<p>참고한 자료는 다음과 같습니다:</p>
<ul>
<li><a href="https://www.coursera.org/learn/agile-project-management">Google Agile Project 관리</a></li>
<li><a href="https://docs.github.com/ko/actions">Github Action Docs</a></li>
<li><a href="https://cli.github.com/manual/">Github CLI Docs</a></li>
<li><a href="https://www.udemy.com/course/python-django-the-practical-guide/?couponCode=KRLETSLEARNNOW">Django udemy 강좌</a></li>
<li><a href="https://www.django-rest-framework.org/">Django Rest Framework Docs</a></li>
<li><a href="https://django-rest-framework-simplejwt.readthedocs.io/en/latest/index.html">Django Simple JWT</a></li>
<li><a href="https://mgyo.tistory.com/832">JWT Token 탈취 대응 시나리오</a></li>
<li><a href="https://medium.com/@jose-luis-navarro/securing-our-microservices-through-authentication-and-authorization-with-jwt-refresh-tokens-and-f4439810fce7">micro service에서 JWT 활용 방법</a></li>
<li><a href="https://puleugo.tistory.com/154">Refresh Token을 사용해야 하는 이유</a></li>
<li><a href="https://www.hahwul.com/2020/01/18/samesite-lax/">Cookie에서의 same site 옵션</a></li>
<li><a href="https://bitcoin.org/files/bitcoin-paper/bitcoin_ko.pdf">Bitcoin 백서</a></li>
<li><a href="https://www.udemy.com/course/ethereum-and-solidity-the-complete-developers-guide/?couponCode=KRLETSLEARNNOW">Solidity Udemy 강의</a></li>
<li><a href="https://docs.soliditylang.org/en/latest/">Solidity Docs</a></li>
<li><a href="https://youtube.com/playlist?list=PL7jH19IHhOLOJfXeVqjtiawzNQLxOgTdq&amp;si=k5TMs5VUF0Z1xIA2">nomad coder 블록체인 시리즈</a></li>
</ul>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>이 포스팅에서는 <strong>github action setting, jwt, block chain</strong> 부분만 다루겠습니다.<br>
전체 코드는 비공개 되어있는 상태입니다.</p>
</div>
</div>
</div>
</section>
<section id="github-action-setting" class="level3">
<h3 class="anchored" data-anchor-id="github-action-setting">Github Action Setting</h3>
<p>github를 이용해서 agile 방법론을 적용할 수 있도록 의도했고, <strong>자동화</strong>와 <strong>template</strong>을 이용해 통일성 있는 구조를 유지하려고 했습니다.</p>
<p><strong>1. 회의를 통해 진행해야 하는 작업을 Kanban board에 정리한다.</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-11-28-18.png" class="img-fluid figure-img"></p>
<figcaption>Github Kanban Board</figcaption>
</figure>
</div>
<p>각각의 column에는 다음과 같은 내용이 들어갑니다.</p>
<ol type="1">
<li><strong>Discussion</strong>: 논의가 필요한 작업. 개개인이 자유롭게 올릴 수 있습니다</li>
<li><strong>Backlog</strong>: Discussion에 있는 내용 중 구현하기로 회의에서 정한 작업</li>
<li><strong>Ready</strong>: Back log에 있는 작업 중 이번 Sprint에서 구현할 작업들</li>
<li><strong>In Progress</strong>: Ready에 있는 작업 중 누군가가 작업중인 것</li>
<li><strong>Done</strong>: master branch에 merge가 완료된 작업</li>
</ol>
<p>자세한 내용은 meeting 부분을 참고해 주세요.</p>
<p>참고로 <strong>Disccusion</strong>에 작업을 올리는 방법은 <strong>template에 맞게 issue를 올리</strong>면 됩니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-16-19-51-40.png" class="img-fluid figure-img"></p>
<figcaption>Discussion template</figcaption>
</figure>
</div>
<p>아래와 같이 설정 파일을 만들어서 ‘.github/ISSUE_TEMPLATE/’ 폴더 안에 저장하면 issue create 시 자동으로 template이 뜨게 할 수 있습니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name:</span> New discussion</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">description:</span> new discussion</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">title:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[DISCUSSION]"</span></span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">labels:</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enhancement"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">projects:</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"org_name/5"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb1-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">body:</span></span>
<span id="cb1-7">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> type: markdown</span>
<span id="cb1-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">attributes:</span></span>
<span id="cb1-9">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">value:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb1-10">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">해당</span> 기능과 관련된 request가 이미 존재하는지 확인해주세요.</span>
<span id="cb1-11">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> type: textarea</span>
<span id="cb1-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">id:</span> story</span>
<span id="cb1-13">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">attributes:</span></span>
<span id="cb1-14">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">label:</span> Story</span>
<span id="cb1-15">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">description:</span> 해당 기능에 대한 설명이나 필요한 배경을 작성해주세요.</span>
<span id="cb1-16">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">placeholder:</span> 자유로운 양식으로 작성해주세요.</span>
<span id="cb1-17">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">validations:</span></span>
<span id="cb1-18">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">required:</span> true</span></code></pre></div>
<p><strong>2. Kanban board를 보고 개인이 능동적으로 고유 브랜치에 작업을 진행한다.</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-11-29-41.png" class="img-fluid figure-img"></p>
<figcaption>빨간 밑줄 부분을 설정해줍니다.</figcaption>
</figure>
</div>
<p>Kanban board의 Ready section에 있는 작업을 클릭해서 들어간 후, <strong>assignees를 본인으로 선택해서 작업</strong>하면 됩니다. <strong>task completion criteria</strong>라는 내용이 보이는데, 이는 <strong>회의를 통해 결정</strong>하는 것으로, 나중에 작업이 완료되고 <strong>pull request 시, 평가자가 작업에 완성도에 대해 판단할 수 있는 기준</strong>으로 제공됩니다.</p>
<p>자동화 코드는 아래와 같이 구현했습니다.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name:</span> Create branch</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">on:</span></span>
<span id="cb2-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">issues:</span></span>
<span id="cb2-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">types:</span> [ assigned ]</span>
<span id="cb2-5">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pull_request:</span></span>
<span id="cb2-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">types:</span> [ opened, closed ]</span>
<span id="cb2-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jobs:</span></span>
<span id="cb2-8">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">create_issue_branch_job:</span></span>
<span id="cb2-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">runs-on:</span> ubuntu-latest</span>
<span id="cb2-10">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">steps:</span></span>
<span id="cb2-11">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Generate token</span>
<span id="cb2-12">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">id:</span> generate_token</span>
<span id="cb2-13">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uses:</span> tibdex/github-app-token@v2</span>
<span id="cb2-14">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">with:</span></span>
<span id="cb2-15">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">app_id:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ secrets.APP_ID </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb2-16">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">private_key:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ secrets.PRIVATE_KEY </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb2-17"></span>
<span id="cb2-18">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gh 명령어를 이용해 project의 상태를 In progress로 수정해줍니다.</span></span>
<span id="cb2-19">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Project in-progress</span>
<span id="cb2-20">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">if:</span> github.event.action == <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'assigned'</span></span>
<span id="cb2-21">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb2-22">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PROJECT_ID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> project view 5 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--owner</span> organization-for-practice <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.id'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-23">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ITEM_ID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> project item-list 5 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--owner</span> organization-for-practice <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".items[] | select(.content.number == </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${NUMBER}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">) | .id"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-24">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">FIELD_ID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> project field-list 5 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--owner</span> organization-for-practice <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.fields[2].id'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-25">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">SINGLE_ID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> project field-list 5 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--owner</span> organization-for-practice <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.fields[2].options[] | select(.name == "In progress") | .id'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-26">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> project item-edit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--id</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${ITEM_ID}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--field-id</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${FIELD_ID}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--single-select-option-id</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${SINGLE_ID}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--project-id</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${PROJECT_ID}</span></span>
<span id="cb2-27">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb2-28">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GH_TOKEN:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.generate_token.outputs.token </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb2-29">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NUMBER:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ github.event.issue.number </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb2-30"></span>
<span id="cb2-31">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign한 작업에 대한 branch를 새로 만들어줍니다.</span></span>
<span id="cb2-32">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Create Issue Branch</span>
<span id="cb2-33">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uses:</span> robvanderleek/create-issue-branch@main</span>
<span id="cb2-34">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb2-35">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GITHUB_TOKEN:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.generate_token.outputs.token </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span></code></pre></div>
<p>위의 코드는 assign한 작업을 Ready column에서 In progress column으로 옮겨주고, 자동으로 작업할 branch를 만들어줍니다.</p>
<p>branch 자동 생성은 <a href="https://github.com/robvanderleek/create-issue-branch">이 workflow</a>를 사용하였고, 적용 시 아래와 같이 브랜치가 생성됩니다.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoLinkIssue</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoCloseIssue</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">branchName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> tiny</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">commentMessage</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb3-5">  \"${branchName}\" branch 생성 완료.</span>
<span id="cb3-6">  해당 branch를 통해서 main에 pull request 올려주세요.</span>
<span id="cb3-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">branches</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'task list'</span></span>
<span id="cb3-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prefix</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> feature/${issue.title[12,27],}/</span></span>
<span id="cb3-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">copyIssueAssigneeToPR</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bug'</span></span>
<span id="cb3-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prefix</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> hot_fix/${issue.title[6,21],}/</span></span>
<span id="cb3-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">copyIssueAssigneeToPR</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*'</span></span>
<span id="cb3-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">skip</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<p>위의 config 파일을 작성해주면 아래와 같이 브랜치가 생성됩니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-11-30-26.png" class="img-fluid figure-img"></p>
<figcaption>자동 생성된 branch</figcaption>
</figure>
</div>
<p>이름도 자동으로 생성되게 해서 <strong>convention을 지켜야 한다는 부담을 줄여</strong>줬습니다.</p>
<p><strong>3. 작업이 완료되면, 모든 조건을 충족하는지 확인한 후, master에 merge 한다.</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-11-31-07.png" class="img-fluid figure-img"></p>
<figcaption>pull request 화면</figcaption>
</figure>
</div>
<p>작업이 완료됬다고 판단되면 위 화면과 같이 <strong>pull request를 생성</strong>하고, <strong>Reviewer를 설정</strong>해주면 됩니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-11-31-35.png" class="img-fluid figure-img"></p>
<figcaption>task completion criteria</figcaption>
</figure>
</div>
<p>그러면 이전에 설정했던 기준들이 자동으로 불러와지고, <strong>모든 항목에 체크가 완료</strong>되어야 <strong>merge를 할 수 있게 설정</strong>했습니다. 구현 코드는 아래와 같습니다.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name:</span> Master merge rutine</span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">on:</span></span>
<span id="cb4-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pull_request_target:</span></span>
<span id="cb4-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">types:</span> [ opened, synchronize ]</span>
<span id="cb4-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">branches:</span></span>
<span id="cb4-6">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> master</span>
<span id="cb4-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb4-8">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PR_NUM:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ github.event.pull_request.number </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-9">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GH_REPO:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ github.repository </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jobs:</span></span>
<span id="cb4-11">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">get_checklist:</span></span>
<span id="cb4-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">runs-on:</span> ubuntu-latest</span>
<span id="cb4-13">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">if:</span> github.event.action == <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'opened'</span></span>
<span id="cb4-14">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">steps:</span></span>
<span id="cb4-15">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Generate token</span>
<span id="cb4-16">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">id:</span> generate_token</span>
<span id="cb4-17">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uses:</span> tibdex/github-app-token@v2</span>
<span id="cb4-18">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">with:</span></span>
<span id="cb4-19">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">app_id:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ secrets.APP_ID </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-20">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">private_key:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ secrets.PRIVATE_KEY </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-21">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Get issue</span>
<span id="cb4-22">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">id:</span> issue_num</span>
<span id="cb4-23">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb4-24">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">BRANCH:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ github.event.pull_request.head.ref </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-25">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb4-26">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$BRANCH</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature\/.*\/i[0-9]\+'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$BRANCH</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hot_fix\/.*\/i[0-9]\+'</span></span>
<span id="cb4-27">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">TMP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$BRANCH</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'i[0-9]\+'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-28">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NUMBER=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${TMP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span>i<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$GITHUB_OUTPUT</span></span>
<span id="cb4-29">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Get issue body</span>
<span id="cb4-30">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">id:</span> issue_body</span>
<span id="cb4-31">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb4-32">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GH_TOKEN:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.generate_token.outputs.token </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-33">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NUM:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.issue_num.outputs.number </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-34">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb4-35">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CONTENTS&lt;&lt;EOF"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$GITHUB_OUTPUT</span></span>
<span id="cb4-36">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> issue view <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${NUM}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span> body <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.body'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$GITHUB_OUTPUT</span></span>
<span id="cb4-37">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EOF"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$GITHUB_OUTPUT</span></span>
<span id="cb4-38">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Update checklist</span>
<span id="cb4-39">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb4-40">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> pr comment <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PR_NUM</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--body</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${BODY}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-41">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb4-42">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GH_TOKEN:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.generate_token.outputs.token </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-43">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">BODY:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.issue_body.outputs.contents </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}"</span></span></code></pre></div>
<p><strong>merge가 완료된 branch</strong>는 <strong>자동으로 삭제</strong>가 되도록 설정을 해주었습니다.</p>
<p>이제 아래는 실제 <strong>프로젝트를 진행할 때 만들었던 rule</strong>들입니다.</p>
<section id="work-flow" class="level4">
<h4 class="anchored" data-anchor-id="work-flow"><strong>1. work flow</strong></h4>
<p><strong>github flow</strong>로 진행됩니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-16-20-11-33.png" class="img-fluid figure-img"></p>
<figcaption>github flow</figcaption>
</figure>
</div>
<ol type="1">
<li>매 작업은 master branch의 HEAD를 기반으로 이루어집니다.<br>
pr을 올리지 않는 개인 작업용 <strong>local branch는 자유롭게 생성</strong>해주세요.</li>
<li>master에 직접적인 push는 관리자를 제외하고는 불가능합니다.</li>
<li>master에 대한 merge는 squash merge로 진행됩니다.</li>
<li>그 외의 merge는 rebase로 진행해주세요.</li>
</ol>
</section>
<section id="work" class="level4">
<h4 class="anchored" data-anchor-id="work"><strong>2. work</strong></h4>
<ol type="1">
<li>kanban board의 'Ready' 섹션에서 하나를 정해서 새로운 기능에 대한 작업을 진행해주세요.<br>
선택한 작업은 assignees에 자신의 팀원을 등록 후, Start Date를 해당 날짜로 설정해주세요.<br>
assignees 등록이 완료되면 자동으로 target branch가 생성됩니다.<br>
해당 branch에 팀원들이 필요한 기능들을 자유로운 방식으로 구현한 후, master branch에 merge 해주세요.<br>
단, 해당 branch에 대한 merge는 rebase로 진행해주세요.</li>
<li>hot_fix issue나, new feature request issue는 discussion의 필요성이 있을 경우에 등록해주세요.</li>
<li>작업 중, 현재 작업하는 범위 외에서 추가적인 기능이 필요할 경우 관련 issue에 comment를 남기거나, reopen 해주세요.</li>
</ol>
</section>
<section id="commit-message-convention" class="level4">
<h4 class="anchored" data-anchor-id="commit-message-convention"><strong>3. commit message convention</strong></h4>
<p>아래의 명령어를 입력해주세요</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config commit.template .github/COMMIT_MESSAGE_TEMPLATE</span></code></pre></div>
<p>이후, -m 옵션 없이 ’git commit’으로 message를 입력해주세요.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>COMMIT_MESSAGE_TEMPLATE</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="COMMIT_MESSAGE_TEMPLATE" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># commit message template</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ▼ &lt;Title&gt; 작성</span></span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ▼ &lt;빈 줄&gt;</span></span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ▼ &lt;body&gt; 작성</span></span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ▼ &lt;빈 줄&gt;</span></span>
<span id="cb6-9"></span>
<span id="cb6-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ▼ &lt;footer&gt; 작성</span></span>
<span id="cb6-11"></span>
<span id="cb6-12"></span>
<span id="cb6-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># About Convention</span></span>
<span id="cb6-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   &lt;Title&gt;</span></span>
<span id="cb6-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 필수로 입력해주세요</span></span>
<span id="cb6-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 형식: &lt;type&gt;: &lt;short summary&gt;</span></span>
<span id="cb6-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb6-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       &lt;type&gt;</span></span>
<span id="cb6-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - config: 설정 관련 파일 작성 또는 변경</span></span>
<span id="cb6-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - docs: 문서 변경사항</span></span>
<span id="cb6-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - feat: 새로운 기능</span></span>
<span id="cb6-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - fix: 버그 수정</span></span>
<span id="cb6-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - refactor: 기능 추가나 버그 수정이 아닌 변경 사항</span></span>
<span id="cb6-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - remove: 코드나 파일 제거</span></span>
<span id="cb6-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - style: 스타일 작성 또는 수정</span></span>
<span id="cb6-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - test: 누락된 테스트 추가 또는 기존 테스트 수정</span></span>
<span id="cb6-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - core: 기능 구현 외 시스템 관련 작업</span></span>
<span id="cb6-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb6-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       &lt;short summary&gt;</span></span>
<span id="cb6-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - 변경 사항에 대한 간단한 설명</span></span>
<span id="cb6-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - 첫글자 소문자, 현재 시제, 명령문으로 마지막에 .(마침표) 없이 작성</span></span>
<span id="cb6-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb6-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   &lt;body&gt;</span></span>
<span id="cb6-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 선택적으로 입력 해주세요</span></span>
<span id="cb6-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 현재 시제, 명령문으로 작성</span></span>
<span id="cb6-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 변경 사항의 동기(왜)를 설명</span></span>
<span id="cb6-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 변경 효과를 설명하기 위해 이전 동작과 현재 동작의 비교를 포함할 수 있음</span></span>
<span id="cb6-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb6-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   &lt;footer&gt;</span></span>
<span id="cb6-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 선택적으로 입력 해주세요</span></span>
<span id="cb6-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 해당 commit과 관련된 task의 issue 번호들을 적어주세요</span></span>
<span id="cb6-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 'bug'나 'task list' label이 붙은 issue는 제외해주세요</span></span>
<span id="cb6-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - ex) closes #&lt;issue 번호&gt; closes #&lt;issue 번호&gt; ...</span></span></code></pre></div>
</div>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>commit message template은 <a href="https://www.conventionalcommits.org/en/v1.0.0/">이 사이트</a>를 참고해서 만들었습니다.</p>
</div>
</div>
</div>
</section>
<section id="pull-request" class="level4">
<h4 class="anchored" data-anchor-id="pull-request"><strong>4. pull request</strong></h4>
<ol type="1">
<li>pull request는 <strong>500줄의 코드</strong>를 넘어가지 않게 작성 바랍니다.</li>
<li>모든 check list를 통과한 request만 master에 merge 가능합니다.</li>
<li>reviewers에는 해당 작업과 관련된 domain의 팀원을 선택해주세요. 최소 1명 이상의 동료에게 평가를 받은 request만 merge 가능합니다.</li>
</ol>
</section>
<section id="meeting" class="level4">
<h4 class="anchored" data-anchor-id="meeting"><strong>5. meeting</strong></h4>
<ul>
<li><p>daily meeting</p>
<ul>
<li><p>매일 정해진 시간에 팀원들은 각각 다음과 같은 사안에 대해 논의합니다.</p>
<ol type="1">
<li>개인이 어제 작업한 내용</li>
<li>개인이 오늘 작업할 내용</li>
<li>개인이 현재 도움이 필요한 내용</li>
</ol></li>
<li><p>이후, 새로운 내용이 추가된 ('Disccusion' 섹션에 있는) issue 중 다음과 같은 내용에 대해 논의합니다.</p>
<ol type="1">
<li>해당 issue가 유효한가</li>
<li>추가적으로 필요하거나 필요 없는 내용</li>
<li>해당 issue의 priority (매우 급함 / 급함 / 안 급함)</li>
<li>해당 issue의 estimate (작업하는데 필요한 노력의 정량적인 수치)</li>
</ol></li>
<li><p>추가적으로, project의 'Back log' 항목에서 'Ready' 항목으로 추가해야 할 작업에 대해 논의하거나 'Ready' 항목에서 'Back log' 항목으로 제외할 작업에 대해 논의할 수 있습니다.</p></li>
</ul></li>
<li><p>sprint planning / retrospective</p>
<ul>
<li>2주에 한번 진행.</li>
<li>이전 sprint에 대한 평가와 이후 sprint를 위한 계획을 세웁니다.<br>
</li>
<li>planning
<ul>
<li>Project의 'Back log' 항목 중 본격적으로 작업을 진행할 항목을 정합니다.</li>
<li>daily meeting 시간을 조정할 수 있습니다.</li>
</ul></li>
<li>retrospective
<ul>
<li>이전 sprint의 문제점에 대해 서로 의논해봅니다.</li>
</ul></li>
</ul></li>
</ul>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>프로젝트를 하다보니, 생각보다 진행 속도가 빨라서 2주에 한번 진행하는 sprint는 유명무실해져버렸습니다. 실제로는 daily meeting만 진행을 했습니다.</p>
</div>
</div>
</div>
</section>
</section>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">outro</h2>
<p>내용이 너무 길어져서 2편에 계속 포스팅 하겠습니다.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>agile</category>
  <category>github action</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/1.html</guid>
  <pubDate>Thu, 16 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>ft_transcendence - block chain</title>
  <link>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/3.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>아직 작성중인 노트입니다.</p>
</div>
</div>
</div>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-course-6.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul 공통과정 6서클 과제</figcaption>
</figure>
</div>
<p><a href="../../../../posts/03_resources/42_seoul/notes/0.html">1편 github action</a>과 <a href="../../../../posts/03_resources/42_seoul/notes/1.html">2편 JWT</a>에 이어서 block chain 파트에 대해 설명하겠습니다.</p>
</section>
<section id="프로젝트-및-구현-설명" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-및-구현-설명">프로젝트 및 구현 설명</h2>
<section id="block-chain" class="level3">
<h3 class="anchored" data-anchor-id="block-chain">Block Chain</h3>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>블록 체인의 개념적인 자세한 설명은 생략하겠습니다.</p>
</div>
</div>
</div>
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-16-20-40-25.png" class="img-fluid"> <img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-16-20-40-38.png" class="img-fluid" alt="block chain 요구사항"></p>
<p><strong>이더리움</strong>은 비트코인과 함께 가장 잘 알려진 블록체인 플랫폼 중 하나입니다. 하지만 비트코인이 단순히 디지털 화폐에 중점을 둔 반면, 이더리움은 <strong>스마트 컨트랙트 기능</strong>을 통해 <strong>더 다양한 응용 프로그램</strong>(Decentralized Applications, DApps)을 지원합니다.</p>
<p><strong>스마트 컨트랙트</strong>는 블록체인 상에서 동작하는 자동화된 계약입니다. 이는 코드로 작성된 계약 조건을 블록체인에 저장하고, <strong>특정 조건이 충족되면 자동으로 실행되는 프로그램</strong>입니다. 스마트 컨트랙트의 주요 특징은 다음과 같습니다:</p>
<ul>
<li><p><strong>자동 실행</strong>: 계약 조건이 충족되면 코드가 자동으로 실행됩니다. 중간에 인간의 개입이 필요하지 않습니다.</p></li>
<li><p><strong>투명성</strong>: 블록체인에 저장되기 때문에 모든 거래 내역이 공개되고 검증 가능합니다.</p></li>
<li><p><strong>불변성</strong>: 한 번 배포된 스마트 컨트랙트는 수정이 불가능합니다. 이는 신뢰성을 보장합니다.</p></li>
<li><p><strong>분산화</strong>: 중앙 집중형 서버가 필요 없이 블록체인 네트워크 상에서 실행됩니다.</p></li>
</ul>
<p>명세서에 따르면, 스마트 컨트랙트를 테스트하기 위한 로컬 개발 환경이 필요합니다. 이를 위해 <strong>가나슈(Ganache)</strong>를 사용했습니다. 가나슈는 이더리움 블록체인의 로컬 테스트넷을 제공하는 도구로, 개발자가 스마트 컨트랙트를 배포하고 테스트할 수 있는 가상 환경을 만들어 줍니다. 스마트 컨트랙트 작성 후, solidity로 컴파일해서 가나슈 블록체인 환경에 저장을 해주겠습니다.</p>
<p>먼저 가나슈 테스팅 환경 세팅입니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode dockerfile code-with-copy"><code class="sourceCode dockerfile"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> node:alpine</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">WORKDIR</span> /app</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">npm</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-g</span> ganache</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">CMD</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ganache</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-h</span> 0.0.0.0 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--wallet.accounts</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${BLOCK_CHAIN_PRIVATE_KEY}</span>,0x1000000000000000000 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--miner.coinbase</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${BLOCK_CHAIN_ACCOUNT}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--database.dbPath</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${BLOCK_CHAIN_DB_PATH}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--chain.networkId</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${BLOCK_CHAIN_NETWORK_ID}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--chain.asyncRequestProcessing</span></span></code></pre></div>
<p>docker container로 실행되도록 설정했습니다.</p>
<pre class="solidity"><code>// SPDX-License-Identifier: GPL-3.0
pragma solidity &gt;=0.4.22 &lt;0.9.0;
contract TournamentHistory {
    struct Tournament {
        uint    tournament_id;
        uint    datetime;
        string  winner;
        Game[3] games;
    }
    struct Game {
        uint    datetime;
        uint[2] players;
        string  winner;
        string  rally;
    }
    address public  chairperson;
    uint private tournament_total;
    mapping(uint =&gt; uint) private user_log_total;

    event TournamentDetail(
        uint indexed    tournament_id,
        uint            datetime,
        string          winner,
        Game[3]         games
    );

    event TournamentDetailForUser(
        uint            tournament_id,
        uint indexed    user_id,
        uint indexed    user_log_key,
        uint            datetime,
        string          winner,
        Game[3]         games
    );

    constructor() {
        chairperson = msg.sender;
    }

    function addTournament(
        uint            datetime,
        string  memory  winner,
        uint[4] memory  user_id,
        Game[3] memory  games
    ) 
        external
    {
        require(msg.sender == chairperson, "You dont have permission to add a tournament.");
        emit TournamentDetail(++tournament_total, datetime, winner, games);
        for (uint i = 0; i &lt; 4; i++) {
            emit TournamentDetailForUser(
                tournament_total,
                user_id[i], 
                user_log_total[user_id[i]]++,
                datetime, 
                winner, 
                games
            );
        }
    }
}</code></pre>
<p>Pong Game의 Tournament 경기 정보를 저장하는 smart contract 입니다.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json, os</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> web3 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Web3</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> solcx <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> compile_standard, install_solc, set_solc_version</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/etc/block_chain/contracts/TournamentHistory.sol"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb3-6">    contract_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.read()</span>
<span id="cb3-7"></span>
<span id="cb3-8">install_solc(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.8.20"</span>)</span>
<span id="cb3-9">set_solc_version(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.8.20"</span>)</span>
<span id="cb3-10">compiled_sol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> compile_standard(</span>
<span id="cb3-11">    {</span>
<span id="cb3-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"language"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Solidity"</span>,</span>
<span id="cb3-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sources"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory.sol"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: contract_file}},</span>
<span id="cb3-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"settings"</span>:{</span>
<span id="cb3-15">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"outputSelection"</span>: {</span>
<span id="cb3-16">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>: {</span>
<span id="cb3-17">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abi"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"evm.bytecode"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"evm.sourceMap"</span>]}</span>
<span id="cb3-18">            }</span>
<span id="cb3-19">        }, </span>
<span id="cb3-20">    }</span>
<span id="cb3-21">)</span>
<span id="cb3-22"></span>
<span id="cb3-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/etc/block_chain/contracts/compiled_code.json"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb3-24">    json.dump(compiled_sol, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb3-25"></span>
<span id="cb3-26">bytecode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> compiled_sol[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"contracts"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory.sol"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"evm"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bytecode"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"object"</span>]</span>
<span id="cb3-27">abi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(compiled_sol[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"contracts"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory.sol"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata"</span>])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abi"</span>]</span>
<span id="cb3-28">w3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Web3(Web3.HTTPProvider(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://block_chain:8545"</span>))</span>
<span id="cb3-29">chain_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BLOCK_CHAIN_NETWORK_ID"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb3-30">account_address <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BLOCK_CHAIN_ACCOUNT"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb3-31">private_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BLOCK_CHAIN_PRIVATE_KEY"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb3-32"></span>
<span id="cb3-33">TournamentHistory <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w3.eth.contract(abi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>abi, bytecode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bytecode)</span>
<span id="cb3-34">nonce <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w3.eth.get_transaction_count(account_address)</span>
<span id="cb3-35">transaction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TournamentHistory.constructor().build_transaction(</span>
<span id="cb3-36">    {</span>
<span id="cb3-37">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chainId"</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(chain_id),</span>
<span id="cb3-38">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gasPrice"</span>: w3.eth.gas_price,</span>
<span id="cb3-39">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"from"</span>: account_address,</span>
<span id="cb3-40">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nonce"</span>: nonce,</span>
<span id="cb3-41">    }</span>
<span id="cb3-42">)</span>
<span id="cb3-43">signed_txn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w3.eth.account.sign_transaction(transaction, private_key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>private_key)</span>
<span id="cb3-44">tx_hash <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w3.eth.send_raw_transaction(signed_txn.rawTransaction)</span>
<span id="cb3-45">tx_receipt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w3.eth.wait_for_transaction_receipt(tx_hash)</span>
<span id="cb3-46"></span>
<span id="cb3-47">compiled_sol[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'contracts'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TournamentHistory.sol'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TournamentHistory'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'contract_address'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tx_receipt.contractAddress</span>
<span id="cb3-48">compiled_sol[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'contracts'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TournamentHistory.sol'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TournamentHistory'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nonce'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(nonce)</span>
<span id="cb3-49"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/etc/block_chain/contracts/compiled_code.json"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb3-50">    json.dump(compiled_sol, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span></code></pre></div>
<p>위 로직으로 compile 후, 가나슈에 베포되도록 했습니다.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">This module is for storing and retrieving tournament data from the blockchain.</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json, os</span>
<span id="cb4-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> web3 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Web3</span>
<span id="cb4-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> django.conf <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> settings</span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Tournament:</span>
<span id="cb4-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Store and retrieve tournament data from the blockchain.</span></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb4-12">    chain_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BLOCK_CHAIN_NETWORK_ID"</span>))</span>
<span id="cb4-13">    account_address <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BLOCK_CHAIN_ACCOUNT"</span>)</span>
<span id="cb4-14">    private_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BLOCK_CHAIN_PRIVATE_KEY"</span>)</span>
<span id="cb4-15">    </span>
<span id="cb4-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Web3(Web3.HTTPProvider(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://block_chain:8545"</span>))</span>
<span id="cb4-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/etc/block_chain/contracts/compiled_code.json"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb4-19">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.config_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb4-20">        abi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.config_file[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"contracts"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory.sol"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata"</span>])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abi"</span>]</span>
<span id="cb4-21">        contract_address <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.config_file[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"contracts"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory.sol"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"contract_address"</span>]</span>
<span id="cb4-22">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.contract <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w3.eth.contract(address<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>contract_address, abi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>abi)</span>
<span id="cb4-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tournament_detail_event <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.contract.events.TournamentDetail</span>
<span id="cb4-24">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tournament_detail_for_user_event <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.contract.events.TournamentDetailForUser</span>
<span id="cb4-25"></span>
<span id="cb4-26">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> store_tournament(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tournament_date, winner, players, games):</span>
<span id="cb4-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Store tournament data in the blockchain.</span></span>
<span id="cb4-29"></span>
<span id="cb4-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        argument means:</span></span>
<span id="cb4-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        1. tournament date 2. winner:string 3. players:uint[4] 4. games:tuple[3]</span></span>
<span id="cb4-32"></span>
<span id="cb4-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        The games what is tuple means:</span></span>
<span id="cb4-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        (game start time, players:uint[2], winner:string, rally:string)</span></span>
<span id="cb4-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb4-36">        nonce <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w3.eth.get_transaction_count(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.account_address)</span>
<span id="cb4-37">        transaction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.contract.functions.addTournament(</span>
<span id="cb4-38">            tournament_date,</span>
<span id="cb4-39">            winner,</span>
<span id="cb4-40">            players,</span>
<span id="cb4-41">            games</span>
<span id="cb4-42">        ).build_transaction({</span>
<span id="cb4-43">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chainId"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.chain_id,</span>
<span id="cb4-44">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gasPrice"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w3.eth.gas_price,</span>
<span id="cb4-45">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"from"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.account_address,</span>
<span id="cb4-46">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nonce"</span>: nonce,</span>
<span id="cb4-47">        })</span>
<span id="cb4-48">        signed_txn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w3.eth.account.sign_transaction(transaction, private_key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.private_key)</span>
<span id="cb4-49">        tx_hash <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w3.eth.send_raw_transaction(signed_txn.rawTransaction)</span>
<span id="cb4-50">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w3.eth.wait_for_transaction_receipt(tx_hash)</span>
<span id="cb4-51">        </span>
<span id="cb4-52">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_tournament_for_user(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, user_id, page, total):</span>
<span id="cb4-53">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Retrieve tournament data from the blockchain for a specific user.</span></span>
<span id="cb4-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Please give page argument directly from the request.</span></span>
<span id="cb4-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        You will get max 10 logs per page if exist.</span></span>
<span id="cb4-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        If no data in given page, empty array will return</span></span>
<span id="cb4-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Also, if argeuments are invalid (not unsigned int), empty array will return.</span></span>
<span id="cb4-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb4-60">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> user_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> page <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb4-61">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> []</span>
<span id="cb4-62">        page <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb4-63">        target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (page <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> settings.PAGE_SIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> i)) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(settings.PAGE_SIZE)]</span>
<span id="cb4-64">        logs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tournament_detail_for_user_event.create_filter(</span>
<span id="cb4-65">            fromBlock<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb4-66">            toBlock<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'latest'</span>, </span>
<span id="cb4-67">            argument_filters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'user_id'</span>: user_id, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'user_log_key'</span>: target})</span>
<span id="cb4-68">        ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-69">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> log <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> logs.get_all_entries():</span>
<span id="cb4-70">            ret.insert(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, log.args)</span>
<span id="cb4-71">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span>
<span id="cb4-72"></span>
<span id="cb4-73">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_tournament(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tournament_id):</span>
<span id="cb4-74">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Retrieve tournament data from the blockchain with id.</span></span>
<span id="cb4-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        If tournament_id is not exist, None will return.</span></span>
<span id="cb4-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb4-78">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> tournament_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb4-79">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-80">        logs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tournament_detail_event.create_filter(</span>
<span id="cb4-81">            fromBlock<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb4-82">            toBlock<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'latest'</span>, </span>
<span id="cb4-83">            argument_filters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tournament_id'</span>: tournament_id})</span>
<span id="cb4-84">        target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [log.args <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> log <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> logs.get_all_entries()]</span>
<span id="cb4-85">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> target[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> target <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
<p>web3.0을 이용해 모듈화 해줬습니다.</p>
</section>
</section>
<section id="결과" class="level2">
<h2 class="anchored" data-anchor-id="결과">결과</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/printf-score.png" class="img-fluid figure-img"></p>
<figcaption>최종 점수</figcaption>
</figure>
</div>
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-13-20-12-05.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-13-20-12-58.png" class="img-fluid"></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-13-20-13-50.png" class="img-fluid figure-img"></p>
<figcaption>최종 평가</figcaption>
</figure>
</div>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">outro</h2>
<p>ft_transcendence 과제는 통상 5인 팀이 2-3개월에 걸쳐 완성하는 대형 과제입니다. 이런 과제를 고작 3인이 한 달 만에 완료한것은 보통 일이 아니라고 생각합니다.</p>
<p>처음 계획했던 것보다 빠른 진행이 가능했던 건 팀원들의 기술적 역량이 높았던 것도 있지만, 팀원 전원이 지속적인 몰입과 집중력을 유지했던 것과, 매일 아침 미팅을 진행하며 지속적으로 팀원간 의사소통을 했던 것이 크게 작용했던 것 같습니다. 앞으로 이 과제를 수행하실 분들도 협업 능력을 키우는 용도로 해당 과제를 수행해 나가시면 큰 도움이 될거라 생각합니다.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>solidity</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/3.html</guid>
  <pubDate>Thu, 16 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>ft_transcendence - JWT</title>
  <link>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/2.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>아직 작성중인 노트입니다.</p>
</div>
</div>
</div>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-course-6.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul 공통과정 6서클 과제</figcaption>
</figure>
</div>
<p><a href="../../../../posts/03_resources/42_seoul/notes/0.html">1편 github action</a>에 이어서 JWT 파트에 대해 설명하겠습니다.</p>
</section>
<section id="프로젝트-및-구현-설명" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-및-구현-설명">프로젝트 및 구현 설명</h2>
<section id="jwt" class="level3">
<h3 class="anchored" data-anchor-id="jwt">JWT</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-16-20-37-17.png" class="img-fluid figure-img"></p>
<figcaption>security 요구사항</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-16-20-38-52.png" class="img-fluid figure-img"></p>
<figcaption>JWT 요구사항</figcaption>
</figure>
</div>
<p>비밀번호를 저장할 때는 암호화를 해야 한다는 요구사항이 있습니다. 이번 포스팅에서는 다루지 않지만, 우리의 구현에서는 비밀번호 없이 OAuth만으로 로그인이 가능하도록 설계했습니다. 따라서 사용자가 직접 비밀번호를 설정하지는 않습니다.</p>
<p>다만, JWT 구현 과정에서 비밀번호로 간주될 수 있는 부분이 있다고 판단하여 해시 처리를 추가했습니다. 이는 명세서의 해당 요구사항을 반영한 것입니다.</p>
<section id="개념" class="level4">
<h4 class="anchored" data-anchor-id="개념">개념</h4>
<p>구현에 대해 설명하기 전에, 먼저 <strong>JWT(JSON Web Token)가 무엇인지 이해</strong>해야 합니다. JWT는 <strong>토큰 기반 암호화 방식의 표준화된 형식</strong>으로, 다음과 같은 형태를 가지고 있습니다.</p>
<ol type="1">
<li><strong>Header</strong>: 토큰의 유형(예: JWT)과 사용된 암호화 알고리즘(예: HMAC SHA256)을 지정합니다.</li>
<li><strong>Payload</strong>: 토큰에 담을 정보를 포함합니다. 여기에는 클레임(Claim)이라고 불리는 키-값 쌍이 포함됩니다.</li>
<li><strong>Signature</strong>: 헤더와 페이로드를 합친 후, 지정된 알고리즘과 비밀 키를 사용해 서명한 값입니다. 이 서명은 토큰의 무결성을 보장합니다.</li>
</ol>
<p>각 부분은 점(.)으로 구분되며, Base64Url로 인코딩되어 있습니다.</p>
<p>토큰 암호화 방식은 왜 등장했을까요? 우리가 일반적으로 알고 있는 <strong>세션-쿠키 방식과는 어떤 차이</strong>가 있을까요?</p>
<ul>
<li><p><strong>세션-쿠키 방식</strong>: 사용자가 로그인하면 서버는 세션 ID를 생성하고 이를 사용자의 정보와 함께 <strong>데이터베이스나 메모리에 저장</strong>합니다. <strong>이후 클라이언트는 쿠키에 세션 ID를 저장</strong>하고, 요청마다 이를 서버로 전송합니다. 서버는 세션 ID를 검증하여 사용자를 인증합니다. 이 방식은 <strong>사용자가 증가할수록 서버의 메모리나 데이터베이스에 부담이 커집니다.</strong></p></li>
<li><p><strong>토큰 암호화 방식</strong>: 인증에 필요한 정보와 사용자의 정보(클레임)가 <strong>토큰 자체에 포함</strong>되어 있습니다. 서버는 토큰의 서명만 검증하면 되기 때문에 별도의 <strong>저장 공간이 필요하지 않습니다.</strong> 따라서 서버의 부하를 줄일 수 있습니다.</p></li>
</ul>
<p>즉, 기존의 세션-쿠키에서는 서버에 저장하던 정보를 토큰에 담아서 사용자한테 전달하는게 토큰 인증방식입니다. 언뜻 보기에는 토큰 암호화 방식이 세션-쿠키 방식의 상위호환처럼 보이지만, 토큰 방식에는 몇 가지 <strong>보안상의 위협</strong>이 존재합니다. 주요 위협과 그에 대한 대응 방법은 다음과 같습니다.</p>
<ul>
<li><p><strong>토큰 탈취</strong>: 토큰이 노출되면 공격자가 이를 악용할 수 있습니다.</p>
<p>대응 방법: <strong>HTTPS</strong>를 사용하여 통신을 암호화하고, 토큰의 <strong>유효 기간을 짧게</strong> 설정합니다. 또한, <strong>Refresh Token을 사용</strong>하여 Access Token의 유효 기간을 더욱 단축할 수 있습니다.</p></li>
<li><p><strong>XSS(Cross-Site Scripting) 공격</strong>: 악성 스크립트를 통해 토큰을 탈취할 수 있습니다.</p>
<p>대응 방법: <strong>HttpOnly와 Secure 플래그를 사용해 쿠키에 토큰을 저장</strong>합니다.</p></li>
<li><p><strong>CSRF(Cross-Site Request Forgery) 공격</strong>: 사용자의 권한을 도용해 악의적인 요청을 보낼 수 있습니다.</p>
<p>대응 방법: <strong>CSRF 토큰을 사용</strong>하거나, <strong>SameSite 속성을 설정</strong>해 쿠키를 보호합니다.</p></li>
<li><p>토큰 재생 공격: 탈취한 토큰을 재사용하는 공격입니다.</p>
<p>대응 방법: <strong>토큰에 일회용 nonce 값을 포함</strong>시키거나, <strong>토큰 블랙리스트를 관리</strong>합니다.</p></li>
</ul>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>토큰 탈취의 대응방법이 조금 허술하다고 느껴질 수 있습니다.<br>
더 많은 정보는 <a href="https://mgyo.tistory.com/832">이 포스팅</a>이 도움이 될것 같습니다.</p>
</div>
</div>
</div>
<p>인증 방식은 상황에 맞게 알맞은 선택을 하는게 중요합니다. 서버 확장성이나 경량화 측면에서는 토큰 인증 방식이 매력적인 이점을 가져다 줍니다. 하지만, <strong>보안이 중요한 서비스의 경우 session-cookie 방식이 더 유리</strong>할 수 있습니다.</p>
</section>
<section id="구현" class="level4">
<h4 class="anchored" data-anchor-id="구현">구현</h4>
<p>그럼 이제 구현 내용을 보도록 하겠습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>middleware.py</strong></pre>
</div>
<div class="sourceCode" id="cb1" data-filename="middleware.py" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> JWTMiddleware:</span>
<span id="cb1-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, get_response):</span>
<span id="cb1-3">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.get_response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_response</span>
<span id="cb1-4"></span>
<span id="cb1-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__call__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, request):</span>
<span id="cb1-6">        access <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request.COOKIES.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access'</span>)</span>
<span id="cb1-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> access <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> request.path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/auth/ft'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> request.path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/auth/refresh'</span>:</span>
<span id="cb1-8">            request.META[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HTTP_AUTHORIZATION'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Bearer </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>access<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb1-9">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.get_response(request)</span>
<span id="cb1-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> responseclass JWTMiddleware:</span>
<span id="cb1-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, get_response):</span>
<span id="cb1-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.get_response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_response</span>
<span id="cb1-13"></span>
<span id="cb1-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__call__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, request):</span>
<span id="cb1-15">        access <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request.COOKIES.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access'</span>)</span>
<span id="cb1-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> access <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> request.path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/auth/ft'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> request.path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/auth/refresh'</span>:</span>
<span id="cb1-17">            request.META[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HTTP_AUTHORIZATION'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Bearer </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>access<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb1-18">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.get_response(request)</span>
<span id="cb1-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> response</span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>settings.py</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="settings.py" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">SIMPLE_JWT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb2-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AUTH_HEADER_TYPES"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bearer"</span>,),</span>
<span id="cb2-3">    </span>
<span id="cb2-4">    ...</span>
<span id="cb2-5">}</span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>아_정리하기_귀찮아</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="아_정리하기_귀찮아" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_info_from_token(token, key):</span>
<span id="cb3-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb3-3">        payload <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jwt.decode(</span>
<span id="cb3-4">            token,</span>
<span id="cb3-5">            settings.SECRET_KEY,</span>
<span id="cb3-6">            algorithms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[settings.SIMPLE_JWT[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ALGORITHM'</span>]],</span>
<span id="cb3-7">            options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"verify_signature"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"verify_exp"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>}</span>
<span id="cb3-8">        )</span>
<span id="cb3-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> jwt.InvalidTokenError:</span>
<span id="cb3-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb3-11">    ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> payload.get(key)</span>
<span id="cb3-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> CustomTokenRefresh(APIView):</span>
<span id="cb3-15">    permission_classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb3-16"></span>
<span id="cb3-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> post(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, request):</span>
<span id="cb3-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb3-19">            refresh_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request.COOKIES.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refresh'</span>)</span>
<span id="cb3-20">            access_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request.COOKIES.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access'</span>)</span>
<span id="cb3-21">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> refresh_token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb3-22">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> TokenError</span>
<span id="cb3-23">            user_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_info_from_token(refresh_token, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'user_id'</span>)</span>
<span id="cb3-24">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> user_id <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb3-25">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> TokenError</span>
<span id="cb3-26">            user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> User.objects.get(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user_id)</span>
<span id="cb3-27">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> access_token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb3-28">                ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_info_from_token(access_token, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2FA'</span>)</span>
<span id="cb3-29">                is_weak <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ret <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'F'</span></span>
<span id="cb3-30">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb3-31">                is_weak <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> user.two_factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb3-32">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> user.refresh_token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> check_password(refresh_token, user.refresh_token):</span>
<span id="cb3-33">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> TokenError</span>
<span id="cb3-34">            validate_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RefreshToken(refresh_token)</span>
<span id="cb3-35">            validate_token.check_exp()</span>
<span id="cb3-36">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> (TokenError, User.DoesNotExist) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb3-37">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(e, TokenError):</span>
<span id="cb3-38">                user.refresh_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb3-39">                user.save()</span>
<span id="cb3-40">            res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Response({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'detail'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Given token not valid for any token type'</span>}, status<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">401</span>)</span>
<span id="cb3-41">            res.delete_cookie(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access'</span>)</span>
<span id="cb3-42">            res.delete_cookie(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refresh'</span>)</span>
<span id="cb3-43">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> res</span>
<span id="cb3-44">        refresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RefreshToken.for_user(user)</span>
<span id="cb3-45">        user.last_login <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> timezone.now()</span>
<span id="cb3-46">        user.refresh_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_password(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(refresh), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'md5'</span>)</span>
<span id="cb3-47">        user.save()</span>
<span id="cb3-48">        access <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> refresh.access_token</span>
<span id="cb3-49">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> is_weak:</span>
<span id="cb3-50">            access[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2FA'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'F'</span></span>
<span id="cb3-51">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Response(status<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">204</span>)</span>
<span id="cb3-52">        response.set_cookie(</span>
<span id="cb3-53">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access'</span>, </span>
<span id="cb3-54">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(access), </span>
<span id="cb3-55">            httponly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, </span>
<span id="cb3-56">            secure<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb3-57">            samesite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Lax'</span>)</span>
<span id="cb3-58">        response.set_cookie(</span>
<span id="cb3-59">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refresh'</span>, </span>
<span id="cb3-60">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(refresh), </span>
<span id="cb3-61">            httponly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, </span>
<span id="cb3-62">            path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"/auth/refresh;"</span>,</span>
<span id="cb3-63">            secure<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb3-64">            samesite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Strict'</span>)</span>
<span id="cb3-65">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> response</span>
<span id="cb3-66"></span>
<span id="cb3-67"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> AuthProvider(APIView):</span>
<span id="cb3-68">    permission_classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb3-69"></span>
<span id="cb3-70">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, request, auth_name):</span>
<span id="cb3-71">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> auth_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ft'</span>:</span>
<span id="cb3-72">            ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_ft_user(request)</span>
<span id="cb3-73">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb3-74">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> Http404</span>
<span id="cb3-75">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(ret, HttpResponse) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(ret, Response):</span>
<span id="cb3-76">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span>
<span id="cb3-77">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb3-78">            user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> User.objects.get(oauth__id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ret[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>], oauth__provider<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ret[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"provider"</span>])</span>
<span id="cb3-79">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> User.DoesNotExist:</span>
<span id="cb3-80">            user_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> User.objects.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>()</span>
<span id="cb3-81">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>):</span>
<span id="cb3-82">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb3-83">                    username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ret[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'default_username'</span>]</span>
<span id="cb3-84">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb3-85">                    username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ret[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"default_username"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:03d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-86">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> user_list.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>username).exists():</span>
<span id="cb3-87">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb3-88">            random_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(random.choices(string.ascii_letters, k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) </span>
<span id="cb3-89">            user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> User(</span>
<span id="cb3-90">                username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> username, </span>
<span id="cb3-91">                email <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ret[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>],</span>
<span id="cb3-92">                oauth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb3-93">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>: ret[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>],</span>
<span id="cb3-94">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"provider"</span>: ret[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"provider"</span>],</span>
<span id="cb3-95">                },</span>
<span id="cb3-96">                password <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_password(random_str, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'md5'</span>),</span>
<span id="cb3-97">            )</span>
<span id="cb3-98">            user.save()</span>
<span id="cb3-99">            user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> User.objects.get(username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>username)</span>
<span id="cb3-100">            sync_user_to_game_db(user.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, user.username)</span>
<span id="cb3-101">        user.last_login <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> timezone.now()</span>
<span id="cb3-102">        refresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RefreshToken.for_user(user)</span>
<span id="cb3-103">        user.refresh_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_password(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(refresh), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'md5'</span>)</span>
<span id="cb3-104">        user.save()</span>
<span id="cb3-105">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> user.two_factor:</span>
<span id="cb3-106">            res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HttpResponseRedirect(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>settings<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>BASE_URL<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/two-factor'</span>)</span>
<span id="cb3-107">            access <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> refresh.access_token</span>
<span id="cb3-108">            access[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2FA'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'F'</span></span>
<span id="cb3-109">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb3-110">            res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HttpResponseRedirect(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>settings<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>BASE_URL<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/home'</span>)</span>
<span id="cb3-111">            access <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> refresh.access_token</span>
<span id="cb3-112">        res.status_code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">303</span></span>
<span id="cb3-113">        res.set_cookie(</span>
<span id="cb3-114">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access'</span>, </span>
<span id="cb3-115">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(access), </span>
<span id="cb3-116">            httponly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, </span>
<span id="cb3-117">            secure<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb3-118">            samesite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Lax'</span>)</span>
<span id="cb3-119">        res.set_cookie(</span>
<span id="cb3-120">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refresh'</span>, </span>
<span id="cb3-121">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(refresh), </span>
<span id="cb3-122">            httponly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, </span>
<span id="cb3-123">            path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"/auth/refresh;"</span>,</span>
<span id="cb3-124">            secure<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb3-125">            samesite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Strict'</span>)</span>
<span id="cb3-126">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> res</span>
<span id="cb3-127"></span>
<span id="cb3-128"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_ft_user(request):</span>
<span id="cb3-129">    code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request.GET.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'code'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb3-130">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>:</span>
<span id="cb3-131">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HttpResponseRedirect(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">getattr</span>(settings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'AUTH_42_CLIENT_URL'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>))</span>
<span id="cb3-132">        response.status_code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">303</span></span>
<span id="cb3-133">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> response</span>
<span id="cb3-134">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb3-135">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.post(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'https://api.intra.42.fr/oauth/token?</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>urlencode({</span>
<span id="cb3-136">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grant_type'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'authorization_code'</span>,</span>
<span id="cb3-137">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'client_id'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">getattr</span>(settings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'AUTH_42_CLIENT_ID'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>),</span>
<span id="cb3-138">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'client_secret'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">getattr</span>(settings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'AUTH_42_CLIENT_SECRET'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>),</span>
<span id="cb3-139">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'code'</span>: code,</span>
<span id="cb3-140">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'redirect_uri'</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>settings<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>BASE_URL<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/auth/ft'</span>,</span>
<span id="cb3-141">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scope'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'public'</span>,</span>
<span id="cb3-142">        })<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb3-143">        response.raise_for_status()</span>
<span id="cb3-144">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://api.intra.42.fr/v2/me'</span>, headers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb3-145">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Authorization'</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Bearer </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>response<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>json()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access_token'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb3-146">        })</span>
<span id="cb3-147">        response.raise_for_status()</span>
<span id="cb3-148">        user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response.json()</span>
<span id="cb3-149">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {</span>
<span id="cb3-150">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"default_username"</span>: user[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"login"</span>],</span>
<span id="cb3-151">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"provider"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"42"</span>,</span>
<span id="cb3-152">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>: user[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>],</span>
<span id="cb3-153">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>: user[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>],</span>
<span id="cb3-154">        }</span>
<span id="cb3-155">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> (requests.exceptions.RequestException, JSONDecodeError, <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">KeyError</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb3-156">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> response.status_code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">401</span>:</span>
<span id="cb3-157">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> Response({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"detail"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"잘못된 권한입니다"</span>}, status<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">401</span>)</span>
<span id="cb3-158">        logger.error(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: response code: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>response<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>status_code<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> and response body: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>response<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb3-159">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> Response({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"detail"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Internal Server Error"</span>}, status<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)</span>
<span id="cb3-160"></span>
<span id="cb3-161"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@api_view</span>([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'POST'</span>])</span>
<span id="cb3-162"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@permission_classes</span>([IsAuthenticated])</span>
<span id="cb3-163"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> logOut(request):</span>
<span id="cb3-164">    user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request.user</span>
<span id="cb3-165">    user.last_logout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>timezone.now()</span>
<span id="cb3-166">    user.refresh_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb3-167">    user.save()</span>
<span id="cb3-168">    res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Response(status<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">204</span>)</span>
<span id="cb3-169">    res.delete_cookie(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access'</span>)</span>
<span id="cb3-170">    res.delete_cookie(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refresh'</span>)</span>
<span id="cb3-171">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> res</span></code></pre></div>
</div>
</section>
</section>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">outro</h2>
<p>3편에 block chain 관련 설명으로 이어서 진행하겠습니다.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>django</category>
  <category>jwt</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/2.html</guid>
  <pubDate>Thu, 16 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>inception-of-things</title>
  <link>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/4.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>아직 작성중인 노트입니다.</p>
</div>
</div>
</div>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-outer-1.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul outer 과제</figcaption>
</figure>
</div>
<p>42 Seoul의 공통 과정을 마무리하면, 원하는 분야를 선택하여 심화 과제를 수행할 수 있습니다. 그중에서도 ’Inception-of-Things’는 인프라 관련 심화 과제로, 가장 많은 경험치를 얻을 수 있는 과제입니다.</p>
<p>얼핏 보면 매우 어려운 과제처럼 느껴질 수 있지만, 개념을 확실히 이해하고 공부한다면 누구나 빠르게 완료할 수 있다고 생각합니다. 저의 경우, CKA 자격증 취득을 목표로 k8s를 공부하던 중 우연히 팀원을 구하게 되어 이 과제를 수행하게 되었습니다. 배경지식이 어느 정도 있는 상태에서 진행하다 보니, 크게 어렵지 않게 잘 마무리할 수 있었던 것 같습니다.</p>
</section>
<section id="프로젝트-및-구현-설명" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-및-구현-설명">프로젝트 및 구현 설명</h2>
<section id="개요" class="level3">
<h3 class="anchored" data-anchor-id="개요">개요</h3>
<p><a href="https://cdn.intra.42.fr/pdf/pdf/143948/en.subject.pdf">과제 명세서</a></p>
<p>참고한 자료는 다음과 같습니다:</p>
<ul>
<li><a href="https://www.udemy.com/course/certified-kubernetes-administrator-with-practice-tests/">CKA Udemy 강의</a></li>
<li><a href="https://www.udemy.com/course/argo-cd-essential-guide-for-end-users-with-practice/">ArgoCD Udemy 강의</a></li>
<li><a href="https://docs.gitlab.com/charts/">gitlab helm 베포 Docs</a></li>
<li><a href="https://developer.hashicorp.com/vagrant/docs">Vagrant Docs</a></li>
</ul>
<p>참고로 저는 보통 새로운 개념을 공부할 때, 영상 강의로 시작을 하지만, 공식 docs도 반드시 확인합니다. 강의가 오래되거나 혹은 강사가 생략해서 모든 개념을 다루지 않는 경우도 많기 때문입니다.</p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>전체 코드는 비공개 되어있는 상태입니다</p>
</div>
</div>
</div>
</section>
<section id="part-1" class="level3">
<h3 class="anchored" data-anchor-id="part-1">Part 1</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-14-00-34.png" class="img-fluid figure-img"></p>
<figcaption>Part 1 요구사항</figcaption>
</figure>
</div>
<ol type="1">
<li>cluster가 뭔지</li>
<li>provision이 뭔지</li>
<li>k8s는 clusting 해주는 tool, provision은 vagrant로 진행</li>
<li>진행 과정</li>
</ol>
<pre class="hcl"><code>Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-24.04"
  config.vm.box_version = "202404.26.0"

  config.vm.define "hyunghkiS" do |control|
    control.vm.hostname = "hyunghkiS"
    control.vm.network "private_network", ip: "192.168.56.110"
    control.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--name", "hyunghkiS"]
      v.memory = "1024"
      v.cpus = "1"
    end
    # just for evaluation
    control.vm.provision "shell", inline: &lt;&lt;-SHELL
      sudo apt-get update
      sudo apt-get install -y net-tools
    SHELL
    control.vm.provision "shell", path: "scripts/server.sh"
  end
  config.vm.define "hyunghkiSW" do |control|
    control.vm.hostname = "hyunghkiSW"
    control.vm.network "private_network", ip: "192.168.56.111"
    control.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--name", "hyunghkiSW"]
      v.memory = "1024"
      v.cpus = "1"
    end
    # just for evaluation
    control.vm.provision "shell", inline: &lt;&lt;-SHELL
      sudo apt-get update
      sudo apt-get install -y net-tools
    SHELL
    control.vm.provision "shell", path: "scripts/agent.sh"
  end
end</code></pre>
<p>vagrant file</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alias k=kubectl'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> /home/vagrant/.bashrc</span>
<span id="cb2-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> /home/vagrant/.bashrc</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sfL</span> https://get.k3s.io <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">K3S_KUBECONFIG_MODE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"644"</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> server <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--node-ip</span> 192.168.56.110</span>
<span id="cb2-7"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">K3S_TOKEN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> cat /var/lib/rancher/k3s/server/node-token<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$K3S_TOKEN</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /vagrant/k3s_token</span></code></pre></div>
<p>server script</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alias k=kubectl'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> /home/vagrant/.bashrc</span>
<span id="cb3-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> /home/vagrant/.bashrc</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">K3S_TOKEN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /vagrant/k3s_token<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sfL</span> https://get.k3s.io <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">K3S_URL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>https://192.168.56.110:6443 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">K3S_TOKEN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$K3S_TOKEN</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--node-ip</span> 192.168.56.111</span></code></pre></div>
<p>agent script</p>
</section>
<section id="part-2" class="level3">
<h3 class="anchored" data-anchor-id="part-2">Part 2</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-14-03-02.png" class="img-fluid figure-img"></p>
<figcaption>Part 2 요구사항</figcaption>
</figure>
</div>
<ol type="1">
<li>본격적으로 cluster 구조에 대해 설명</li>
<li>pod, replicaset, 또 뭐 있었는데 어쨌든 설명</li>
<li>진행 과정</li>
</ol>
<pre class="hcl"><code>Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-24.04"
  config.vm.box_version = "202404.26.0"

  config.vm.define "hyunghkiS" do |control|
    control.vm.hostname = "hyunghkiS"
    control.vm.network "private_network", ip: "192.168.56.110"
    control.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--name", "hyunghkiS"]
      v.memory = "8192"
      v.cpus = "5"
    end
    config.vm.synced_folder "confs", "/etc/vagrant/confs"
    control.vm.provision "shell", path: "scripts/server.sh"
  end
end</code></pre>
<p>vagrant file</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alias k=kubectl'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> /home/vagrant/.bashrc</span>
<span id="cb5-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> /home/vagrant/.bashrc</span>
<span id="cb5-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sfL</span> https://get.k3s.io <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">K3S_KUBECONFIG_MODE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"644"</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> server</span>
<span id="cb5-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">until</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get crd <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ingressroutes.traefik.containo.us'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb5-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'waiting for CRD...'</span></span>
<span id="cb5-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1</span>
<span id="cb5-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb5-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> apply <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> /etc/vagrant/confs</span>
<span id="cb5-11"></span>
<span id="cb5-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">until</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">!</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get pods <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> jsonpath=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{.items[*].metadata.name}'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb5-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1</span>
<span id="cb5-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb5-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> pod <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get pods <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> jsonpath=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{.items[*].metadata.name}'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb5-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">until</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get pods <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$pod</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Running'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb5-17">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1</span>
<span id="cb5-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb5-19">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">app_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get pods <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$pod</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> jsonpath=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{.metadata.labels.app}'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-20">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">HTML</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;EOF</span></span>
<span id="cb5-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;!DOCTYPE html&gt;</span></span>
<span id="cb5-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;html&gt; </span></span>
<span id="cb5-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;head&gt; </span></span>
<span id="cb5-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    &lt;title&gt;Hello Kubernetes!&lt;/title&gt;</span></span>
<span id="cb5-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/head&gt;</span></span>
<span id="cb5-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;body&gt;</span></span>
<span id="cb5-27"></span>
<span id="cb5-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    &lt;div class="main"&gt;</span></span>
<span id="cb5-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        &lt;div class="content"&gt;</span></span>
<span id="cb5-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            &lt;div id="message"&gt; </span></span>
<span id="cb5-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    Hello from </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${app_name}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb5-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/div&gt;</span></span>
<span id="cb5-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;div id="info"&gt;</span></span>
<span id="cb5-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    &lt;table&gt; </span></span>
<span id="cb5-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        &lt;tr&gt;</span></span>
<span id="cb5-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            &lt;th&gt;pod:&lt;/th&gt; </span></span>
<span id="cb5-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            &lt;td&gt;</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${pod}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/td&gt;</span></span>
<span id="cb5-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        &lt;/tr&gt;</span></span>
<span id="cb5-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        &lt;tr&gt;</span></span>
<span id="cb5-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            &lt;th&gt;node:&lt;/th&gt; </span></span>
<span id="cb5-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            &lt;td&gt;</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uname</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> (</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uname</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)&lt;/td&gt; </span></span>
<span id="cb5-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        &lt;/tr&gt; </span></span>
<span id="cb5-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    &lt;/table&gt;</span></span>
<span id="cb5-44"></span>
<span id="cb5-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/div&gt; </span></span>
<span id="cb5-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    &lt;/div&gt; </span></span>
<span id="cb5-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/div&gt;</span></span>
<span id="cb5-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/body&gt;</span></span>
<span id="cb5-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/html&gt;</span></span>
<span id="cb5-50"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">EOF</span></span>
<span id="cb5-51"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-52">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">$"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${HTML}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /home/vagrant/index.html</span>
<span id="cb5-53">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> cp /home/vagrant/index.html <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$pod</span>:/usr/share/nginx/html/index.html <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null</span>
<span id="cb5-54"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
<p>server script</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>deploy.yml</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="deploy.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">apiVersion: apps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1</span>
<span id="cb6-2">kind: Deployment</span>
<span id="cb6-3">metadata:</span>
<span id="cb6-4">  name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>one</span>
<span id="cb6-5">  labels:</span>
<span id="cb6-6">    app: app1</span>
<span id="cb6-7">spec:</span>
<span id="cb6-8">  replicas: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-9">  selector:</span>
<span id="cb6-10">    matchLabels:</span>
<span id="cb6-11">      app: app1</span>
<span id="cb6-12">  template:</span>
<span id="cb6-13">    metadata:</span>
<span id="cb6-14">      labels:</span>
<span id="cb6-15">        app: app1</span>
<span id="cb6-16">    spec:</span>
<span id="cb6-17">      containers:</span>
<span id="cb6-18">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: nginx</span>
<span id="cb6-19">        image: nginx</span>
<span id="cb6-20">        ports:</span>
<span id="cb6-21">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> containerPort: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb6-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb6-23">apiVersion: apps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1</span>
<span id="cb6-24">kind: Deployment</span>
<span id="cb6-25">metadata:</span>
<span id="cb6-26">  name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>two</span>
<span id="cb6-27">  labels:</span>
<span id="cb6-28">    app: app2</span>
<span id="cb6-29">spec:</span>
<span id="cb6-30">  replicas: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb6-31">  selector:</span>
<span id="cb6-32">    matchLabels:</span>
<span id="cb6-33">      app: app2</span>
<span id="cb6-34">  template:</span>
<span id="cb6-35">    metadata:</span>
<span id="cb6-36">      labels:</span>
<span id="cb6-37">        app: app2</span>
<span id="cb6-38">    spec:</span>
<span id="cb6-39">      containers:</span>
<span id="cb6-40">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: nginx</span>
<span id="cb6-41">        image: nginx</span>
<span id="cb6-42">        ports:</span>
<span id="cb6-43">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> containerPort: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb6-44"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb6-45">apiVersion: apps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1</span>
<span id="cb6-46">kind: Deployment</span>
<span id="cb6-47">metadata:</span>
<span id="cb6-48">  name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>three</span>
<span id="cb6-49">  labels:</span>
<span id="cb6-50">    app: app3</span>
<span id="cb6-51">spec:</span>
<span id="cb6-52">  replicas: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-53">  selector:</span>
<span id="cb6-54">    matchLabels:</span>
<span id="cb6-55">      app: app3</span>
<span id="cb6-56">  template:</span>
<span id="cb6-57">    metadata:</span>
<span id="cb6-58">      labels:</span>
<span id="cb6-59">        app: app3</span>
<span id="cb6-60">    spec:</span>
<span id="cb6-61">      containers:</span>
<span id="cb6-62">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: nginx</span>
<span id="cb6-63">        image: nginx</span>
<span id="cb6-64">        ports:</span>
<span id="cb6-65">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> containerPort: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>ing.yml</strong></pre>
</div>
<div class="sourceCode" id="cb7" data-filename="ing.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">apiVersion: networking.k8s.io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1</span>
<span id="cb7-2">kind: Ingress</span>
<span id="cb7-3">metadata:</span>
<span id="cb7-4">  name: ingress</span>
<span id="cb7-5">spec:</span>
<span id="cb7-6">  ingressClassName: traefik</span>
<span id="cb7-7">  rules:</span>
<span id="cb7-8">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> host: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app1.com"</span></span>
<span id="cb7-9">    http:</span>
<span id="cb7-10">      paths:</span>
<span id="cb7-11">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pathType: Prefix</span>
<span id="cb7-12">        path: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span></span>
<span id="cb7-13">        backend:</span>
<span id="cb7-14">          service:</span>
<span id="cb7-15">            name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>one</span>
<span id="cb7-16">            port:</span>
<span id="cb7-17">              number: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb7-18">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> host: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app2.com"</span></span>
<span id="cb7-19">    http:</span>
<span id="cb7-20">      paths:</span>
<span id="cb7-21">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pathType: Prefix</span>
<span id="cb7-22">        path: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span></span>
<span id="cb7-23">        backend:</span>
<span id="cb7-24">          service:</span>
<span id="cb7-25">            name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>two</span>
<span id="cb7-26">            port:</span>
<span id="cb7-27">              number: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>route.yml</strong></pre>
</div>
<div class="sourceCode" id="cb8" data-filename="route.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">apiVersion: traefik.containo.us<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1alpha1</span>
<span id="cb8-2">kind: IngressRoute</span>
<span id="cb8-3">metadata:</span>
<span id="cb8-4">  name: default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>backend</span>
<span id="cb8-5">spec:</span>
<span id="cb8-6">  routes:</span>
<span id="cb8-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> match: PathPrefix(`<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>`)</span>
<span id="cb8-8">      kind: Rule</span>
<span id="cb8-9">      services:</span>
<span id="cb8-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>three</span>
<span id="cb8-11">          port: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>svc.yml</strong></pre>
</div>
<div class="sourceCode" id="cb9" data-filename="svc.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">apiVersion: v1</span>
<span id="cb9-2">kind: Service</span>
<span id="cb9-3">metadata:</span>
<span id="cb9-4">  name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>one</span>
<span id="cb9-5">spec:</span>
<span id="cb9-6">  selector:</span>
<span id="cb9-7">    app: app1</span>
<span id="cb9-8">  ports:</span>
<span id="cb9-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> protocol: TCP</span>
<span id="cb9-10">      port: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb9-11">      targetPort: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb9-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb9-13">apiVersion: v1</span>
<span id="cb9-14">kind: Service</span>
<span id="cb9-15">metadata:</span>
<span id="cb9-16">  name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>two</span>
<span id="cb9-17">spec:</span>
<span id="cb9-18">  selector:</span>
<span id="cb9-19">    app: app2</span>
<span id="cb9-20">  ports:</span>
<span id="cb9-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> protocol: TCP</span>
<span id="cb9-22">      port: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb9-23">      targetPort: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb9-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb9-25">apiVersion: v1</span>
<span id="cb9-26">kind: Service</span>
<span id="cb9-27">metadata:</span>
<span id="cb9-28">  name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>three</span>
<span id="cb9-29">spec:</span>
<span id="cb9-30">  selector:</span>
<span id="cb9-31">    app: app3</span>
<span id="cb9-32">  ports:</span>
<span id="cb9-33">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> protocol: TCP</span>
<span id="cb9-34">      port: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb9-35">      targetPort: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span></code></pre></div>
</div>
</section>
<section id="part-3" class="level3">
<h3 class="anchored" data-anchor-id="part-3">Part 3</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-14-04-32.png" class="img-fluid figure-img"></p>
<figcaption>Part 3 요구사항</figcaption>
</figure>
</div>
<ol type="1">
<li>ArgoCD에 대해 설명</li>
<li>진행 과정</li>
</ol>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">! </span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> kubectl <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb10-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install kubectl</span>
<span id="cb10-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb10-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">! </span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> k3d <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb10-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install k3d</span>
<span id="cb10-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb10-9"></span>
<span id="cb10-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">k3d</span> cluster create argocd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9999:9999@loadbalancer"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8888:8888@loadbalancer"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"80:80@loadbalancer"</span></span>
<span id="cb10-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> create ns argocd</span>
<span id="cb10-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> create ns dev</span>
<span id="cb10-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> create ns gitlab</span>
<span id="cb10-14"></span>
<span id="cb10-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> apply <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> argocd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml</span>
<span id="cb10-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> patch deploy argocd-server <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> argocd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'json'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[{"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--insecure"}]'</span></span>
<span id="cb10-17"></span>
<span id="cb10-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get cm argocd-cm <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> argocd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> yaml <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> tmp.yml</span>
<span id="cb10-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">$'data:</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  timeout.reconciliation: 10s'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> tmp.yml</span>
<span id="cb10-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> apply <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> tmp.yml <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> tmp.yml</span>
<span id="cb10-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> rollout restart deploy argocd-repo-server <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> argocd</span>
<span id="cb10-22"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">until</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get svc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> kube-system <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> traefik<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb10-23">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1</span>
<span id="cb10-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb10-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> patch svc traefik <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> kube-system <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{"spec":{"ports":[{"name":"wil","port":8888,"targetPort":"wil"},{"name":"glab","port":9999,"targetPort":"glab"}]}}'</span></span>
<span id="cb10-26"></span>
<span id="cb10-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> patch deploy traefik <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> kube-system <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'json'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[</span></span>
<span id="cb10-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    {"op": "add", "path": "/spec/template/spec/containers/0/ports/-", "value": {"containerPort": 8888, "name": "wil", "protocol": "TCP"}},</span></span>
<span id="cb10-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    {"op": "add", "path": "/spec/template/spec/containers/0/ports/-", "value": {"containerPort": 9999, "name": "glab", "protocol": "TCP"}},</span></span>
<span id="cb10-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    {"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--entrypoints.wil.address=:8888/tcp"},</span></span>
<span id="cb10-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    {"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--entrypoints.glab.address=:9999/tcp"}</span></span>
<span id="cb10-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">]'</span></span>
<span id="cb10-33"></span>
<span id="cb10-34"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">until</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get crd <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ingressroutes.traefik.containo.us'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb10-35">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'waiting for CRD...'</span></span>
<span id="cb10-36">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1</span>
<span id="cb10-37"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb10-38"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> apply <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> ../confs/mand</span>
<span id="cb10-39"></span>
<span id="cb10-40"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">until</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get deploy <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> argocd argocd-server <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-ojsonpath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{.status.availableReplicas}'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-ne</span> 0 <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb10-41">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1</span>
<span id="cb10-42">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'waiting for argocd ready...'</span></span>
<span id="cb10-43"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb10-44"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">$'</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\e</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[92mSetting done!</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\e</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[0m</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">You can start with admin password:'</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get secret argocd-initial-admin-secret <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> argocd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> json <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> password <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">awk</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{gsub(/"/, "", $2); print $2}'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">base64</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--decode</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>application.yml</strong></pre>
</div>
<div class="sourceCode" id="cb11" data-filename="application.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">apiVersion: argoproj.io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1alpha1</span>
<span id="cb11-2">kind: Application</span>
<span id="cb11-3">metadata:</span>
<span id="cb11-4">  name: myapp</span>
<span id="cb11-5">  namespace: argocd</span>
<span id="cb11-6">spec:</span>
<span id="cb11-7">  destination:</span>
<span id="cb11-8">    namespace: dev</span>
<span id="cb11-9">    server: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://kubernetes.default.svc"</span></span>
<span id="cb11-10">  project: development</span>
<span id="cb11-11">  source:</span>
<span id="cb11-12">    path: manifests</span>
<span id="cb11-13">    repoURL: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/42-iot/hyunghki_source.git"</span></span>
<span id="cb11-14">    targetRevision: HEAD</span>
<span id="cb11-15">  syncPolicy:</span>
<span id="cb11-16">    automated:</span>
<span id="cb11-17">      prune: true</span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>dev_route.yml</strong></pre>
</div>
<div class="sourceCode" id="cb12" data-filename="dev_route.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">apiVersion: argoproj.io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1alpha1</span>
<span id="cb12-2">kind: Application</span>
<span id="cb12-3">metadata:</span>
<span id="cb12-4">  name: myapp</span>
<span id="cb12-5">  namespace: argocd</span>
<span id="cb12-6">spec:</span>
<span id="cb12-7">  destination:</span>
<span id="cb12-8">    namespace: dev</span>
<span id="cb12-9">    server: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://kubernetes.default.svc"</span></span>
<span id="cb12-10">  project: development</span>
<span id="cb12-11">  source:</span>
<span id="cb12-12">    path: manifests</span>
<span id="cb12-13">    repoURL: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/42-iot/hyunghki_source.git"</span></span>
<span id="cb12-14">    targetRevision: HEAD</span>
<span id="cb12-15">  syncPolicy:</span>
<span id="cb12-16">    automated:</span>
<span id="cb12-17">      prune: true</span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>ing.yml</strong></pre>
</div>
<div class="sourceCode" id="cb13" data-filename="ing.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">apiVersion: traefik.containo.us<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1alpha1</span>
<span id="cb13-2">kind: IngressRoute</span>
<span id="cb13-3">metadata:</span>
<span id="cb13-4">  name: route</span>
<span id="cb13-5">  namespace: dev</span>
<span id="cb13-6">spec:</span>
<span id="cb13-7">  entryPoints:</span>
<span id="cb13-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> wil</span>
<span id="cb13-9">  routes:</span>
<span id="cb13-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> match: PathPrefix(`<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>`)</span>
<span id="cb13-11">      kind: Rule</span>
<span id="cb13-12">      services:</span>
<span id="cb13-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: wil<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>playground</span>
<span id="cb13-14">          port: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8888</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>project.yml</strong></pre>
</div>
<div class="sourceCode" id="cb14" data-filename="project.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">apiVersion: networking.k8s.io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1</span>
<span id="cb14-2">kind: Ingress</span>
<span id="cb14-3">metadata:</span>
<span id="cb14-4">  name: argocd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>server<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>http</span>
<span id="cb14-5">  namespace: argocd</span>
<span id="cb14-6">  annotations:</span>
<span id="cb14-7">    traefik.ingress.kubernetes.io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>router.entrypoints: web</span>
<span id="cb14-8">spec:</span>
<span id="cb14-9">  ingressClassName: traefik</span>
<span id="cb14-10">  rules:</span>
<span id="cb14-11">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> http:</span>
<span id="cb14-12">      paths:</span>
<span id="cb14-13">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> path: <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span></span>
<span id="cb14-14">        pathType: Prefix</span>
<span id="cb14-15">        backend:</span>
<span id="cb14-16">          service:</span>
<span id="cb14-17">            name: argocd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>server</span>
<span id="cb14-18">            port:</span>
<span id="cb14-19">              name: http</span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>bonus_application.yml</strong></pre>
</div>
<div class="sourceCode" id="cb15" data-filename="bonus_application.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">apiVersion: argoproj.io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1alpha1</span>
<span id="cb15-2">kind: Application</span>
<span id="cb15-3">metadata:</span>
<span id="cb15-4">  name: gitlab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>app</span>
<span id="cb15-5">  namespace: argocd</span>
<span id="cb15-6">spec:</span>
<span id="cb15-7">  destination:</span>
<span id="cb15-8">    namespace: gitlab</span>
<span id="cb15-9">    server: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://kubernetes.default.svc"</span></span>
<span id="cb15-10">  project: default</span>
<span id="cb15-11">  source:</span>
<span id="cb15-12">    path: manifests</span>
<span id="cb15-13">    repoURL: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://gitlab.192.168.56.110.nip.io/root/hyunghki.git"</span></span>
<span id="cb15-14">    targetRevision: master</span>
<span id="cb15-15">  syncPolicy:</span>
<span id="cb15-16">    automated:</span>
<span id="cb15-17">      prune: true</span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>bonus_route.yml</strong></pre>
</div>
<div class="sourceCode" id="cb16" data-filename="bonus_route.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">apiVersion: argoproj.io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1alpha1</span>
<span id="cb16-2">kind: Application</span>
<span id="cb16-3">metadata:</span>
<span id="cb16-4">  name: gitlab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>app</span>
<span id="cb16-5">  namespace: argocd</span>
<span id="cb16-6">spec:</span>
<span id="cb16-7">  destination:</span>
<span id="cb16-8">    namespace: gitlab</span>
<span id="cb16-9">    server: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://kubernetes.default.svc"</span></span>
<span id="cb16-10">  project: default</span>
<span id="cb16-11">  source:</span>
<span id="cb16-12">    path: manifests</span>
<span id="cb16-13">    repoURL: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://gitlab.192.168.56.110.nip.io/root/hyunghki.git"</span></span>
<span id="cb16-14">    targetRevision: master</span>
<span id="cb16-15">  syncPolicy:</span>
<span id="cb16-16">    automated:</span>
<span id="cb16-17">      prune: true</span></code></pre></div>
</div>
</section>
<section id="bonus-part" class="level3">
<h3 class="anchored" data-anchor-id="bonus-part">Bonus Part</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-14-04-55.png" class="img-fluid figure-img"></p>
<figcaption>Bonus Part 요구사항</figcaption>
</figure>
</div>
<ol type="1">
<li>helm chart가 뭔지</li>
<li>gitlab cluster가 왜 필요한지</li>
<li>진행 과정</li>
</ol>
<pre class="hcl"><code>Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-24.04"
  config.vm.box_version = "202404.26.0"

  config.vm.define "hyunghkiS" do |control|
    control.vm.hostname = "hyunghkiS"
    control.vm.network "private_network", ip: "192.168.56.110"
    control.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--name", "hyunghkiS"]
      v.memory = "16384"
      v.cpus = "5"
    end
    config.vm.synced_folder "confs", "/etc/vagrant/confs"
    control.vm.provision "shell", path: "scripts/setting.sh"
  end
end</code></pre>
<p>vagrant file</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alias k=kubectl'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> /home/vagrant/.bashrc</span>
<span id="cb18-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> /home/vagrant/.bashrc</span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install kubectl</span></span>
<span id="cb18-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sfL</span> https://get.k3s.io <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">K3S_KUBECONFIG_MODE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"644"</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> server <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--disable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>traefik</span>
<span id="cb18-6"></span>
<span id="cb18-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install helm</span></span>
<span id="cb18-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> https://baltocdn.com/helm/signing.asc <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gpg</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--dearmor</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tee /usr/share/keyrings/helm.gpg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null</span>
<span id="cb18-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> apt-transport-https</span>
<span id="cb18-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"deb [arch=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dpkg</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--print-architecture</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tee /etc/apt/sources.list.d/helm-stable-debian.list</span>
<span id="cb18-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get update</span>
<span id="cb18-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> helm</span>
<span id="cb18-13"></span>
<span id="cb18-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># setting gitlab</span></span>
<span id="cb18-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> create ns gitlab</span>
<span id="cb18-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">KUBECONFIG</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/etc/rancher/k3s/k3s.yaml</span>
<span id="cb18-17"></span>
<span id="cb18-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">helm</span> repo add gitlab https://charts.gitlab.io/</span>
<span id="cb18-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">helm</span> repo update</span>
<span id="cb18-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">helm</span> upgrade <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--namespace</span> gitlab <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--install</span> gitlab gitlab/gitlab <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> global.hosts.domain=192.168.56.110.nip.io <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> global.hosts.externalIP=192.168.56.110 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> global.ingress.tls.enabled=false <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> global.hosts.https=false <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> global.ingress.configureCertmanager=false <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> global.edition=ce <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> global.shell.port=4242</span>
<span id="cb18-29"></span>
<span id="cb18-30"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">until</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get deploy <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> gitlab gitlab-webservice-default <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-ojsonpath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{.status.availableReplicas}'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-ne</span> 0 <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb18-31">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1</span>
<span id="cb18-32">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'waiting for gitlab ready...'</span></span>
<span id="cb18-33"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb18-34"></span>
<span id="cb18-35"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">$'</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\e</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[92mAll done!</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\e</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[0m</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">You can start with root password:'</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get secret gitlab-gitlab-initial-root-password <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> gitlab <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-ojsonpath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{.data.password}'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">base64</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--decode</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</section>
</section>
<section id="결과" class="level2">
<h2 class="anchored" data-anchor-id="결과">결과</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/printf-score.png" class="img-fluid figure-img"></p>
<figcaption>최종 점수</figcaption>
</figure>
</div>
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-13-20-14-45.png" class="img-fluid"></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-13-20-15-10.png" class="img-fluid figure-img"></p>
<figcaption>최종 평가</figcaption>
</figure>
</div>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">outro</h2>
<p>k8s의 개략적인 개념을 적용해보기 좋은 과제였던것 같습니다. 왠지 이 과제를 발판으로 삼아 더 응용할만한 과제가 있을법 한데, 의외로 후속 과제가 없는것이 조금 아쉬웠습니다. 개인적으로 조금 더 깊이 있는 infra 분야의 심화 과제가 많이 나왔으면 좋겠네요.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>vagrant</category>
  <category>k8s</category>
  <category>argoCD</category>
  <category>gitlab</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/4.html</guid>
  <pubDate>Sat, 11 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>ft_printf</title>
  <link>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/0.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>아직 작성중인 노트입니다.</p>
</div>
</div>
</div>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">Intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-course-2.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul 공통과정 2서클 과제</figcaption>
</figure>
</div>
<p>ft_printf는 42 Seoul 공통과정 초반에 수행했던 과제입니다. 2년이라는 시간이 지나 코드의 세부 내용은 많이 희미해졌지만, C언어에 대한 기억을 되살려가며 코드를 하나씩 설명해보도록 하겠습니다.</p>
</section>
<section id="프로젝트-설명" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-설명">프로젝트 설명</h2>
<section id="개요" class="level3">
<h3 class="anchored" data-anchor-id="개요">개요</h3>
<p><a href="https://cdn.intra.42.fr/pdf/pdf/143719/en.subject.pdf">과제 명세서</a></p>
<p>이 프로젝트는 C언어의 printf 함수를 직접 구현하는 과제입니다. 얼핏 단순해 보이지만, printf의 작동 원리를 깊이 이해해야 하는 복잡한 과제입니다. (사실 어느정도 타협을 해서 구현을 해도 된다고 생각하지만, 이 부분을 납득하지 못하는 평가자를 만나면 곤란해질 수 있습니다.)</p>
<p>구현 시 반드시 <a href="https://github.com/taeng42/norminette/blob/master/pdf/ko.norm.pdf">norminette 규칙</a>을 준수해야 하는데, 이는 코드의 가독성을 위한 것이고, 대표적인 예시는 다음과 같습니다.</p>
<ul>
<li>파일당 함수 5개 이하</li>
<li>함수당 코드 25줄 이하</li>
<li>한 줄당 80자 이하</li>
</ul>
<p>구현의 정확성을 위해 <a href="https://www.dii.uchile.cl/~daespino/files/Iso_C_1999_definition.pdf">ISO C99 표준 문서</a>의 285페이지를 참고했습니다. 자세한 내용은 코드와 함께 설명드리겠습니다.</p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>이 포스팅에서 makefile과 ar 명령어에 대한 설명은 생략하겠습니다.</p>
</div>
</div>
</div>
</section>
<section id="mandatory" class="level3">
<h3 class="anchored" data-anchor-id="mandatory">Mandatory</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/printf-man.png" class="img-fluid figure-img"></p>
<figcaption>Mandatory 요구 내용</figcaption>
</figure>
</div>
<p>허용 함수부터 보겠습니다.</p>
<ul>
<li>malloc</li>
<li>free</li>
<li>write</li>
<li>va_start, va_arg, va_copy, va_end</li>
</ul>
<p>buffer는 따로 구현하지 않을 예정이기 때문에 malloc과 free 함수는 사용하지 않았습니다.</p>
<p>이중 눈여겨볼 함수는 va_ … 함수들인데, 각각의 설명은 <a href="https://linux.die.net/man/3/va_start">이 문서</a>를 참조했습니다. 간단히 설명하자면 이런겁니다. (c언어 프로그램의 메모리 구조, buffer 설명)</p>
</section>
<section id="bonus" class="level3">
<h3 class="anchored" data-anchor-id="bonus">Bonus</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/printf-bonus.png" class="img-fluid figure-img"></p>
<figcaption>Bonus 요구 내용</figcaption>
</figure>
</div>
<p>flag에 대한 내용이 나옵니다. 이제 여기서부터 과제가 애매해지기 시작하는데, 구현 범위를 확실하게 정해야합니다. 그래야 undefined behavior가 발생시, 적절한 답변을 할 수 있습니다. 저는 ISO c99 문서를 기준으로 구현했습니다.</p>
<p>과제에서 제시한 flag들에 대한 설명이 나오는 부분을 한번 보겠습니다.</p>
</section>
</section>
<section id="코드-설명" class="level2">
<h2 class="anchored" data-anchor-id="코드-설명">코드 설명</h2>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>전체 코드는 <a href="https://github.com/cryscham123/my_printf">github repo</a>에서 확인 가능합니다.</p>
</div>
</div>
</div>
<p>header 먼저 살펴보도록 하겠습니다.<br>
변수명이 마음에 안들지만, 협업 경험이 전혀 없던 시기에 작성한 코드임을 감안해주시길 바랍니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb1-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#ifndef FT_PRINTF_H</span></span>
<span id="cb1-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># define FT_PRINTF_H</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*printf에서 사용할 함수들을 macro로 설정해주었습니다. */</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*이 당시엔 enum을 몰라서 이렇게 구현을 했습니다..*/</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># define F_WDTH </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span></span>
<span id="cb1-8"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># define F_PREC </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb1-9"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># define F_ZERO </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb1-10"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># define F_LEFT </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb1-11"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># define F_PLUS </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb1-12"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># define F_SHAP </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-13"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># define F_SPACE </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;stdarg.h&gt;</span></span>
<span id="cb1-16"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;unistd.h&gt;</span></span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*specifier 문자를 만났을 때, 어떻게 출력을 해야되는지에 대한 정보를 저장할 구조체입니다.*/</span></span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> s_info</span>
<span id="cb1-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-22">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>    flag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*이 변수에 flag 정보를 비트연산으로 저장합니다.*/</span></span>
<span id="cb1-23">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>             field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span> # 이건 뭐였지</span>
<span id="cb1-24">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>             cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*specifier 문자를 처리할 때, 출력하는 문자의 갯수를 저장합니다.*/</span></span>
<span id="cb1-25">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>            cmd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*어떤 specifier를 처리하는지 저장합니다.*/</span></span>
<span id="cb1-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>   t_info<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-27"></span>
<span id="cb1-28"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_printf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...);</span></span>
<span id="cb1-29"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-30"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_printstr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-31"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_putnum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-32"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_puthex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-33"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_max<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-34"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-35"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_precision<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-36"></span>
<span id="cb1-37"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif</span></span></code></pre></div>
<p>다음으로, ft_printf.c 파일의 함수들을 살펴보겠습니다.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb2-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_printf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...)</span></span>
<span id="cb2-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">va_list</span> ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>     cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>     tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-6"></span>
<span id="cb2-7">    va_start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> # 변수 초기화</span>
<span id="cb2-8">    cnt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\0</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'%'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> # format 문자를 만날 경우</span>
<span id="cb2-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-13">            s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb2-14">            tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ft_convert<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> # format 문자를 ft_convert 함수에서 처리해줍니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb2-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb2-17">            tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> write<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> # format 문자가 아닐 경우 그대로 출력합니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb2-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-19">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> # 출력에 실패하면 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>을 반환합니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span> 동적할당을 하지 않았기때문에 다른 조치는 취하지 않습니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb2-20">        cnt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> # 출력한 문자 갯수만큼 계속 저장해줍니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb2-21">        s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb2-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-23">    va_end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> # 최종적으로 출력에 성공한 문자의 갯수를 반환합니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb2-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*flag에 대한 정보를 먼저 처리해줍니다.*/</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*코드가 조금 특이하죠. 사실 norminette 때문에 이렇게 구현했습니다.*/</span></span>
<span id="cb3-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>  ft_convert<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">va_list</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-5">    t_info  i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>     tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-7"></span>
<span id="cb3-8">    i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> # 변수들을 초기화 해줍니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb3-9">    i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cnt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-10">    i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-11">    i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'#'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'+'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-14">        tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0!!1!!!!!!!2!3!!4"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)**</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb3-15">        i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb3-16">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)++;</span></span>
<span id="cb3-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'9'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb3-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-20">        tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-21">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-22">        i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>F_WDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'9'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-24">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-25">            i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-26">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)++;</span></span>
<span id="cb3-27">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-28">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_parse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb3-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb4-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> ft_flag_validate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_LEFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb4-4">        i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_PREC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb4-6">        i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_SPACE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_PLUS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb4-8">        i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>F_SPACE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*본격적으로 specifier를 처리해주는 로직입니다.*/</span></span>
<span id="cb4-12"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>  ft_parse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">va_list</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> status<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-15"></span>
<span id="cb4-16">    i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-17">    ft_flag_validate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-19">        status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>va_arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">size_t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'%'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-21">        status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'%'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-23">        status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ft_printstr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>va_arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'i'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-25">        status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ft_putnum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>va_arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'u'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-27">        status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ft_putnum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>va_arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'p'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-29">        status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ft_puthex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>va_arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb4-31">        status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ft_puthex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>va_arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> ft_padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>다음으로, parse.c 파일의 함수들을 입니다.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb5-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*이 로직은 아래에서 사용됩니다.*/</span></span>
<span id="cb5-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'!'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'%'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_LEFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb5-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-9">    i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb5-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>write<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb5-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-12"></span>
<span id="cb5-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_printstr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-15">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-16"></span>
<span id="cb5-17">    len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*printf에서는 null이 오면 (null)을 출력한다는 점을 바탕으로 작성했습니다.*/</span></span>
<span id="cb5-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_printstr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(null)"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb5-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_PREC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]))</span></span>
<span id="cb5-22">        len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb5-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_LEFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb5-24">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-25">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-26">    len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_PREC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]))</span></span>
<span id="cb5-28">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-29">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-30">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-31">        len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb5-32">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-34"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-35"></span>
<span id="cb5-36"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_putnum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-37"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> is_sign<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> is_put<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-40"></span>
<span id="cb5-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-42">        i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>F_PLUS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> F_SPACE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-43">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*norminette 때문에 삼항연산자를 쓸 수 없어서 아래와 같이 작성했습니다.*/</span></span>
<span id="cb5-44">    num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> </span>
<span id="cb5-45">    is_sign <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>F_PLUS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> F_SPACE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-46">    is_put <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> cur <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_PREC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb5-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-48">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-49">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"! !!+-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-50">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-51">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_LEFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb5-52">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ft_max<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cur <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> is_put<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> is_sign<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-53">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-54">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"! !!+-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-55">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-56">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_PREC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb5-57">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_precision<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb5-58">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb5-59">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-60">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_putnum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cur <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-61">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-62">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-63"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-64"></span>
<span id="cb5-65"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_puthex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-66"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-67">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>    s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-68">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>     is_sign<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-69"></span>
<span id="cb5-70">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* %x나 %p specifier의 경우 소문자로 출력 */</span></span>
<span id="cb5-71">    s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0123456789ABCDEF"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'p'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-72">    is_sign <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'p'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!(</span>cur <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-73">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-74">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-75">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> is_sign <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-76">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xX"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'X'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-77">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-78">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_LEFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb5-79">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ft_max<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cur <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> is_sign<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-80">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-81">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> is_sign <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-82">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xX"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'X'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-83">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-84">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_PREC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb5-85">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_precision<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb5-86">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb5-87">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-88">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_puthex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cur <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-89">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-90">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-91"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>마지막으로 flag_utils.c 함수입니다.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb6-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">"ft_printf.h"</span></span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_max<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-9"></span>
<span id="cb6-10"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>    padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-13"></span>
<span id="cb6-14">    padding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-16">        padding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_WDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span></span>
<span id="cb6-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>write<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-20">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-21">        i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-22">        n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-26"></span>
<span id="cb6-27"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_precision<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-28"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_PREC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-32">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-34">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-35">        n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-36">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb6-38"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="결과" class="level2">
<h2 class="anchored" data-anchor-id="결과">결과</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/printf-score.png" class="img-fluid figure-img"></p>
<figcaption>최종 점수</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-13-20-07-29.png" class="img-fluid figure-img"></p>
<figcaption>최종 평가</figcaption>
</figure>
</div>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">Outro</h2>
<p>C언어의 깊이 있는 매력을 경험할 수 있었던 과제라고 생각합니다. 특히 프로그램의 메모리 구조를 이해하는 과정에서 많은 것을 배울 수 있었습니다. 과제 구현의 범위가 난해하고, norminette을 지키는 것 때문에 어려움이 조금 있었지만, 그래도 흥미롭게 했던걸로 기억합니다.</p>
<p>사실 솔직히 말하면 제가 제출한 코드는 norminette을 아주 완벽하게 위반하고 있습니다. norminette에서는 한 줄에 여러 동작을 하는 코드를 작성하지 말라고 나와있는데, 뭐..네 그렇습니다. 그래도 소설로 비유하면 가끔은 비유법과 은유법이 들어가줘야 재미가 있는것 아니겠습니까? 남들이 조금 못 알아보면 어떻습니까? 가끔은 이런 재미있는 코드도 존재해야 발전이라는게 있는거죠.</p>
<p>..농담이고 협업할때는 절대 이렇게 코드를 작성하지 않습니다. 어쨌든 긴 글 읽어주셔서 감사합니다!</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>printf</category>
  <category>c</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/0.html</guid>
  <pubDate>Sat, 11 Jan 2025 15:00:00 GMT</pubDate>
</item>
</channel>
</rss>
