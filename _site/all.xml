<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>김형훈의 학습 블로그</title>
<link>https://cryscham123.github.io/all.html</link>
<atom:link href="https://cryscham123.github.io/all.xml" rel="self" type="application/rss+xml"/>
<description>안녕하세요. 김형훈의 학습 블로그 입니다.</description>
<image>
<url>https://cryscham123.github.io/profile.jpg</url>
<title>김형훈의 학습 블로그</title>
<link>https://cryscham123.github.io/all.html</link>
</image>
<generator>quarto-1.5.56</generator>
<lastBuildDate>Fri, 14 Feb 2025 15:00:00 GMT</lastBuildDate>
<item>
  <title>상관 분석</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/통계/04.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="피어슨-상관계수" class="level2">
<h2 class="anchored" data-anchor-id="피어슨-상관계수">피어슨 상관계수</h2>
<ul>
<li>정규성의 가정 필요</li>
</ul>
</section>
<section id="스피어만-상관계수" class="level2">
<h2 class="anchored" data-anchor-id="스피어만-상관계수">스피어만 상관계수</h2>
<ul>
<li>이상치에 덜 민감</li>
</ul>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>통계</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/통계/04.html</guid>
  <pubDate>Fri, 14 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>4 - 데이터 마트</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/09.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="데이터-변경-및-요약" class="level2">
<h2 class="anchored" data-anchor-id="데이터-변경-및-요약">데이터 변경 및 요약</h2>
<ul>
<li>요약 변수: 전체적 특성을 대표하여 aggregate한 변수. 제활용성이 높다.</li>
<li>파생 변수: 기존 데이터를 변환, 조합, 계산하여 새롭게 만든 변수. 주관이 개입될 수 있다.</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-15-17-57-29.png" class="img-fluid figure-img"></p>
<figcaption>요약 변수 예시</figcaption>
</figure>
</div>
<section id="reshape-패키지-활용" class="level3">
<h3 class="anchored" data-anchor-id="reshape-패키지-활용">1. reshape 패키지 활용</h3>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-15-18-03-54.png" class="img-fluid"></p>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>adp</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/09.html</guid>
  <pubDate>Fri, 14 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Terraform Cloud</title>
  <link>https://cryscham123.github.io/posts/02_areas/terraform/notes/tfc/00.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="what-is-terraform-cloud" class="level2">
<h2 class="anchored" data-anchor-id="what-is-terraform-cloud">What is Terraform Cloud?</h2>
<ul>
<li>Terraform Open-Source를 확장해주는 서비스</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/terraform/notes/tfc/img/2025-02-11-16-04-51.png" class="img-fluid figure-img"></p>
<figcaption>Terraform Open-Source의 한계</figcaption>
</figure>
</div>
<ul>
<li><p>기존의 terraform을 대규모 팀 단위에서 사용하기엔 무리가 있음 → TFC</p></li>
<li><p>on-premise 환경을 위한 Terraform Enterpise 서비스도 존재함.</p></li>
<li><p>TACOS: Terraform Automation &amp; Collaboration Software</p></li>
</ul>
</section>
<section id="what-is-organization" class="level2">
<h2 class="anchored" data-anchor-id="what-is-organization">What is Organization?</h2>
<ul>
<li>workspaces, policies, terraform modules를 공유하는 공간</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/terraform/notes/tfc/img/2025-02-11-16-38-44.png" class="img-fluid figure-img"></p>
<figcaption>Organization level에서 모든 setting이 이루어짐</figcaption>
</figure>
</div>
<ul>
<li>하나의 조직을 운용하는 것이 일반적이나, 조직 구조에 따라 여러 조직을 생성해서 운용할 수 있다.</li>
</ul>
</section>
<section id="authenticating-to-tfc" class="level2">
<h2 class="anchored" data-anchor-id="authenticating-to-tfc">Authenticating to TFC</h2>
<ol type="1">
<li>web interface</li>
<li>CLI</li>
</ol>
<section id="token" class="level3">
<h3 class="anchored" data-anchor-id="token">Token</h3>
<ul>
<li>User Tokens</li>
<li>Team Tokens: CI/CD pipeline에 주로 사용됨</li>
<li>Organization Tokens</li>
</ul>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>terraform</category>
  <category>terraform cloud</category>
  <category>devops</category>
  <category>IaC</category>
  <guid>https://cryscham123.github.io/posts/02_areas/terraform/notes/tfc/00.html</guid>
  <pubDate>Mon, 10 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>5 - 시각화 인사이트 프로세스</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/13.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="시각화-인사이트-프로세스의-의미" class="level2">
<h2 class="anchored" data-anchor-id="시각화-인사이트-프로세스의-의미">시각화 인사이트 프로세스의 의미</h2>
<section id="인사이트란-무엇인가" class="level3">
<h3 class="anchored" data-anchor-id="인사이트란-무엇인가">1. 인사이트란 무엇인가</h3>
<p>상위 개념을 발견하기 위해, 각 단계의 관계를 이해해야 한다.</p>
<p>이를 위해 시각화 인사이트 방법이 필요하다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-11-13-16-53.png" class="img-fluid figure-img"></p>
<figcaption>DIKW 피라미드와 시각화 관계</figcaption>
</figure>
</div>
</section>
<section id="시각화와-인사이트" class="level3">
<h3 class="anchored" data-anchor-id="시각화와-인사이트">2. 시각화와 인사이트</h3>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-11-13-19-27.png" class="img-fluid"></p>
</section>
</section>
<section id="탐색" class="level2">
<h2 class="anchored" data-anchor-id="탐색">탐색</h2>
<ul>
<li>상위 개념을 발견하기 위해, 각 단계의 관계를 이해하는 과정</li>
<li>객관적인 패턴을 찾는 용도</li>
</ul>
<section id="사용-가능한-데이터-확인" class="level3">
<h3 class="anchored" data-anchor-id="사용-가능한-데이터-확인">1. 사용 가능한 데이터 확인</h3>
<ol type="1">
<li>데이터 접근
<ul>
<li><code>이벤트 기록</code>으로서 접근: 데이터로부터 통찰을 이끌어 내기 위해서 <code>데이터 생성 원리를 파악</code>해야 한다고 간주</li>
<li><code>객체지향 관점</code>에서의 접근: 데이터로부터 통찰을 이끌어 내기 위해서 <code>전체 구조를 파악</code>해야 한다고 간주</li>
</ul></li>
<li>데이터 명세화
<ul>
<li>모든 데이터는 하나 이상의 <code>차원</code>과 <code>측정값</code>을 가지고 있다.</li>
<li>이는 분석 형태에 따라, 차원이 될 수도 있고, 측정값이 될 수도 있다.</li>
</ul></li>
</ol>
</section>
<section id="연결-고리의-확인" class="level3">
<h3 class="anchored" data-anchor-id="연결-고리의-확인">2. 연결 고리의 확인</h3>
<p><code>데이터 명세서</code>를 이용해 2개 이상의 데이터간 연결 고리를 확인해 봄</p>
<ol type="1">
<li><code>공통 요소 찾기</code></li>
<li><code>공통 요소로 변환하기</code>: 데이터 타입이 달라도 공통 요소로 묶을 수 있다 (더 자세한 데이터를 덜 자세한 데이터로 변환. <code>반대는 불가</code>)
<ul>
<li>시간 데이터의 변환</li>
<li>공간 데이터의 변환(지오코딩, 코로플레스 지도, X-Ray Map 사용 가능)</li>
<li>계층 관계 변환: 상위 수준(덜 자세한)이라는 공통 요소로 변환. replace, lookup, vlookup 함수 사용 가능</li>
</ul></li>
<li><code>탐색 범위 설정</code>: 차원과 측정값의 전체 조합 종류가 탐색 범위가 됨. 데이터를 구성하는 항목이 늘어날 수록 탐색 범위가 늘어남
<ol type="1">
<li>여러 데이터를 보유한 경우, 개별 데이터 안에서 먼저 탐색</li>
<li>측정값 하나의 차원만 연결해 탐색</li>
<li>같은 데이터 안에서 차원과 측정값을 맞바꾸면 다른 통찰을 얻을 수 있음</li>
<li>어떤 통찰을 얻기 위해 비주얼 인사이트 프로세스를 사용하는 것인지 살펴본 후, 목표와 관련 있을 법한 조합을 만듦</li>
<li>상식적으로 의미나 연계성이 없는 조합은 배제</li>
</ol></li>
</ol>
</section>
<section id="관계의-탐색" class="level3">
<h3 class="anchored" data-anchor-id="관계의-탐색">3. 관계의 탐색</h3>
<p>상관관계와 인과관계를 탐색</p>
<ol type="1">
<li><code>이상값 처리</code>: 시각화 도구를 통해 전체 구조를 파악한 후 처리</li>
<li><code>차원과 측정값 유형에 따른 관계 파악 시각화</code>
<ol type="1">
<li>시각화 도구 선정</li>
<li>시간 데이터에서의 관계 파악: <code>구글 모션차트</code> 사용 가능</li>
<li>공간 데이터에서의 관계 파악: <code>Arc GIS</code>, <code>X-Ray Map</code>, <code>파워 맵</code> 사용 가능</li>
<li>비정형 데이터에서의 관계 파악
<ul>
<li><code>워들</code>: 주어진 텍스트에서 형태소 단위를 추출(NLP)해 빈도에 따라 시각화</li>
</ul></li>
</ol></li>
<li><code>잘라보고 달리보기</code>: 둘 이상의 차원과 측정값으로 이루어진 데이터를 여러 관점으로 살펴본다.
<ul>
<li><code>잘라보기(slice)</code>: ex) 연령별, 성별 평균 체중 데이터 → 20세 이상, 40세 미만 남성들의 체중 패턴</li>
<li><code>달리보기(dice)</code>: ex) 연령별, 성별 평균 체중 데이터 → 남성의 연령별 체중 패턴, 여성의 연령별 체중 패턴</li>
<li>MS excel의 <code>pivot</code>, <code>powerview</code>, spreadsheet의 <code>pivot table report</code> 사용 가능</li>
</ul></li>
<li><code>내려다보고 올려보기</code>
<ul>
<li><code>내려다보기(Drill Down)</code>: 데이터를 하위 계층으로 세분화한다.</li>
<li><code>올려보기(Reverse Driil Down)</code>: 데이터를 상위 계층으로 통합한다.</li>
<li>Tree map, Hyperbolic Tree</li>
</ul></li>
<li><code>척도의 조정</code>: <code>스파크라인 차트</code> 사용 가능</li>
</ol>
</section>
</section>
<section id="분석" class="level2">
<h2 class="anchored" data-anchor-id="분석">분석</h2>
<ul>
<li>탐색을 통해 발견된 패턴을 분석하는 과정</li>
</ul>
<section id="분석-대상의-구체화" class="level3">
<h3 class="anchored" data-anchor-id="분석-대상의-구체화">1. 분석 대상의 구체화</h3>
<ol type="1">
<li>2차 탐색: 관계들의 분석 우선순위 결정. 궁극적인 목표는 그냥 다시 한 번 더 검토하는 것</li>
<li>분석 목표에 따른 분석 기법</li>
</ol>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-11-15-12-23.png" class="img-fluid"> <img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-11-15-23-43.png" class="img-fluid"></p>
</section>
<section id="분석-시각화-도구" class="level3">
<h3 class="anchored" data-anchor-id="분석-시각화-도구">2. 분석 시각화 도구</h3>
<p>통계적 도구와 시각적 도구는 상호보완 관계</p>
</section>
<section id="지표-설정과-분석" class="level3">
<h3 class="anchored" data-anchor-id="지표-설정과-분석">3. 지표 설정과 분석</h3>
<ul>
<li>지표: 어떤 현상의 강도를 평가하는 기준이 되는 수치
<ul>
<li>ex) <code>KPI(Key Performance Indicator)</code>: 핵심 성과 지표. 목표 달성을 위한 세부적인 활동 결과물의 추진 정도나 수준을 측정하고 평가</li>
<li>주로 함수식 구조를 가짐 (ex. <code>매출액 = 판매단가 * 판매량</code>)</li>
<li>요인 분석(factor analysis)를 통해 지표가 다른 요인과 설명력이 겹치는지 여부 확인할 수 있다.</li>
<li>어떤 변화요인에 의해 지표의 흐름에 영향을 미쳤는지 파악하기 어렵다는 단점이 있다.</li>
</ul></li>
</ul>
</section>
</section>
<section id="활용" class="level2">
<h2 class="anchored" data-anchor-id="활용">활용</h2>
<ul>
<li>도출한 인사이트를 활용하는 과정</li>
</ul>
<section id="내부에서-적용" class="level3">
<h3 class="anchored" data-anchor-id="내부에서-적용">1. 내부에서 적용</h3>
<ol type="1">
<li>기존 문제 해결 방식이나 설명 모델의 수정</li>
<li>새로운 문제 해결 방식의 도입</li>
<li>새롭게 발견한 가능성에 대한 구체적인 탐색과 발전</li>
</ol>
</section>
<section id="외부에-대한-설명-설득과-시각화-도구" class="level3">
<h3 class="anchored" data-anchor-id="외부에-대한-설명-설득과-시각화-도구">2. 외부에 대한 설명, 설득과 시각화 도구</h3>
<p>설득이 필요하기 때문에 스토리텔링이 감미된 시각화 자료나, 인터렉티브 인포그래픽 활용</p>
</section>
<section id="인사이트의-발전과-확장" class="level3">
<h3 class="anchored" data-anchor-id="인사이트의-발전과-확장">3. 인사이트의 발전과 확장</h3>
<p>계속 잘 검토해 나가야함</p>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>adp</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/13.html</guid>
  <pubDate>Mon, 10 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>5 - 시각화 디자인</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/14.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="시각화의-정의" class="level2">
<h2 class="anchored" data-anchor-id="시각화의-정의">시각화의 정의</h2>
<section id="데이터-시각화의-중요성" class="level3">
<h3 class="anchored" data-anchor-id="데이터-시각화의-중요성">1. 데이터 시각화의 중요성</h3>
<p>데이터 시각화의 목적은 데이터 분석과 의사소통</p>
</section>
<section id="시각-이해와-시각화" class="level3">
<h3 class="anchored" data-anchor-id="시각-이해와-시각화">2. 시각 이해와 시각화</h3>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-11-17-11-53.png" class="img-fluid"></p>
<ul>
<li>데이터: 디자인의 대상이 될 수 없음</li>
<li>정보
<ul>
<li>데이터가 의미를 전달하기위한 형태를 가짐</li>
<li>자기조직화 되지 않은 일반적인 의미를 가지고 있고, 생산자와 사용자의 관점에 따라 다르게 전달될 수 있다.</li>
</ul></li>
<li>지식: 다른 영역의 정보가 <code>자기조직화된 형태</code></li>
<li>지혜: 지식이 내면화되어 개인적 맥락에 포함된 형태. 명시적으로 상대에게 전달하기 어려움</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-11-17-18-04.png" class="img-fluid figure-img"></p>
<figcaption>정보 인터랙션 디자인(사진좀 보이게 올려둬라 좀..)</figcaption>
</figure>
</div>
</section>
<section id="시각화-분류와-구분" class="level3">
<h3 class="anchored" data-anchor-id="시각화-분류와-구분">3. 시각화 분류와 구분</h3>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-11-17-30-22.png" class="img-fluid"></p>
<ol type="1">
<li>데이터 시각화</li>
<li>정보 시각화</li>
<li>정보 디자인 <img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-11-17-24-05.png" class="img-fluid">
<ul>
<li>데이터 시각화, 정보 시각화, 인포그래픽도 정보 디자인의 범위에 속한다고 볼 수 있다.</li>
<li>대표적인 예시로 <code>나폴레옹 행군 다이어그램</code>, <code>나이팅게일 폴라 지역 다이어그램</code>이 있다.</li>
</ul></li>
<li>인포그래픽(뉴스 그래픽): 중요한 정보를 한 장의 그래픽으로 표현한 것. 원 데이터는 취급 안함.
<ul>
<li>정보형 메세지: 객관적인 정보를 전달하는데 목적을 둠. 대표적인 예시: 워싱턴 지하철 지도</li>
<li>설득형 메세지: 대충 포스터 생각하면 됨</li>
</ul></li>
</ol>
</section>
</section>
<section id="시각화-프로세스" class="level2">
<h2 class="anchored" data-anchor-id="시각화-프로세스">시각화 프로세스</h2>
<section id="정보-디자인-프로세스" class="level3">
<h3 class="anchored" data-anchor-id="정보-디자인-프로세스">1. 정보 디자인 프로세스</h3>
</section>
<section id="빅데이터-시각화-프로세스" class="level3">
<h3 class="anchored" data-anchor-id="빅데이터-시각화-프로세스">2. 빅데이터 시각화 프로세스</h3>
</section>
</section>
<section id="시각화-방법" class="level2">
<h2 class="anchored" data-anchor-id="시각화-방법">시각화 방법</h2>
<section id="시각화-방법의-개념" class="level3">
<h3 class="anchored" data-anchor-id="시각화-방법의-개념">1. 시각화 방법의 개념</h3>
</section>
<section id="정보-구조화" class="level3">
<h3 class="anchored" data-anchor-id="정보-구조화">2. 정보 구조화</h3>
</section>
<section id="정보-시각화" class="level3">
<h3 class="anchored" data-anchor-id="정보-시각화">3. 정보 시각화</h3>
</section>
<section id="정보-시각-표현" class="level3">
<h3 class="anchored" data-anchor-id="정보-시각-표현">4. 정보 시각 표현</h3>
</section>
</section>
<section id="빅데이터-시각화-디자인" class="level2">
<h2 class="anchored" data-anchor-id="빅데이터-시각화-디자인">빅데이터 시각화 디자인</h2>
<section id="빅데이터와-시각화-이슈" class="level3">
<h3 class="anchored" data-anchor-id="빅데이터와-시각화-이슈">1. 빅데이터와 시각화 이슈</h3>
</section>
<section id="빅데이터와-시각화-디자인-사례" class="level3">
<h3 class="anchored" data-anchor-id="빅데이터와-시각화-디자인-사례">2. 빅데이터와 시각화 디자인 사례</h3>
</section>
<section id="빅데이터와-시각화-디자인의-방향" class="level3">
<h3 class="anchored" data-anchor-id="빅데이터와-시각화-디자인의-방향">3. 빅데이터와 시각화 디자인의 방향</h3>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>adp</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/14.html</guid>
  <pubDate>Mon, 10 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>분산 분석</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/통계/03.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<p>비교 집단이 2개보다 많은 경우 단순히 t-test를 여러번 하면 1종 오류에 빠져서 안됨.</p>
<section id="one-way-anova" class="level2">
<h2 class="anchored" data-anchor-id="one-way-anova">One-way Anova</h2>
<p>독립변수가 하나일 때, 3개 이상의 집단 간 평균 차이를 비교하는 방법 - 종속변수: 연속형만 가능 - 독립변수: 이산/범주형 변수만 가능</p>
</section>
<section id="f-value" class="level2">
<h2 class="anchored" data-anchor-id="f-value">F-value</h2>
<p>2개의 분산의 비율. 전체 평균과 그룹의 평균이 필요함</p>
<ul>
<li>그룹 간 변동(between variance, df1, treatment): 전체 평균과 그룹 내 데이터들의 평균과의 차이.
<ul>
<li>자유도: 그룹의 수 - 1</li>
</ul></li>
<li>그룹 내 변동(within variance, df2, error): 그룹 내 데이터들의 평균과 그룹 내 데이터들의 차이
<ul>
<li>자유도: 전체 데이터 수 - 그룹의 수</li>
</ul></li>
</ul>
<p>between variance &gt; within variance = 적어도 어느 한 그룹이 통계적으로 유의미한 차이가 있다. → 어떤 그룹이 유의미한지는 알 수 없음 → 사후검정</p>
<section id="사후검정post-hoc-test" class="level3">
<h3 class="anchored" data-anchor-id="사후검정post-hoc-test">사후검정(Post Hoc Test)</h3>
<ul>
<li><strong>Tukey HSD</strong>: 모든 집단을 두 개씩 비교하는 방법</li>
<li><strong>Bonferroni</strong>: 모든 집단을 한 번씩 비교하는 방법</li>
</ul>
<p>등등..</p>
</section>
</section>
<section id="two-way-anova" class="level2">
<h2 class="anchored" data-anchor-id="two-way-anova">Two-way Anova</h2>
<p>독립변수가 2개일 때, 종속변수의 평균값이 독립변수의 수준에 따라 유의한 차이가 있는지 검정하는 방법이다.</p>
<ul>
<li>main effect: 각 독립변수의 수준에 따른 종속변수의 평균값 차이</li>
<li>interaction effect: 한 독립변수의 종속변수에 대한 영향이 다른 독립변수의 수준에 따라 달라지는지</li>
</ul>
<p>main effect f-value 2개, interaction effect f-value 1개를 구한다. df = <img src="https://latex.codecogs.com/png.latex?k_n%20-%201">, interaction df = <img src="https://latex.codecogs.com/png.latex?(k_1%20-%201)(k_2%20-%201)"></p>
<p>between variance는 1개만 있으면 됨. df = <img src="https://latex.codecogs.com/png.latex?(r-1)k_1k_2"></p>
</section>
<section id="공분산-분석" class="level2">
<h2 class="anchored" data-anchor-id="공분산-분석">공분산 분석</h2>
<p>분산 분석에 공변량을 추가한것</p>
<p>공변량: control 변수</p>
</section>
<section id="반복측정-분산분석" class="level2">
<h2 class="anchored" data-anchor-id="반복측정-분산분석">반복측정 분산분석</h2>
<p>동일한 대상에 대해 여러번 측정한 경우</p>
</section>
<section id="다변량-분산분석" class="level2">
<h2 class="anchored" data-anchor-id="다변량-분산분석">다변량 분산분석</h2>
<p>2개 이상의 종속변수가 있을 경우 집단별 차이를 검정</p>
</section>
<section id="카이제곱-검정" class="level2">
<h2 class="anchored" data-anchor-id="카이제곱-검정">카이제곱 검정</h2>
<p>범주형 변수 간 관련성이 모집단에 존재하는지 검정</p>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/통계/img/2025-02-15-13-03-09.png" class="img-fluid"></p>
<ul>
<li><p>관측빈도: 관측값</p></li>
<li><p>기대빈도</p></li>
<li><p>자유도: (r - 1)(c - 1)</p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?X%5E2%20=%20%5Csum%20%5Cfrac%7B(O%20-%20E)%5E2%7D%7BE%7D"></p></li>
<li><p>독립성 검정: 두 범주형 변수가 서로 독립인지 검정</p></li>
<li><p>적합성 검정: 범주형 변수가 하나일 때 범주별 비율 분포에 대한 가설 검정</p></li>
</ul>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>통계</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/통계/03.html</guid>
  <pubDate>Sun, 09 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>3 - 분석 마스터 플랜</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/06.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="마스터-플랜-수립-프레임-워크" class="level2">
<h2 class="anchored" data-anchor-id="마스터-플랜-수립-프레임-워크">마스터 플랜 수립 프레임 워크</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://snipboard.io/1QG6Di.jpg" class="img-fluid figure-img"></p>
<figcaption>마스터 플랜 수립 개요</figcaption>
</figure>
</div>
<section id="수행-과제-도출-및-우선순위-평가" class="level3">
<h3 class="anchored" data-anchor-id="수행-과제-도출-및-우선순위-평가">2. 수행 과제 도출 및 우선순위 평가</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-16-11-37-03.png" class="img-fluid figure-img"></p>
<figcaption>일반적인 IT 프로젝트 우선순위 평가</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-16-11-41-10.png" class="img-fluid figure-img"></p>
<figcaption>ROI 관점</figcaption>
</figure>
</div>
<p>위 기준에 따라 시급성과 난이도를 평가한 후, 아래 그림에 맞게 우선순위를 정한다.</p>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-16-11-40-05.png" class="img-fluid"></p>
<p>우선순위 기준을 시급성에 둔다면, 3 → 4 → 2 순, 난이도에 둔다면 3 → 1 → 2 순으로 우선순위를 정한다.</p>
</section>
<section id="이행계획-수립" class="level3">
<h3 class="anchored" data-anchor-id="이행계획-수립">3. 이행계획 수립</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-16-11-45-08.png" class="img-fluid figure-img"></p>
<figcaption>로드맵 수립</figcaption>
</figure>
</div>
<ol start="2" type="1">
<li>세부 이행계획 수립</li>
</ol>
</section>
</section>
<section id="분석-거버넌스-체계-수립" class="level2">
<h2 class="anchored" data-anchor-id="분석-거버넌스-체계-수립">분석 거버넌스 체계 수립</h2>
<section id="거버넌스-체계" class="level3">
<h3 class="anchored" data-anchor-id="거버넌스-체계">1. 거버넌스 체계</h3>
<p><img src="https://snipboard.io/jfIe4Y.jpg" class="img-fluid"></p>
</section>
<section id="데이터-분석-수준진단" class="level3">
<h3 class="anchored" data-anchor-id="데이터-분석-수준진단">2. 데이터 분석 수준진단</h3>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-16-11-48-12.png" class="img-fluid"></p>
<ol type="1">
<li>분석 준비도</li>
</ol>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-16-11-50-17.png" class="img-fluid"></p>
<ol start="2" type="1">
<li>분석 성숙도</li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-16-11-49-42.png" class="img-fluid figure-img"></p>
<figcaption>CMMI(Capability Maturity Model Integration)</figcaption>
</figure>
</div>
<p>분석 준비도와 성숙도를 통해 현재 분석 수준을 파악한다. 이후 아래의 그림에 맞춰 목표 방향을 설정한다.</p>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-16-11-51-00.png" class="img-fluid"></p>
</section>
<section id="데이터-거버넌스-체계-수립" class="level3">
<h3 class="anchored" data-anchor-id="데이터-거버넌스-체계-수립">4. 데이터 거버넌스 체계 수립</h3>
<ul>
<li>구성 요소:
<ul>
<li>원칙</li>
<li>조직</li>
<li>프로세스</li>
</ul></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-16-12-43-28.png" class="img-fluid figure-img"></p>
<figcaption>체계</figcaption>
</figure>
</div>
<ul>
<li>데이터 표준화:</li>
<li>데이터 관리 체계:</li>
<li>레포지토리:</li>
<li>표준화 활동:</li>
</ul>
</section>
<section id="데이터-조직-및-인력방안-수립" class="level3">
<h3 class="anchored" data-anchor-id="데이터-조직-및-인력방안-수립">5. 데이터 조직 및 인력방안 수립</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-16-12-45-18.png" class="img-fluid figure-img"></p>
<figcaption>분석 조직 구조</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-16-12-46-05.png" class="img-fluid figure-img"></p>
<figcaption>분석 조직 인력 구성</figcaption>
</figure>
</div>
</section>
<section id="분석과제-관리-프로세스-수립" class="level3">
<h3 class="anchored" data-anchor-id="분석과제-관리-프로세스-수립">6. 분석과제 관리 프로세스 수립</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-16-12-48-12.png" class="img-fluid figure-img"></p>
<figcaption>분석 과제 관리 프로세스</figcaption>
</figure>
</div>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>adp</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/06.html</guid>
  <pubDate>Sun, 09 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>3 - 데이터 분석 기획의 이해</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/05.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="분석-과제-발굴" class="level2">
<h2 class="anchored" data-anchor-id="분석-과제-발굴">분석 과제 발굴</h2>
<ul>
<li>풀어야 할 다양한 문제를 데이터 분석 문제로 변환 후, 프로젝트를 수행할 수 있는 <code>과제 정의서 형태</code>로 도출</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://snipboard.io/3ioLEq.jpg" class="img-fluid figure-img"></p>
<figcaption>도출을 위한 접근 방법</figcaption>
</figure>
</div>
<p>최적의 의사결정은 두 접근 방식이 상호 보완 관계에 있을 때 가능하다.</p>
<p><img src="https://snipboard.io/V036c7.jpg" class="img-fluid"></p>
<section id="하향식-접근법" class="level3">
<h3 class="anchored" data-anchor-id="하향식-접근법">1. 하향식 접근법</h3>
<ul>
<li>사물을 <code>why</code> 관점에서 보는 방식</li>
</ul>
<p><img src="https://snipboard.io/6PJ1Tv.jpg" class="img-fluid"></p>
<ol type="1">
<li><code>문제 탐색</code>: 문제를 해결함으로써 발생하는 가치에 중점
<ul>
<li>비즈니스 모델기반</li>
<li>분석 기회 발굴의 범위 확장</li>
<li>외부참조 모델 기반</li>
<li>분석 유즈 케이스</li>
</ul></li>
<li><code>문제 정의</code>: 식별된 비즈니스 문제를 데이터의 문제로 변환</li>
<li><code>해결방안 탐색</code>: 분석 역량과, 분석 기법 및 시스템 존재 여부를 고려한다.</li>
<li><code>타당성 검토</code>
<ul>
<li>경제적 타당성: 비용대비 편익 분석 관점의 접근</li>
<li>데이터 및 기술적 타당성</li>
</ul></li>
</ol>
</section>
<section id="상향식-접근법" class="level3">
<h3 class="anchored" data-anchor-id="상향식-접근법">2. 상향식 접근법</h3>
<ul>
<li>사물을 <code>what</code> 관점에서 보는 방식</li>
</ul>
<ol type="1">
<li>비지도 학습</li>
<li>지도 학습</li>
</ol>
<ul>
<li>프로토타이핑 접근법</li>
</ul>
</section>
</section>
<section id="분석-기획-방향성-도출" class="level2">
<h2 class="anchored" data-anchor-id="분석-기획-방향성-도출">분석 기획 방향성 도출</h2>
<section id="분석기획의-특징" class="level3">
<h3 class="anchored" data-anchor-id="분석기획의-특징">1. 분석기획의 특징</h3>
<ul>
<li><code>과제를 발굴, 정의</code>하고 의도했던 <code>결과를 도출</code>할 수 있도록 적절하게 <code>관리</code>할 수 있는 방안을 <code>사전에 계획</code>하는 일련의 작업 (말 그대로 기획)</li>
</ul>
</section>
<section id="목표-시점-별-분석-기획-방안" class="level3">
<h3 class="anchored" data-anchor-id="목표-시점-별-분석-기획-방안">3. 목표 시점 별 분석 기획 방안</h3>
<p><img src="https://snipboard.io/lTz3GL.jpg" class="img-fluid"></p>
</section>
<section id="분석-기획시-고려사항" class="level3">
<h3 class="anchored" data-anchor-id="분석-기획시-고려사항">4. 분석 기획시 고려사항</h3>
<ol type="1">
<li>가용 데이터</li>
<li>적절한 활용방안과 유즈케이스</li>
<li>장애요소들에 대한 사전계획 수립</li>
</ol>
</section>
</section>
<section id="분석-방법론" class="level2">
<h2 class="anchored" data-anchor-id="분석-방법론">분석 방법론</h2>
<ul>
<li>방법론은 <code>절차</code>, <code>방법</code>, <code>도구와 기법</code>, <code>템플릿과 산출물</code>로 구성된다.</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://snipboard.io/vUNEwc.jpg" class="img-fluid figure-img"></p>
<figcaption>방법론 절차의 구성 요소</figcaption>
</figure>
</div>
<ol type="1">
<li>폭포수 모델</li>
<li>프로토타입 모델</li>
<li>나선형 모델</li>
</ol>
<section id="kdd-분석-방법론" class="level3">
<h3 class="anchored" data-anchor-id="kdd-분석-방법론">1. KDD 분석 방법론</h3>
<ol start="0" type="1">
<li><code>비즈니스 도메인에 대한 이해</code>, <code>프로젝트 목표 설정</code></li>
<li>데이터셋 선택</li>
<li>데이터 전처리: 잡음, 이상치, 결측치 처리. 추가로 요구되는 데이터 셋이 필요한 경우, 데이터 선택 프로세스로 돌아감</li>
<li>데이터 변환: 데이터 차원 축소, 학습용 데이터, 시험용 데이터 분리</li>
<li>데이터 마이닝</li>
<li>데이터 마이닝 결과 평가</li>
</ol>
</section>
<section id="crisp-dm-분석-방법론" class="level3">
<h3 class="anchored" data-anchor-id="crisp-dm-분석-방법론">2. CRISP-DM 분석 방법론</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://snipboard.io/2FLwYE.jpg" class="img-fluid figure-img"></p>
<figcaption>CRISP-DM 4레벨 구조</figcaption>
</figure>
</div>
<p>Generic Tasks 예시: 데이터 정제</p>
<p>Specialized Tass 예시: 범주형 데이터 정제, 연속형 데이터 정제</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://snipboard.io/mO2Lqn.jpg" class="img-fluid figure-img"></p>
<figcaption>CRISP-DM 6Phase</figcaption>
</figure>
</div>
<ol type="1">
<li>업무 이해</li>
<li>데이터 이해: 데이터셋 선택, 데이터 전처리</li>
<li>데이터 준비: 데이터 변환</li>
<li>모델링: <code>모델 평가</code></li>
<li>평가: <code>모델 적용성 평가</code></li>
<li>전개</li>
</ol>
</section>
<section id="빅데이터-분석-방법론" class="level3">
<h3 class="anchored" data-anchor-id="빅데이터-분석-방법론">3. 빅데이터 분석 방법론</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://snipboard.io/6gVW9o.jpg" class="img-fluid figure-img"></p>
<figcaption>빅데이터 분석 방법론의 5단계</figcaption>
</figure>
</div>
<ol type="1">
<li>분석 기획
<ol type="1">
<li>비즈니스 이해 및 범위 설정</li>
<li>프로젝트 정의 및 계획 수립 → SOW</li>
<li>프로젝트 위험 계획 수립 → 회피, 전이, 완화, 수용</li>
</ol></li>
<li>데이터 준비
<ol type="1">
<li>필요 데이터 정의</li>
<li>데이터 스토어 설계</li>
<li>데이터 수집 및 정합성 점검</li>
</ol></li>
<li>데이터 분석
<ol type="1">
<li>분석 데이터 준비</li>
<li>텍스트 분석</li>
<li>탐색적 분석</li>
<li>모델링 → 훈련용, 테스트용 데이터 분리</li>
<li>모델 평가</li>
</ol></li>
<li>시스템 구현</li>
<li>평가 및 전개</li>
</ol>
</section>
</section>
<section id="분석-프로젝트-관리-방안" class="level2">
<h2 class="anchored" data-anchor-id="분석-프로젝트-관리-방안">분석 프로젝트 관리 방안</h2>
<section id="분석과제-관리를-위한-5가지-주요-영역" class="level3">
<h3 class="anchored" data-anchor-id="분석과제-관리를-위한-5가지-주요-영역">1. 분석과제 관리를 위한 5가지 주요 영역</h3>
<ol type="1">
<li><code>Data Size</code></li>
<li><code>Data Complexity</code></li>
<li><code>Speed</code>: 분석 모델의 성능 및 속도를 고려해야한다.</li>
<li><code>Analytic Complexity</code>: 분석 모델의 정확도를 높이면서 해석이 가능하도록 최적 모델을 찾아야 한다.</li>
<li><code>Accurancy &amp; Precision</code>: 정확도, 정밀도</li>
</ol>
</section>
<section id="분석-프로젝트-관리방안" class="level3">
<h3 class="anchored" data-anchor-id="분석-프로젝트-관리방안">3. 분석 프로젝트 관리방안</h3>
<ol type="1">
<li>범위</li>
<li>시간</li>
<li>원가</li>
<li>품질</li>
<li>통합</li>
<li>조달</li>
<li>자원</li>
<li>리스크</li>
<li>의사소통</li>
<li>이해관계자</li>
</ol>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>adp</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/05.html</guid>
  <pubDate>Sun, 09 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>2 - 데이터 처리 프로세스</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/03.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="etl" class="level2">
<h2 class="anchored" data-anchor-id="etl">ETL</h2>
<section id="etl-개요" class="level3">
<h3 class="anchored" data-anchor-id="etl-개요">1. ETL 개요</h3>
<ul>
<li><code>ETL(Extract, Transformation, Load)</code>: 데이터 이동 및 변환 절차</li>
<li><code>batch ETL</code>, <code>real-time ETL</code>으로 나뉨</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-08-14-25-19.png" class="img-fluid figure-img"></p>
<figcaption>ETL 작업 단계</figcaption>
</figure>
</div>
<ol type="1">
<li><code>Interface</code>: 다양한 소스로부터 데이터 휙득을 위한 인터페이스(OLEDB, ODBC, FTP)</li>
<li><code>Staging</code>: 정기적으로 데이터 원천으로 부터 저장. 아직은 정규화 x</li>
<li><code>Profiling</code>: staging table의 데이터 특성을 식별하고, 품질 측정</li>
<li><code>Cleansing</code>: profiling된 데이터를 보정</li>
<li><code>Integration</code>: 데이터 충돌을 해소하고, 데이터를 통합. 아마 여기서 정규화가 이루어질듯(왜 책에 설명 똑바로 안해놓지)</li>
<li><code>Export</code>: 운영보고서 생성, 데이터웨어하우스 / 데이터마트에 적재하기 위한 최적화(denormalization) 진행</li>
</ol>
</section>
<section id="ods-구성" class="level3">
<h3 class="anchored" data-anchor-id="ods-구성">2. ODS 구성</h3>
<ul>
<li>통합된 데이터를 저정하는 중간 저장소</li>
<li><code>실시간</code>, <code>거의 실시간</code>으로 데이터 적재</li>
</ul>
</section>
<section id="데이터-웨어하우스" class="level3">
<h3 class="anchored" data-anchor-id="데이터-웨어하우스">3. 데이터 웨어하우스</h3>
<ul>
<li>ODS를 통해 정제 / 통합된 데이터를 분석 및 보고서 생성을 위해 저장</li>
</ul>
<p><strong>특징</strong></p>
<ul>
<li><code>주제중심성</code></li>
<li><code>영속성/비휘발성</code></li>
<li><code>통합성</code></li>
<li><code>시계열성</code></li>
</ul>
<p><strong>모델링 기법</strong></p>
<ul>
<li><code>스타 스키마(조인 스키마)</code>
<ul>
<li>제 3정규형의 fact 테이블과 제 2정규형의 차원 테이블로 구성</li>
<li>복잡성이 낮지만, 데이터 무결성이 떨어짐</li>
</ul></li>
</ul>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-08-14-42-58.png" class="img-fluid"></p>
<ul>
<li><code>스노우플레이크 스키마</code>
<ul>
<li>스타 스키마의 차원 테이블을 제 3정규형으로 정규화한 상태</li>
<li>데이터 무결성이 높지만, 복잡성이 높음</li>
</ul></li>
</ul>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-08-14-44-11.png" class="img-fluid"></p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<p>제 1 정규형: 반복되는 record나 다치 attribute를 포함하지 않음 제 2 정규형: 부분 종속성(primary key의 일부가 다른 일부를 종속함)이 없음 제 3 정규형: 이행적 종속성(primary key가 아닌 attribute의 종속성)이 없음</p>
</div>
</div>
</div>
</section>
<section id="ods-vs-dw" class="level3">
<h3 class="anchored" data-anchor-id="ods-vs-dw">4. ODS vs DW</h3>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-08-15-16-42.png" class="img-fluid"></p>
</section>
</section>
<section id="cdcchange-data-capture" class="level2">
<h2 class="anchored" data-anchor-id="cdcchange-data-capture">CDC(change data capture)</h2>
<section id="cdc-개념-및-특징" class="level3">
<h3 class="anchored" data-anchor-id="cdc-개념-및-특징">1. CDC 개념 및 특징</h3>
<ul>
<li>데이터 변경을 감지하고, 변경된 데이터를 추출하는 기술</li>
<li>하드웨어 계층부터 어플리케이션 계층까지 다양한 수준에서 적용 가능</li>
</ul>
</section>
<section id="cdc-구현-기법" class="level3">
<h3 class="anchored" data-anchor-id="cdc-구현-기법">2. CDC 구현 기법</h3>
<ol type="1">
<li><code>Time Stamp on Rows</code></li>
<li><code>Version Numbers on Rows</code>: 참조테이블을 같이 사용하는게 일반적이라고 한다.</li>
<li><code>Status on Rows</code>: time stamp, version number 보완 용도로, 사람이 레코드 반영 여부를 직접 판단할 수 있게 적용할 수 있음</li>
<li><code>Time/Version/Status on Rows</code></li>
<li><code>Triggers on Tables</code>: message queue로 변경 발생시 subscribe 된 대상에 publish하는 방식. 시스템 관리 복잡도가 높아짐</li>
<li><code>Event Programming</code>: 어플리케이션에 데이터 변경 식별 기능을 추가</li>
<li><code>Log Scanner on Database</code>: 데이터 스키마 변경 불필요, 어플리케이션 영향 최소화, 지연시간 최소화</li>
</ol>
</section>
<section id="cdc-구현-방식" class="level3">
<h3 class="anchored" data-anchor-id="cdc-구현-방식">3. CDC 구현 방식</h3>
<ul>
<li><code>Push</code>: 데이터 원천에서 변경 식별(agent)</li>
<li><code>Pull</code>: 대상 시스템에서 원천을 주기적으로 모니터링</li>
</ul>
</section>
</section>
<section id="eai" class="level2">
<h2 class="anchored" data-anchor-id="eai">EAI</h2>
<section id="eai의-개념-및-특징" class="level3">
<h3 class="anchored" data-anchor-id="eai의-개념-및-특징">1. EAI의 개념 및 특징</h3>
<ul>
<li>기업 내 혹은 기업 간 정보시스템을 연계하여 동기화.</li>
<li>ETL은 <code>batch 처리</code> 중심, EAI는 <code>실시간 혹은 근접 실시간 처리</code> 중심</li>
</ul>
</section>
<section id="데이터-연계-방식" class="level3">
<h3 class="anchored" data-anchor-id="데이터-연계-방식">2. 데이터 연계 방식</h3>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-08-16-02-51.png" class="img-fluid"></p>
<ul>
<li>ETL/CDC는 운영 데이터와 분석을 위한 데이터베이스가 <code>구분</code>되지만, EAI는 <code>그냥 통합</code></li>
</ul>
</section>
<section id="eai-구성요소" class="level3">
<h3 class="anchored" data-anchor-id="eai-구성요소">3. EAI 구성요소</h3>
<ul>
<li><code>Adapter</code>: 시스템 간 데이터 변환</li>
<li><code>Broker</code>: 데이터 전송</li>
<li><code>Bus</code>: 데이터 전송 경로 설정</li>
<li><code>Transformer</code>: 데이터 형식 변환</li>
</ul>
</section>
<section id="eai-구현-유형" class="level3">
<h3 class="anchored" data-anchor-id="eai-구현-유형">4. EAI 구현 유형</h3>
<ol type="1">
<li><code>Mediation</code>: Publish/Subscribe 방식</li>
<li><code>Federaion</code>: Request/Reply 방식</li>
</ol>
</section>
<section id="eai-활용-효과" class="level3">
<h3 class="anchored" data-anchor-id="eai-활용-효과">5. EAI 활용 효과</h3>
<ul>
<li>협력사, 파트너, 고객과의 상호 협력 프로세스 연계</li>
<li>그룹 및 지주 회사 계열사들 간 상호 관련 데이터 동기화 등을 위한 데이터 표준화 기반 제공</li>
</ul>
</section>
<section id="eai-vs-esb" class="level3">
<h3 class="anchored" data-anchor-id="eai-vs-esb">6. EAI vs ESB</h3>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-08-16-13-57.png" class="img-fluid"></p>
<p><a href="https://bcho.tistory.com/1292">추가적인 자료</a></p>
</section>
</section>
<section id="데이터-통합-및-연계-기법" class="level2">
<h2 class="anchored" data-anchor-id="데이터-통합-및-연계-기법">데이터 통합 및 연계 기법</h2>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-08-16-32-24.png" class="img-fluid"></p>
<ul>
<li>빅데이터는 시각화도 하고, NoSQL 같은 환경에서도 사용한다.</li>
</ul>
</section>
<section id="대용량의-비정형-데이터-처리-방법" class="level2">
<h2 class="anchored" data-anchor-id="대용량의-비정형-데이터-처리-방법">대용량의 비정형 데이터 처리 방법</h2>
<section id="대규모-분산-병렬-처리" class="level3">
<h3 class="anchored" data-anchor-id="대규모-분산-병렬-처리">2. 대규모 분산 병렬 처리</h3>
<ul>
<li><code>하둡</code>:
<ul>
<li><code>MapReduce</code>와 <code>HDFS</code>를 기반으로 한 분산 병렬 처리 프레임워크</li>
<li><code>비공유 분산 아키텍쳐</code></li>
<li>선형적인 성능과 용량 확장</li>
<li>MapReduce failover</li>
</ul></li>
</ul>
<section id="hadoop-ecosystem" class="level4">
<h4 class="anchored" data-anchor-id="hadoop-ecosystem">Hadoop ecosystem</h4>
</section>
</section>
<section id="데이터-연동" class="level3">
<h3 class="anchored" data-anchor-id="데이터-연동">3. 데이터 연동</h3>
<p>대규모 연산을 데이터베이스에서 처리하기 어렵기 때문에, 하둡으로 복사해와서 MapReduce 연산 후, 결과를 다시 데이터베이스에 기록하기 위해 스쿱 사용</p>
<ul>
<li><code>Sqoop</code>
<ul>
<li>JDBC를 지원하는 RDBMS, Hbase와 Hadoop 간 데이터 전송(Import, Export)</li>
<li>SQL 질의로 데이터 추출</li>
<li>MapReduce 사용</li>
</ul></li>
</ul>
</section>
<section id="데이터-질의-기술" class="level3">
<h3 class="anchored" data-anchor-id="데이터-질의-기술">4. 데이터 질의 기술</h3>
<ul>
<li><code>Hive</code>: SQL과 유사한 HiveQL 질의, batch 처리</li>
<li><code>SQL on Hadoop</code>: SQL 질의, 실시간 처리
<ul>
<li>apache Drill, Stinger, Shark, Tajo, Impala, HAWQ, Presto</li>
</ul></li>
</ul>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>adp</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/03.html</guid>
  <pubDate>Fri, 07 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>2 - 데이터 처리 기술</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/04.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="분산-데이터-저장-기술" class="level2">
<h2 class="anchored" data-anchor-id="분산-데이터-저장-기술">분산 데이터 저장 기술</h2>
<section id="분산-파일-시스템" class="level3">
<h3 class="anchored" data-anchor-id="분산-파일-시스템">1. 분산 파일 시스템</h3>
<ul>
<li><code>GFS(Google File System)</code>: 구글의 분산 파일 시스템
<ul>
<li>chunk: 64MB</li>
<li>트리 구조가 아닌, 해시 테이블 구조로 관리</li>
<li>POSIX 인터페이스 지원하지 않음</li>
<li>단일 마스터 노드가 메모리상에서 메타데이터 관리</li>
<li>마스터 노드에 대한 로그를 기록하고, 마스터의 상태를 섀도우 마스터 노드에 복제</li>
<li>하나의 파일에 대한 primary node를 정하고, 다른 노드에 복제본 분산 저장</li>
<li>낮은 응답 지연시간보다 높은 처리율 중시</li>
<li>Master Node, Chunk Node, Client 구성</li>
</ul></li>
<li><code>HDFS(Hadoop Distributed File System)</code>: 아파치 하둡의 분산 파일 시스템
<ul>
<li>GFS의 clone project</li>
<li>POSIX 인터페이스 지원하지 않음</li>
<li>block: 128MB</li>
<li>NameNode가 메타데이터 관리</li>
<li>낮은 응답 지연시간보다 높은 처리율 중시</li>
<li>NameNode, DataNode, 보조 네임 노드, job tracker, task tracker 구성</li>
</ul></li>
<li><code>Lustre</code>: 고성능 컴퓨팅을 위한 분산 파일 시스템
<ul>
<li>POSIX 인터페이스 지원</li>
<li>chunk가 아닌 striping 방식 데이터 저장</li>
<li>Client Filesystem, Metadata Server, 객체 저장 서버로 구성</li>
</ul></li>
</ul>
</section>
<section id="데이터베이스-클러스터" class="level3">
<h3 class="anchored" data-anchor-id="데이터베이스-클러스터">2. 데이터베이스 클러스터</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<ul>
<li>무공유 디스크
<ul>
<li>각 노드가 완전히 분리된 데이터를 가짐</li>
<li>Oracle RAC를 제외한 대부분의 클러스터가 채택</li>
<li>노드 확장에 제한이 없음</li>
</ul></li>
<li>공유 디스크
<ul>
<li>SAN과 같은 네트워크로 모든 노드가 디스크 공유</li>
<li>노드 확장시 디스크 병목현상 고려 필요</li>
</ul></li>
</ul>
</div>
</div>
</div>
<ol type="1">
<li>Orace RAC 데이터베이스 서버: 확장성보다는 고가용성이 중요한 서비스에 적합</li>
<li>IBM DB2 ICE(integrated cluster environment)</li>
<li>마이크로소프트 SQL Server: 전역 스키마가 없어서 모든 노드에 질의를 해야함. active-stanby 구성</li>
<li>MySQL:
<ul>
<li>클러스터에 참여하는 노드는 최대 255, 그 중 데이터 노드는 최대 48개까지 가능</li>
<li>운영중에 노드를 추가 삭제 불가</li>
</ul></li>
</ol>
</section>
<section id="nosql" class="level3">
<h3 class="anchored" data-anchor-id="nosql">3. NoSQL</h3>
<ol type="1">
<li>Google BigTable:
<ul>
<li>공유 디스크 방식</li>
<li>Row Key 순으로 정렬 되어 있고, Row 내부적으로는 Column Key 순으로 정렬</li>
<li>Column Key, Value, Timestamp로 구성</li>
<li>Chubby를 이용해 마스터 노드 관리</li>
</ul></li>
<li>HBase</li>
<li>Amazon SimpleDB
<ul>
<li>schema가 없고, Domain(table), Item(record), Attribute(column), Value으로 구성</li>
</ul></li>
<li>마이크로소프트 SSDS: Container(table), Entity(record), Property(column)로 구성</li>
</ol>
</section>
</section>
<section id="분산-컴퓨팅-기술" class="level2">
<h2 class="anchored" data-anchor-id="분산-컴퓨팅-기술">분산 컴퓨팅 기술</h2>
<section id="mapreduce" class="level3">
<h3 class="anchored" data-anchor-id="mapreduce">1. MapReduce</h3>
<ul>
<li>대용량 데이터를 분산 처리할 수 있는 모델</li>
<li>보통 64MB를 기준으로 데이터 분할</li>
<li>하나의 블록당 하나의 Map Task, 사용자가 지정한 갯수만큼의 Reduce Task 생성</li>
<li>Count 작업에 적합하고, Sort 작업에는 적합하지 않음</li>
</ul>
<ol type="1">
<li>Google MapReduce</li>
<li>Hadoop MapReduce</li>
</ol>
<p>절차: 1. Split 1. Map 1. Combine 1. Partition 1. Shuffle 1. Sort 1. Reduce</p>
</section>
<section id="병렬-쿼리-시스템" class="level3">
<h3 class="anchored" data-anchor-id="병렬-쿼리-시스템">2. 병렬 쿼리 시스템</h3>
<ol type="1">
<li>Google Sawzall: MapReduce에 대한 이해가 없어도 쉽게 사용 가능</li>
<li>Apache Pig</li>
<li>Apache Hive</li>
</ol>
</section>
<section id="sql-on-hadoop" class="level3">
<h3 class="anchored" data-anchor-id="sql-on-hadoop">3. SQL on Hadoop</h3>
</section>
</section>
<section id="클라우드-인프라-기술" class="level2">
<h2 class="anchored" data-anchor-id="클라우드-인프라-기술">클라우드 인프라 기술</h2>
<section id="cpu-가상화" class="level3">
<h3 class="anchored" data-anchor-id="cpu-가상화">2. CPU 가상화</h3>
<ul>
<li><code>하이퍼바이저</code>: 하드웨어 리소스를 가상화하여 여러 개의 가상 머신을 생성하는 소프트웨어
<ul>
<li>bare-metal hypervisor: 하드웨어와 host 운영체제 사이에 hypervisor가 존재 <img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-14-15-48-44.png" class="img-fluid" alt="설명을 너무 개떡같이 적어놨다."> <img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-14-15-49-31.png" class="img-fluid"></li>
<li>hosted hypervisor: host 운영체제와 guest 운영체제 사이에 hypervisor가 존재</li>
</ul></li>
<li>Container</li>
</ul>
</section>
<section id="메모리-가상화" class="level3">
<h3 class="anchored" data-anchor-id="메모리-가상화">3. 메모리 가상화</h3>
<ul>
<li><p>VMKernnel: hypervisor 내에 Show Page Table을 두고, 각 VM의 Guest OS의 Page Table을 관리</p></li>
<li><p>Memory Ballooning: Guest OS의 메모리를 빼앗아서 다른 VM에 할당</p></li>
<li><p>Transparent Page Sharing: 같은 내용의 메모리 페이지는 VM들이 공유</p></li>
<li><p>Memory Overcommitment: VM에 할당된 메모리보다 더 많은 메모리를 할당할 수 있음</p></li>
</ul>
</section>
<section id="io-가상화" class="level3">
<h3 class="anchored" data-anchor-id="io-가상화">4. I/O 가상화</h3>
<ul>
<li>가상 이더넷: 가상 머신 간의 네트워크 통신을 위한 가상 네트워크. LAN 세그먼트를 가상화</li>
<li>공유 이더넷 어댑터: 하나의 물리적 네트워크 어댑터를 여러 VM이 공유. 병목현상 발생 가능</li>
<li>가상 디스크 어댑터</li>
</ul>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>adp</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/04.html</guid>
  <pubDate>Fri, 07 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>성적 장학금</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/scholarships/2.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/scholarships/img/2025-02-05-20-38-17.png" class="img-fluid"></p>
<p>오~예~ (남은 등록금 300만원을 대출 받으며)</p>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>장학금</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/scholarships/2.html</guid>
  <pubDate>Tue, 04 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>통계 기초</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/통계/01.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="결정론적-vs-통계적-의사결정" class="level2">
<h2 class="anchored" data-anchor-id="결정론적-vs-통계적-의사결정">결정론적 vs 통계적 의사결정</h2>
<p>우리가 일상생활에서 무의식적으로 사용하는 것은 결정론적 의사결정이다.</p>
<p>변화의 원인을 결정론적으로 확신하는 것이 결정론적 의사결정이다.</p>
<p>어떤 사건이 우연히 발생할 확률을 묻는 것으로 시작하는 것이 통계적 의사결정이다.</p>
</section>
<section id="통계의-본질" class="level2">
<h2 class="anchored" data-anchor-id="통계의-본질">통계의 본질</h2>
<p>데이터를 설명하는 대표적인 특징이 평균과 분산, 중앙값, 최빈값, … 이다.</p>
<ol type="1">
<li>중심 경향성: 평균, 중앙값, 최빈값</li>
<li>산포도: 분산, 표준편차, 사분위수, 변동계수</li>
</ol>
<p>이 중 평균, 분산이 계산하기 쉽고, 좋은 추정값이 된다.</p>
<p>통계는 분산의 마법이다.</p>
</section>
<section id="what-is-p-value" class="level2">
<h2 class="anchored" data-anchor-id="what-is-p-value">what is p-value</h2>
<p>어떤 사건이 우연히 발생할 확률</p>
<p>p-value가 0.05보다 작다 = 어떤 사건이 우연히 발생할 확률이 낮다 = 우연이 아니다.</p>
</section>
<section id="통계적-가설검정" class="level2">
<h2 class="anchored" data-anchor-id="통계적-가설검정">통계적 가설검정</h2>
<ul>
<li><p>귀무가설(Null Hypothesis, <img src="https://latex.codecogs.com/png.latex?H_0">): 기존의 주장</p></li>
<li><p>대립가설(Alternative Hypothesis, <img src="https://latex.codecogs.com/png.latex?H_1">): 새로운 주장</p></li>
<li><p>p-value가 0.05보다 작다: <img src="https://latex.codecogs.com/png.latex?H_1"> 채택, <img src="https://latex.codecogs.com/png.latex?H_0">이 실제로 참일 경우: 1종 오류</p></li>
<li><p>p-value가 0.05보다 크다: <img src="https://latex.codecogs.com/png.latex?H_0"> 채택, <img src="https://latex.codecogs.com/png.latex?H_1">이 실제로 참일 경우: 2종 오류</p></li>
</ul>
</section>
<section id="변수와-데이터" class="level2">
<h2 class="anchored" data-anchor-id="변수와-데이터">변수와 데이터</h2>
<ol type="1">
<li>이산/범주형 변수
<ul>
<li>명목변수</li>
<li>순위변수</li>
</ul></li>
<li>연속형 변수
<ul>
<li>구간 변수</li>
<li>비율 변수</li>
</ul></li>
</ol>
</section>
<section id="상관관계와-상관계수" class="level2">
<h2 class="anchored" data-anchor-id="상관관계와-상관계수">상관관계와 상관계수</h2>
<p>상관관계: 한 변수와 다른 변수가 공변하는 함수관계 - 상관계수는 힘(0~1), 방향(+,-)을 나타냄 - scatter plot에서 데이터가 모여있으면 상관계수가 높고, 흩어져 있으면 상관계수가 낮다(공 모양). - 상관계수의 힘은 점이 모여있는 정도를 나타내고, 각도(방향)와는 관련이 없다. - 단, 직선이 완벽히 수평이면 상관계수는 0이다. - 직선 관계만 알 수 있다.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>통계</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/통계/01.html</guid>
  <pubDate>Mon, 03 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>t-test</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/통계/02.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="t-test" class="level2">
<h2 class="anchored" data-anchor-id="t-test">t-test</h2>
<p>모집단의 표준편차가 알려지지 않았을 때, 정규분포의 모집단에서 추출된 표본의 평균값에 대한 가설검정 방법</p>
<p>목적: 두개의 집단이 같은지 다른지 비교하기 위해 사용</p>
<p>두 집단의 차이가 표준편차보다 작다 = 우연히 발생한 차이</p>
<p>두 집단의 차이가 표준편차보다 크다 = 우연히 발생한 차이가 아님</p>
<ol type="1">
<li>양측 검정: 단순히 다를 때
<ul>
<li><img src="https://latex.codecogs.com/png.latex?H_0">: <img src="https://latex.codecogs.com/png.latex?%5Cbar%7BX%7D_a%20=%20%5Cbar%7BX%7D_b"> → <img src="https://latex.codecogs.com/png.latex?D_%7Ba-b%7D%20=%200"></li>
<li><img src="https://latex.codecogs.com/png.latex?H_1">: <img src="https://latex.codecogs.com/png.latex?%5Cbar%7BX%7D_a%20%E2%89%A0%20%5Cbar%7BX%7D_b"> → <img src="https://latex.codecogs.com/png.latex?%5Cbar%7BX%7D_a%20%3E%20%5Cbar%7BX%7D_b"> or <img src="https://latex.codecogs.com/png.latex?%5Cbar%7BX%7D_a%20%3C%20%5Cbar%7BX%7D_b"> → <img src="https://latex.codecogs.com/png.latex?D_%7Ba-b%7D%20%3E%200"> or <img src="https://latex.codecogs.com/png.latex?D_%7Ba-b%7D%20%3C%200"></li>
</ul></li>
<li>단측 검정: 어느 한쪽이 더 큰지 작은지 알 때
<ul>
<li><img src="https://latex.codecogs.com/png.latex?H_0">: <img src="https://latex.codecogs.com/png.latex?%5Cbar%7BX%7D_a%20=%20%5Cbar%7BX%7D_b"> → <img src="https://latex.codecogs.com/png.latex?D_%7Ba-b%7D%20=%200"></li>
<li><img src="https://latex.codecogs.com/png.latex?H_1">: <img src="https://latex.codecogs.com/png.latex?%5Cbar%7BX%7D_a%20%3E%20%5Cbar%7BX%7D_b"> → <img src="https://latex.codecogs.com/png.latex?D_%7Ba-b%7D%20%3E%200"></li>
</ul></li>
</ol>
<p>대립 가설을 하나만(lower, greater) 가져가냐, 둘 다 가져가냐 차이</p>
<ol type="1">
<li>Two sample t-test
<ul>
<li>두 집단의 평균값을 비교</li>
<li>두 집단의 분산이 같은지 다른지에 따라 equal variance t-test, unequal variance t-test로 나뉨</li>
</ul></li>
<li>Paired t-test
<ul>
<li>동일한 집단의 평균값을 비교</li>
<li>두 집단의 차이가 0인지 아닌지 검정</li>
</ul></li>
</ol>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>통계</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/통계/02.html</guid>
  <pubDate>Mon, 03 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>1 - 데이터의 가치와 미래</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/01.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="빅데이터의-이해" class="level2">
<h2 class="anchored" data-anchor-id="빅데이터의-이해">빅데이터의 이해</h2>
<section id="빅데이터의-정의" class="level3">
<h3 class="anchored" data-anchor-id="빅데이터의-정의">1. 빅데이터의 정의</h3>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-08-12-15-57.png" class="img-fluid"></p>
<ul>
<li>좁은 범위
<ul>
<li>데이터 자체의 특성에 초점을 맞춘 정의</li>
<li><code>3V(다양성, 속도, 규모)</code>를 강조</li>
</ul></li>
<li>중간 범위
<ul>
<li>데이터 자체뿐 아니라 처리, 분석 방법도 포함하는 정의</li>
</ul></li>
<li>넓은 관점
<ul>
<li>인재, 조직 변화까지 포함한 정의</li>
</ul></li>
</ul>
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-08-12-16-09.png" class="img-fluid"></p>
<p>∴ 기존 방식으로는 얻을 수 없는 통찰 및 가치 창출</p>
</section>
<section id="출현-배경과-변화" class="level3">
<h3 class="anchored" data-anchor-id="출현-배경과-변화">2. 출현 배경과 변화</h3>
<ol type="1">
<li>산업계: 고객 데이터가 축적되며 새로운 가치 활용</li>
<li>학계: 거대 데이터 활용 분야가 늘어나며 통계 도구들이 발전</li>
<li>기술발전: 관련기술의 발전</li>
</ol>
</section>
<section id="빅데이터의-기능" class="level3">
<h3 class="anchored" data-anchor-id="빅데이터의-기능">3. 빅데이터의 기능</h3>
<ol type="1">
<li><code>산업혁명의 석탄, 철</code>: 산업 전반에 혁명적 변화를 가져옴</li>
<li><code>21세기의 원유</code>: 생산성을 향상시키고, 기존에 없던 새로운 범주의 산업을 만들어낼 것으로 전망</li>
<li><code>렌즈</code>: 데이터가 산업에 영향을 미침</li>
<li><code>플랫폼</code></li>
</ol>
</section>
<section id="빅데이터가-만들어-내는-본질적인-변화" class="level3">
<h3 class="anchored" data-anchor-id="빅데이터가-만들어-내는-본질적인-변화">4. 빅데이터가 만들어 내는 본질적인 변화</h3>
<ol type="1">
<li><code>사전처리 → 사후처리</code></li>
<li><code>표본조사 → 전수조사</code></li>
<li><code>질 → 양</code></li>
<li><code>인과관계 → 상관관계</code></li>
</ol>
</section>
</section>
<section id="빅데이터의-가치와-영향" class="level2">
<h2 class="anchored" data-anchor-id="빅데이터의-가치와-영향">빅데이터의 가치와 영향</h2>
<section id="빅데이터의-가치" class="level3">
<h3 class="anchored" data-anchor-id="빅데이터의-가치">1. 빅데이터의 가치</h3>
<p>빅데이터는 아래와 같은 이유로 가치 선정이 어렵다.</p>
<ul>
<li>데이터 활용방식: 데이터를 언제 어디서 누가 사용할지 미리 예측하기 어려움</li>
<li>새로운 가치 창출: 기존에 없던 가치를 창출하기 때문에 가치를 예측하기 어려움</li>
<li>분석 기술 발전: 현재 가치가 없더라도, 추후 기술이 발전하면 가치가 생길 수 있음</li>
</ul>
</section>
<section id="빅데이터의-영향" class="level3">
<h3 class="anchored" data-anchor-id="빅데이터의-영향">2. 빅데이터의 영향</h3>
<p>빅데이터는 다양한 주체(기업, 정부, 개인)에 영향을 미친다.</p>
</section>
</section>
<section id="비즈니스-모델" class="level2">
<h2 class="anchored" data-anchor-id="비즈니스-모델">비즈니스 모델</h2>
<section id="빅데이터-활용-사례" class="level3">
<h3 class="anchored" data-anchor-id="빅데이터-활용-사례">1. 빅데이터 활용 사례</h3>
<p>여러가지 활용 사례가 있다.</p>
</section>
<section id="빅데이터-활용-기본-테크닉" class="level3">
<h3 class="anchored" data-anchor-id="빅데이터-활용-기본-테크닉">2. 빅데이터 활용 기본 테크닉</h3>
<ul>
<li><code>연관규칙학습</code>: 범주형 데이터의 변인들간의 규칙을 발견. 비지도 학습 (ex. 장바구니 분석)</li>
<li><code>유형(군집)분석</code>: 데이터를 분류하거나 군집화. 비지도 학습 (not 분류분석)</li>
<li><code>유전자 알고리즘</code>: 최적해를 찾는 알고리즘</li>
<li><code>기계학습</code>: 훈련한 데이터로 예측</li>
<li><code>회귀분석</code>: 연속형 데이터의 독립변수와 종속변수의 관계를 수학적으로 모델링해서 예측</li>
<li><code>감정분석</code>: 비정형 데이터 분석</li>
<li><code>소셜네트워크분석(사회관계망분석)</code>: 비정형 데이터 분석</li>
</ul>
</section>
</section>
<section id="위기-요인과-통제-방안" class="level2">
<h2 class="anchored" data-anchor-id="위기-요인과-통제-방안">위기 요인과 통제 방안</h2>
<section id="빅데이터-시대의-위기-요인과-통제-방안" class="level3">
<h3 class="anchored" data-anchor-id="빅데이터-시대의-위기-요인과-통제-방안">1. 빅데이터 시대의 위기 요인과 통제 방안</h3>
<ul>
<li><code>사생활 침해</code>: 동의에서 책임으로</li>
<li><code>책임 원칙 훼손</code>: 결과 기반 책임 원칙 고수</li>
<li><code>데이터 오용</code>: 알고리즘 접근 허용, <code>알고리즈미스트</code></li>
</ul>
</section>
</section>
<section id="미래의-빅데이터" class="level2">
<h2 class="anchored" data-anchor-id="미래의-빅데이터">미래의 빅데이터</h2>
<section id="빅데이터-활용의-3요소" class="level3">
<h3 class="anchored" data-anchor-id="빅데이터-활용의-3요소">1. 빅데이터 활용의 3요소</h3>
<ul>
<li><code>데이터</code>: 모든것의 데이터화</li>
<li><code>기술</code>: 인공지능</li>
<li><code>인력</code>: 데이터 사이언티스트, 알고리즈미스트</li>
</ul>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>adp</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/01.html</guid>
  <pubDate>Mon, 03 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>1 - 데이터 이해</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/00.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="데이터와-정보" class="level2">
<h2 class="anchored" data-anchor-id="데이터와-정보">데이터와 정보</h2>
<section id="데이터" class="level3">
<h3 class="anchored" data-anchor-id="데이터">1. 데이터</h3>
<ul>
<li><code>객관적 사실</code>을 나타내는 <code>존재적 특성</code>과, <code>추론 예측 전망 추정을 위한 근거</code>가 되는 <code>당위적 특성</code>을 모두 포함하는 개념</li>
<li>단위: <code>바이트(byte)</code>, <code>킬로바이트(KB)</code>, <code>메가바이트(MB)</code>, <code>기가바이트(GB)</code>, <code>테라바이트(TB)</code>, <code>페타바이트(PB)</code>, <code>엑사바이트(EB)</code>, <code>제타바이트(ZB)</code>, <code>요타바이트(YB)</code></li>
<li>유형:
<ul>
<li><code>정성적 데이터</code>: 비정형 데이터, 주관적 내용, 통계분석이 어려움</li>
<li><code>정량적 데이터</code>: 정형 데이터, 객관적 내용, 통계분석이 용이함</li>
</ul></li>
<li>지식 경영의 핵심 이슈인 <code>암묵지</code>와 <code>형식지</code>를 연결하는 역할을 함</li>
</ul>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<ul>
<li><code>정형</code> 데이터: 표 형태로 정리된 데이터</li>
<li><code>반정형</code> 데이터: HTML, XML, JSON 등의 형태(스키마, 메타데이터)가 있고, 연산이 불가능한 데이터</li>
<li><code>비정형</code> 데이터: 형태가 없고, 연산이 불가능한 데이터</li>
</ul>
</div>
</div>
</div>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<ul>
<li>암묵지:
<ul>
<li>학습과 경험을 통해 개인에게 체화되어 잇지만 겉으로 드러나지 않는 지식</li>
<li>개인에게 축적된 <code>내면화</code>된 지식 → 조직의 지식으로 <code>공통화</code></li>
</ul></li>
<li>형식지:
<ul>
<li>문서나 메뉴얼처럼 형상화된 지식</li>
<li>언어, 기호, 숫자로 <code>표출화</code>된 지식 → 개인의 지식으로 <code>연결화</code></li>
</ul></li>
</ul>
<p>∴ 내면화 → 공통화 → 표출화 → 연결화 → 내면화</p>
</div>
</div>
</div>
</section>
<section id="데이터와-정보의-관계" class="level3">
<h3 class="anchored" data-anchor-id="데이터와-정보의-관계">2. 데이터와 정보의 관계</h3>
<ul>
<li><p><code>데이터(data)</code>: 그 자체로는 의미가 중요하지 않은 객관적인 사실</p>
<p>ex) A마트는 100원, B마트는 200원에 휴지를 판다.</p></li>
<li><p><code>정보(information)</code>: 데이터를 가공하여 의미를 부여한 결과물</p>
<p>ex) A마트가 100원에 판 휴지는 B마트보다 100원 싸다.</p></li>
<li><p><code>지식(knowledge)</code>: 정보를 구조화하여 유의미한 정보를 분류하고 <code>개인적인 경험을 결합</code>시켜 고유의 지식으로 <code>내재화</code>된 것</p>
<p>ex) 가격이 더 저렴한 A마트에 가서 휴지를 사야겠다.</p></li>
<li><p><code>지혜(wisdom)</code>: 지식의 축적과 아이디어가 결합된 창의적인 결과물</p>
<p>ex) A마트의 다른 물건도 B마트보다 저렴할 것이다.</p></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-08-11-19-56.png" class="img-fluid figure-img"></p>
<figcaption>DIKW 피라미드</figcaption>
</figure>
</div>
</section>
</section>
<section id="데이터베이스-정의와-특징" class="level2">
<h2 class="anchored" data-anchor-id="데이터베이스-정의와-특징">데이터베이스 정의와 특징</h2>
<section id="데이터베이스의-정의" class="level3">
<h3 class="anchored" data-anchor-id="데이터베이스의-정의">1. 데이터베이스의 정의</h3>
<p>기존에는 정형 데이터 관리의 의미로 사용되다가, 빅데이터의 출현으로 비정형 데이터까지 포함하는 개념으로 확장됨</p>
</section>
<section id="데이터베이스의-일반적인-특징" class="level3">
<h3 class="anchored" data-anchor-id="데이터베이스의-일반적인-특징">2. 데이터베이스의 일반적인 특징</h3>
<ol type="1">
<li><code>통합된 데이터</code>: 동일한 내용의 데이터가 중복되어 있지 않다.</li>
<li><code>저장된 데이터</code></li>
<li><code>공용 데이터</code></li>
<li><code>변화되는 데이터</code>: 데이터베이스에는 항상 현재의 정확한 데이터를 유지한다.</li>
</ol>
</section>
</section>
<section id="데이터베이스의-활용" class="level2">
<h2 class="anchored" data-anchor-id="데이터베이스의-활용">데이터베이스의 활용</h2>
<section id="년대-기업-내부-데이터베이스" class="level3">
<h3 class="anchored" data-anchor-id="년대-기업-내부-데이터베이스">1. 1980년대 기업 내부 데이터베이스</h3>
<ul>
<li><code>OLTP(On-Line Transaction Processing)</code>
<ul>
<li>데이터베이스의 데이터를 실시간으로 <code>갱신</code>하는 프로세싱.</li>
<li><code>구조가 복잡</code>하고, <code>현재의 단기간</code> 데이터.</li>
<li><code>갱신이 동적</code>이고, <code>엑세스 빈도가 높다</code>.</li>
<li><code>질의가 단순하고, 주기적</code>이다.</li>
</ul></li>
<li><code>OLAP(On-Line Analytical Processing)</code>
<ul>
<li>데이터 <code>조회, 분석</code> 위주.</li>
<li><code>구조가 단순</code>하고, <code>과거의 장기간 요약</code> 데이터.</li>
<li><code>갱신이 정적</code>이고, <code>엑세스 빈도가 보통이다</code>.</li>
<li><code>질의가 복잡하다</code>.</li>
</ul></li>
</ul>
</section>
<section id="년대-기업-내부-데이터베이스-1" class="level3">
<h3 class="anchored" data-anchor-id="년대-기업-내부-데이터베이스-1">2. 2000년대 기업 내부 데이터베이스</h3>
<ul>
<li><code>CRM(Customer Relationship Management)</code>: 고객 관리 시스템</li>
<li><code>SCM(Supply Chain Management)</code>: 공급망 관리 시스템</li>
</ul>
</section>
<section id="각-분야별-내부-데이터베이스" class="level3">
<h3 class="anchored" data-anchor-id="각-분야별-내부-데이터베이스">3. 각 분야별 내부 데이터베이스</h3>
<ul>
<li>제조부문
<ul>
<li><code>ERP(Enterprise Resource Planning)</code>: 기업 내부 자료를 하나의 통합 시스템으로 재구축</li>
<li><code>BI(Business Intelligence)</code>: 기업의 수많은 데이터를 정리, 분석해 의사결정에 활용하는 프로세스</li>
<li>CRM</li>
<li><code>RTE(Real-Time Enterprise)</code>: ERP, SCM, CRM 등의 부문별 전산화 시스템을 하나로 통합</li>
</ul></li>
<li>금융부문
<ul>
<li><code>EAI(Enterprise Application Integration)</code></li>
<li><code>EDW(Enterprise Data Warehouse)</code>: BPR, CRM, BSC 등의다양한 분석 시스템을 위한 원천</li>
</ul></li>
<li>유통부문
<ul>
<li><code>KMS(Knowledge Management System)</code></li>
<li><code>RFID(Radio Frequency Identification)</code>: 주파수를 이용해 ID를 식별</li>
</ul></li>
</ul>
</section>
<section id="사회기반구조로서의-데이터베이스" class="level3">
<h3 class="anchored" data-anchor-id="사회기반구조로서의-데이터베이스">4. 사회기반구조로서의 데이터베이스</h3>
<ul>
<li><code>EDI(Electronic Data Interchange)</code>: 전자상거래를 위한 표준화된 데이터 포맷</li>
<li><code>VAN(Value Added Network)</code>: EDI를 위한 통신망 (카드 결제 시, 가맹점과 카드사 사이에서 승인 요청 및 결과 전달을 중계함.)</li>
<li><code>CALS(Commerce At Light Speed)</code>: 제품의 설계, 생산, 유통, 판매 등의 모든 과정을 통합한 경영정보시스템</li>
</ul>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>adp</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/00.html</guid>
  <pubDate>Mon, 03 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>1 - 가치 창조를 위한 데이터 사이언스와 전략 인사이트</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/02.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="빅데이터-분석과-전략-인사이트" class="level2">
<h2 class="anchored" data-anchor-id="빅데이터-분석과-전략-인사이트">빅데이터 분석과 전략 인사이트</h2>
<p>빅테이터 분석은 분석을 통해 <code>가치를 창출</code>하는 것이 목적이다.</p>
<ul>
<li>일차원적인 분석: 해당 부서나 업무 영역에만 효과가 있다. 변화하는 환경에서 새로운 기회를 포착하기 어려움.</li>
<li>전략도출 가치기반 분석: 일차원적인 분석을 통해 얻은 가치를 기반으로 활용 범위를 더 넓고 전략적으로 확장해야한다.</li>
</ul>
</section>
<section id="전략-인사이트-도출을-위한-필요-역량" class="level2">
<h2 class="anchored" data-anchor-id="전략-인사이트-도출을-위한-필요-역량">전략 인사이트 도출을 위한 필요 역량</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/img/2025-02-08-12-48-06.png" class="img-fluid figure-img"></p>
<figcaption>데이터 사이언티스트의 요구 역량</figcaption>
</figure>
</div>
<p><code>외부 환경</code>이 다음과 같이 <code>변화</code>함에 따라 인사이트 도출을 위한 <code>인문학적 역량</code>이 요구됨.</p>
<ul>
<li><code>컨버전스 → 디버전스</code></li>
<li><code>생산 → 서비스</code></li>
<li><code>생산 → 시장창조</code></li>
</ul>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>adp</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_필기/notes/adp_자습서/02.html</guid>
  <pubDate>Mon, 03 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>인간 관계론 - 데일 카네기</title>
  <link>https://cryscham123.github.io/posts/00_inboxes/notes/01.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://contents.kyobobook.co.kr/sih/fit-in/458x0/pdt/9791164459667.jpg" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:30.0%"></p>
</figure>
</div>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<p>도서 <a href="https://product.kyobobook.co.kr/detail/S000213900397">인간 관계론</a> 정리 노트입니다.</p>
</div>
</div>
</div>
<section id="사람을-대하는-기본-기술" class="level2">
<h2 class="anchored" data-anchor-id="사람을-대하는-기본-기술">사람을 대하는 기본 기술</h2>
<section id="꿀을-얻으려면-벌집을-걷어차지-마라" class="level3">
<h3 class="anchored" data-anchor-id="꿀을-얻으려면-벌집을-걷어차지-마라">꿀을 얻으려면 벌집을 걷어차지 마라</h3>
<p>남을 비난하고 원망하며 불평하는 것은 어떤 바보라도 할 수 있다. 실제로 바보들은 그렇게 한다. 하지만 남을 이해하고 용서하려면 인격과 자제력이 필요하다.</p>
<p><code>사람을 비난하는 대신 그들을 이해하려고 노력해 보자</code>. 그들이 왜 그런 행동을 하는지 곰곰이 생각해 보자. 그편이 비난하는 것보다 훨씬 이롭고 흥미롭다.</p>
</section>
<section id="사람을-대하는-핵심-비결" class="level3">
<h3 class="anchored" data-anchor-id="사람을-대하는-핵심-비결">사람을 대하는 핵심 비결</h3>
<p>누군가에게 어떤 일을 하게 만드는 방법은 상대방이 그 일을 하고 싶게 만드는 것 뿐이다. 강제적인 방법들은 반드시 역효과를 일으킨다.</p>
<p>타인에게 어떤 일을 하게 하려면 그 사람이 원하는 것을 주는 방법밖에 없다. <code>인간의 본성이 지닌 가장 깊은 충동이 바로 중요한 사람이 되고자 하는 욕망이다.</code></p>
<p>이러한 갈망을 제대로 충족시켜 주는 사람은 다른 사람의 마음을 사로잡을 수 있다. <code>타인을 진실된 마음으로 칭찬하자.</code> 이는 이기적이고 거짓인 아첨과는 다르다.</p>
</section>
<section id="이-일을-해내는-사람은-세상을-얻을-것이고-그렇지-못한-사람은-외로운-길을-걸을-것이다." class="level3">
<h3 class="anchored" data-anchor-id="이-일을-해내는-사람은-세상을-얻을-것이고-그렇지-못한-사람은-외로운-길을-걸을-것이다.">이 일을 해내는 사람은 세상을 얻을 것이고, 그렇지 못한 사람은 외로운 길을 걸을 것이다.</h3>
<p><code>상대방에게 영향을 미치는  방법은 그사람이 원하는 것을 이야기하고, 이를 얻는 방법을 보여 주는 것이다.</code></p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<p>…이 부분 예시로 드는 것들이 조금 오버스럽다고 느껴진다.<br>
문화가 달라서 그런가? 아니면 번역 이슈인가?<br>
무슨 말을 하는진 알겠는데, 몇몇 부분은 별로 공감이 안 된다.</p>
</div>
</div>
</div>
</section>
</section>
<section id="사람들에게-호감을-얻는-6가지-방법" class="level2">
<h2 class="anchored" data-anchor-id="사람들에게-호감을-얻는-6가지-방법">사람들에게 호감을 얻는 6가지 방법</h2>
<section id="이렇게-하면-어디서든-환영받을-것이다." class="level3">
<h3 class="anchored" data-anchor-id="이렇게-하면-어디서든-환영받을-것이다.">이렇게 하면 어디서든 환영받을 것이다.</h3>
<p>다른 사람에게 관심이 없는 사람은 인생에서 가장 큰 어려움을 겪고, 다른 사람에게 가장 큰 상처를 준다. <code>상대방에게 진심으로 관심을 가져라</code></p>
</section>
<section id="좋은-첫인상을-남기는-간단한-방법" class="level3">
<h3 class="anchored" data-anchor-id="좋은-첫인상을-남기는-간단한-방법">좋은 첫인상을 남기는 간단한 방법</h3>
<p>미소를 지어라</p>
</section>
<section id="이렇게-하지-않으면-문제가-생길-것이다." class="level3">
<h3 class="anchored" data-anchor-id="이렇게-하지-않으면-문제가-생길-것이다.">이렇게 하지 않으면 문제가 생길 것이다.</h3>
<p>사람의 이름을 기억하라</p>
</section>
<section id="좋은-대화-상대가-되는-쉬운-방법" class="level3">
<h3 class="anchored" data-anchor-id="좋은-대화-상대가-되는-쉬운-방법">좋은 대화 상대가 되는 쉬운 방법</h3>
<p>상대의 이야기를 경청하고, 상대가 자신에 관해 이야기하도록 격려하라</p>
</section>
<section id="사람들의-관심을-얻는-방법" class="level3">
<h3 class="anchored" data-anchor-id="사람들의-관심을-얻는-방법">사람들의 관심을 얻는 방법</h3>
<p>상대방의 관심사에 대해 이야기하라</p>
</section>
<section id="사람들에게-즉시-호감을-얻는-방법" class="level3">
<h3 class="anchored" data-anchor-id="사람들에게-즉시-호감을-얻는-방법">사람들에게 즉시 호감을 얻는 방법</h3>
<p>모든 사람은 자신이 상대보다 우월하다고 생각한다. 항상 상대방이 자신을 중요하다고 느끼게 하라</p>
</section>
</section>
<section id="사람들의-마음을-사로잡는-12가지-방법" class="level2">
<h2 class="anchored" data-anchor-id="사람들의-마음을-사로잡는-12가지-방법">사람들의 마음을 사로잡는 12가지 방법</h2>
<section id="논쟁으로는-이길-수-없다" class="level3">
<h3 class="anchored" data-anchor-id="논쟁으로는-이길-수-없다">논쟁으로는 이길 수 없다</h3>
<p>자기 의사에 반하여 설득당한 사람은 여전히 자기 생각을 바꾸지 않는 법이다. 논쟁에서 최선의 결과를 얻는 유일한 방법은 논쟁을 피하는 것뿐이다.</p>
</section>
<section id="적을-만드는-확실한-방법과-이를-피하는-방법" class="level3">
<h3 class="anchored" data-anchor-id="적을-만드는-확실한-방법과-이를-피하는-방법">적을 만드는 확실한 방법과 이를 피하는 방법</h3>
<p>되도록 남들보다 지혜로운 사람이 되거라. 하지만 남들에게 그렇다고 말하지 않도록 해라.</p>
<p>상대가 틀린 말을 해도 굳이 지적하지 마라</p>
</section>
<section id="틀렸다면-인정하라" class="level3">
<h3 class="anchored" data-anchor-id="틀렸다면-인정하라">틀렸다면, 인정하라</h3>
<p>조금 잘못했는데, 상대가 비난할거 같으면 오바해서 자기 잘못을 시인하라</p>
</section>
<section id="이성에-호소하는-확실한-방법" class="level3">
<h3 class="anchored" data-anchor-id="이성에-호소하는-확실한-방법">이성에 호소하는 확실한 방법</h3>
<p>우호적인 방식으로 시작하라</p>
</section>
<section id="소크라테스의-비결" class="level3">
<h3 class="anchored" data-anchor-id="소크라테스의-비결">소크라테스의 비결</h3>
<p>상대방이 동의할 수 밖에 없는 질문을 유도하라.</p>
</section>
<section id="불만을-잠재우는-안전밸브" class="level3">
<h3 class="anchored" data-anchor-id="불만을-잠재우는-안전밸브">불만을 잠재우는 안전밸브</h3>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>독서</category>
  <category>인간 관계</category>
  <guid>https://cryscham123.github.io/posts/00_inboxes/notes/01.html</guid>
  <pubDate>Sat, 01 Feb 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>선형결합과 생성</title>
  <link>https://cryscham123.github.io/posts/02_areas/선형대수/notes/5.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="선형결합" class="level2">
<h2 class="anchored" data-anchor-id="선형결합">선형결합</h2>
<p>벡터들의 상수배 합으로 만들 수 있는 벡터의 집합</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>선형 대수</category>
  <guid>https://cryscham123.github.io/posts/02_areas/선형대수/notes/5.html</guid>
  <pubDate>Thu, 30 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>벡터와 공간</title>
  <link>https://cryscham123.github.io/posts/02_areas/선형대수/notes/4.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="what-is-vector" class="level2">
<h2 class="anchored" data-anchor-id="what-is-vector">what is vector</h2>
<p>vector는 크기(magnitude)와 방향(direction)을 가지고 있고, 2, 3, 4 차원 너머를 수학적으로 표현할 수 있다.</p>
<section id="vector의-수학적-표현" class="level3">
<h3 class="anchored" data-anchor-id="vector의-수학적-표현">vector의 수학적 표현</h3>
<p>vector는 ordered list인 tuple 형태로 표현할 수 있다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7Bv%7D%20=%0A%5Cbegin%7Bbmatrix%7D%0A3%20%5C%5C%0A4%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p>domain과 dimension에 따라 vector는 다음과 같이 표현할 수 있다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7Bv%7D%20%E2%88%88%20R%5E2%0A"></p>
<ul>
<li>1차원: <img src="https://latex.codecogs.com/png.latex?R%5E1"></li>
<li>2차원: <img src="https://latex.codecogs.com/png.latex?R%5E2"></li>
<li>3차원: <img src="https://latex.codecogs.com/png.latex?R%5E3"></li>
<li>n차원: <img src="https://latex.codecogs.com/png.latex?R%5En"></li>
</ul>
</section>
</section>
<section id="vector의-합" class="level2">
<h2 class="anchored" data-anchor-id="vector의-합">vector의 합</h2>
<p>vector의 합은 각 성분별로 더한 결과를 반환한다.</p>
<section id="기하학적-의미" class="level3">
<h3 class="anchored" data-anchor-id="기하학적-의미">기하학적 의미</h3>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bbmatrix%7D%0A3%20%5C%5C%0A2%0A%5Cend%7Bbmatrix%7D%20+%0A%5Cbegin%7Bbmatrix%7D%0A-2%20%5C%5C%0A1%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p>위의 수식을 좌표평면에 나타나면 다음과 같다.</p>
<div id="c919db24" class="cell" data-execution_count="1">
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/선형대수/notes/4_files/figure-html/cell-2-output-1.png" width="591" height="434" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>끝점을 다 더한 좌표와 시작 점을 연결한 벡터인 <code>초록색 화살표</code>가 두 벡터의 합이 된다.</p>
</section>
</section>
<section id="vector의-scalar-곱" class="level2">
<h2 class="anchored" data-anchor-id="vector의-scalar-곱">vector의 scalar 곱</h2>
<p>vector에 scalar, 즉 숫자 하나를 곱하면 무슨 일이 생길까?</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A2%20*%20%5Cbegin%7Bbmatrix%7D%0A2%20%5C%5C%0A1%0A%5Cend%7Bbmatrix%7D%20=%0A%5Cbegin%7Bbmatrix%7D%0A4%20%5C%5C%0A2%0A%5Cend%7Bbmatrix%7D%0A"> <img src="https://latex.codecogs.com/png.latex?%0A-2%20*%20%5Cbegin%7Bbmatrix%7D%0A2%20%5C%5C%0A1%0A%5Cend%7Bbmatrix%7D%20=%0A%5Cbegin%7Bbmatrix%7D%0A-4%20%5C%5C%0A-2%0A%5Cend%7Bbmatrix%7D%0A"></p>
</section>
<section id="vector의-차" class="level2">
<h2 class="anchored" data-anchor-id="vector의-차">vector의 차</h2>
<p>vector의 차는 각 성분별로 뺀 결과를 반환한다.</p>
<p>기하학적으로는 두 벡터의 끝점을 연결한 벡터가 된다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bx%7D%20-%20%5Cvec%7By%7D">는 y에서 x를 연결한 벡터가 된다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cvec%7By%7D%20-%20%5Cvec%7Bx%7D">는 x에서 y를 연결한 벡터가 된다.</p>
</section>
<section id="단위-벡터" class="level2">
<h2 class="anchored" data-anchor-id="단위-벡터">단위 벡터</h2>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7Bv%7D%20=%20%5Cbegin%7Bbmatrix%7D%0A3%20%5C%5C%0A4%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p>위의 벡터를 단위 벡터의 합으로 만들면 다음과 같다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Chat%7Bi%7D%20=%20%5Cbegin%7Bbmatrix%7D%0A1%20%5C%5C%0A0%0A%5Cend%7Bbmatrix%7D,%0A%5Chat%7Bj%7D%20=%20%5Cbegin%7Bbmatrix%7D%0A0%20%5C%5C%0A1%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7Bv%7D%20=%203%5Chat%7Bi%7D%20+%204%5Chat%7Bj%7D%0A"></p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>Scalar 배를 한 기저 벡터끼리 더하면 모든 2차원 좌표를 표현할 수 있다.</p>
</div>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>선형 대수</category>
  <guid>https://cryscham123.github.io/posts/02_areas/선형대수/notes/4.html</guid>
  <pubDate>Wed, 29 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>cloud-1 코드 설명</title>
  <link>https://cryscham123.github.io/posts/02_areas/42_seoul/notes/6.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-outer-1.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul outer 과제</figcaption>
</figure>
</div>
<p><a href="../../../../posts/02_areas/42_seoul/notes/5.html">개념 설명</a>에 이어서 진행하도록 하겠습니다.</p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>전체 코드는 <a href="https://github.com/cryscham123/cloud-1">github repo</a>에서 확인하실 수 있습니다.</p>
</div>
</div>
</div>
</section>
<section id="프로젝트-및-구현-설명" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-및-구현-설명">프로젝트 및 구현 설명</h2>
<section id="pre-requirements" class="level3">
<h3 class="anchored" data-anchor-id="pre-requirements">pre requirements</h3>
<p>이 프로젝트를 진행하기 위해 필요한 것들은 다음과 같습니다.</p>
<ul>
<li>AWS IAM 계정</li>
<li>Packer</li>
<li>Terraform</li>
<li>Ansible</li>
<li>jq</li>
<li>boto3</li>
</ul>
</section>
<section id="build" class="level3">
<h3 class="anchored" data-anchor-id="build">build</h3>
<p>최종 build는 (42 seoul 사람에게 익숙한) <code>makefile</code>을 사용했습니다.</p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>제가 아직 로컬에서 돌려볼만한 다른 build 툴을 배우지 않아서 makefile을 사용하긴 했지만, 사실 c언어도 아니고..이 과제 구현에서 이 tool이 그렇게 어울리진 않은거 같긴 합니다.</p>
</div>
</div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>.env</strong></pre>
</div>
<div class="sourceCode" id="cb1" data-filename=".env" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># only 1 line variable is allowed</span></span>
<span id="cb1-2"></span>
<span id="cb1-3">AWS_REGION<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-4">AWS_ACCESS_KEY_ID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-5">AWS_SECRET_ACCESS_KEY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-6">SERVER_INSTANCE_COUNT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># public subnet에 접근할 수 있는 ip address를 지정해줍니다.</span></span>
<span id="cb1-9">SSH_IP<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># public subnet에 접근할 때 사용할 ssh key path를 지정해줍니다.</span></span>
<span id="cb1-12">SSH_PUBLIC_KEY_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-13">SSH_PRIVATE_KEY_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># docker compose setting</span></span>
<span id="cb1-16">MYSQL_USER<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-17">MYSQL_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-18">MYSQL_ROOT_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-19">DATABASE_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-20">SITE_TITLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-21">ADMIN_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-22">ADMIN_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-23">ADMIN_EMAIL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-24">USER_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-25">USER_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb1-26">USER_EMAIL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Makefile</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="Makefile" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .env의 내용들을 makefile의 변수로 load 해줍니다.</span></span>
<span id="cb2-2"></span>
<span id="cb2-3">include .env</span>
<span id="cb2-4">export</span></code></pre></div>
</div>
<p>먼저 <code>필요한 변수들</code>을 모두 <code>.env</code>에 저장해 <code>한번에 관리</code>할 수 있게 구현했습니다. 저장된 .env 내용은 makefile에서 위의 명령어로 불러와 build 명령어 실행시 사용할 수 있게 했습니다.</p>
<p>makefile이 .env 파일을 읽을 때 한 줄씩 읽기 때문에, 위의 방식으로 구현하면 여러 줄에 걸친 환경변수는 사용하기 어려울 수 있습니다. (그럴땐 그냥 makefile 말고 다른 tool을 쓰면 됩니다)</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Makefile</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="Makefile" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">.PHONY: provision deploy <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span> destroy re build_ami</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>: build_ami provision deploy</span>
<span id="cb3-4"></span>
<span id="cb3-5">build_ami: packer</span>
<span id="cb3-6">    packer init $(PACKER_PATH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>database.pkr.hcl</span>
<span id="cb3-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@PKR_VAR_AWS_REGION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(AWS_REGION) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-8">    PKR_VAR_MYSQL_USER<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(MYSQL_USER) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-9">    PKR_VAR_MYSQL_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(MYSQL_PASSWORD) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-10">    PKR_VAR_DATABASE_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(DATABASE_NAME) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-11">    PKR_VAR_MYSQL_ROOT_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(MYSQL_ROOT_PASSWORD) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-12">    packer build $(PACKER_PATH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>database.pkr.hcl</span>
<span id="cb3-13"></span>
<span id="cb3-14">provision: build_ami terraform</span>
<span id="cb3-15">    terraform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>chdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(PROVISION_PATH) init</span>
<span id="cb3-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@TF_VAR_AWS_REGION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(AWS_REGION) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-17">    TF_VAR_SERVER_INSTANCE_COUNT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SERVER_INSTANCE_COUNT) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-18">    TF_VAR_SSH_IP<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SSH_IP) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-19">    TF_VAR_SSH_PUBLIC_KEY_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SSH_PUBLIC_KEY_PATH) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-20">    terraform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>chdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(PROVISION_PATH) <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>auto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>approve</span>
<span id="cb3-21"></span>
<span id="cb3-22">deploy: ansible</span>
<span id="cb3-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@DB_PRIVATE_IP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$(shell terraform -chdir=$(PROVISION_PATH) output -json db_private_ip | jq -r '.[]' | tr '</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' ' ')"</span> \</span>
<span id="cb3-24">    ANSIBLE_HOST_KEY_CHECKING<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-25">    ANSIBLE_REMOTE_USER<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ubuntu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-26">    AWS_DEFAULT_REGION<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(AWS_REGION) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-27">    ANSIBLE_PYTHON_INTERPRETER<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auto_silent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-28">    ansible<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>playbook <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-29">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i $(DEPLOY_PATH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>inventories <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-30">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>private<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SSH_PRIVATE_KEY_PATH) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-31">    $(DEPLOY_PATH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>server.yml </span></code></pre></div>
</div>
<p>build 과정은 <code>ami 생성</code>, <code>provision</code>, <code>ansible deploy</code> 순서로 진행됩니다.</p>
<p>각 과정에 필요한 변수들은 <code>명령어 수행 시 환경변수로 제공</code>해줍니다. 대표적으로 ansible의 경우, provision 이후 생성된 database ec2의 private ip를 전달하고 있습니다.</p>
</section>
<section id="packer-코드" class="level3">
<h3 class="anchored" data-anchor-id="packer-코드">Packer 코드</h3>
<p>이 프로젝트에서는 데이터베이스 서버를 Private subnet에 위치시키고, Public subnet의 EC2만 이 데이터베이스에 접근할 수 있도록 설계했습니다. <code>Private subnet에 있는 서버</code>는 SSH 접근이 제한되기 때문에 <code>Ansible로 직접 설정하기는 어렵습니다.</code> 이런 경우 <code>Packer로 미리 설정된 AMI를 생성</code>하는 방법을 생각해볼 수 있습니다.</p>
<p>구현한 Packer 파일 구조는 아래와 같습니다.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">packer/</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> database.pkr.hcl</span>
<span id="cb4-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> ansible/</span>
<span id="cb4-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> _requirements/                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># docker compose setting files</span></span>
<span id="cb4-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> roles/setting_docker/tasks</span>
<span id="cb4-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   └── main.yml</span>
<span id="cb4-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> database.yml                        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># playbook</span></span></code></pre></div>
<p>먼저 <code>기본 이미지로 Ubuntu 20.04</code>를 사용하도록 작성했습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>database.pkr.hcl</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="database.pkr.hcl" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">source <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"amazon-ebs"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"database"</span> {</span>
<span id="cb5-2">  region  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var.AWS_REGION</span>
<span id="cb5-3">  profile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"default"</span></span>
<span id="cb5-4"></span>
<span id="cb5-5">  ami_name      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hyunghki-database-${formatdate("</span>YYYYMMDDhhmmss<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", timestamp())}"</span></span>
<span id="cb5-6">  instance_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t2.micro"</span></span>
<span id="cb5-7">  source_ami_filter {</span>
<span id="cb5-8">    filters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb5-9">      name                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"</span></span>
<span id="cb5-10">      root<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ebs"</span></span>
<span id="cb5-11">      virtualization<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hvm"</span></span>
<span id="cb5-12">    }</span>
<span id="cb5-13">    most_recent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> true</span>
<span id="cb5-14">    owners      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"099720109477"</span>]</span>
<span id="cb5-15">  }</span>
<span id="cb5-16">  ssh_username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu"</span></span>
<span id="cb5-17">}</span></code></pre></div>
</div>
<p>Packer는 기본적으로 이미지 생성을 위한 최소한의 기능만 제공하지만, 다양한 플러그인을 지원합니다. 여기서는 <code>Ansible 플러그인을 사용</code>하여 데이터베이스 서버 설정을 자동화했습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>database.pkr.hcl</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="database.pkr.hcl" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">build {</span>
<span id="cb6-2">  sources <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"source.amazon-ebs.database"</span>]</span>
<span id="cb6-3"></span>
<span id="cb6-4">  provisioner <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ansible"</span> {</span>
<span id="cb6-5">    playbook_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{path.root}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/ansible/database.yml"</span></span>
<span id="cb6-6">    user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu"</span></span>
<span id="cb6-7">    ansible_env_vars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb6-8">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ANSIBLE_HOST_KEY_CHECKING=False"</span>,</span>
<span id="cb6-9">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MYSQL_USER=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.MYSQL_USER}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb6-10">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MYSQL_PASSWORD=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.MYSQL_PASSWORD}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb6-11">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATABASE_NAME=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.DATABASE_NAME}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb6-12">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MYSQL_ROOT_PASSWORD=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.MYSQL_ROOT_PASSWORD}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb6-13">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ANSIBLE_PYTHON_INTERPRETER=auto_silent"</span></span>
<span id="cb6-14">    ]</span>
<span id="cb6-15">  }</span>
<span id="cb6-16">}</span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>ansible/database.yml</strong></pre>
</div>
<div class="sourceCode" id="cb7" data-filename="ansible/database.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> hosts: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span></span>
<span id="cb7-2">  gather_facts: false</span>
<span id="cb7-3">  become: true</span>
<span id="cb7-4">  roles:</span>
<span id="cb7-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># docker compose를 machine에 설치해줍니다.</span></span>
<span id="cb7-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> role: setting_docker</span>
<span id="cb7-7"></span>
<span id="cb7-8">  tasks:</span>
<span id="cb7-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># docker compose에 필요한 파일들을 옮겨줍니다.</span></span>
<span id="cb7-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: copy_requirements</span>
<span id="cb7-11">      copy:</span>
<span id="cb7-12">        src: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./_requirements/"</span></span>
<span id="cb7-13">        dest: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> ansible_user </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/app/"</span></span>
<span id="cb7-14">        mode: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0755'</span></span>
<span id="cb7-15">        directory_mode: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0755'</span></span>
<span id="cb7-16"></span>
<span id="cb7-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 적절한 환경변수와 함께 docker compose 명령어를 실행합니다.</span></span>
<span id="cb7-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: execute docker compose</span>
<span id="cb7-19">      shell:</span>
<span id="cb7-20">        cmd: docker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>compose up <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>d</span>
<span id="cb7-21">        chdir: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> ansible_user </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/app/"</span></span>
<span id="cb7-22">      environment:</span>
<span id="cb7-23">        MYSQL_USER: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'MYSQL_USER') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb7-24">        MYSQL_PASSWORD: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'MYSQL_PASSWORD') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb7-25">        DATABASE_NAME: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'DATABASE_NAME') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb7-26">        MYSQL_ROOT_PASSWORD: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'MYSQL_ROOT_PASSWORD') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span></code></pre></div>
</div>
<p>이렇게 Ansible과 Packer를 조합하면 <code>멱등성이 보장되는 안정적인 서버 이미지를 생성</code>할 수 있습니다.</p>
<p>참고로 packer에서 ansible plugin을 사용할 때 <code>taget host를 ami가 build되는 임시 EC2로 간주</code>하기 때문에, <code>inventory는 사용하지 않습니다.</code> 자세한 내용은 ansible part를 참고해주세요.</p>
</section>
<section id="terraform-코드" class="level3">
<h3 class="anchored" data-anchor-id="terraform-코드">Terraform 코드</h3>
<p>이제 본격적으로 provision을 해보겠습니다. 잠시 전체적인 구조를 다시 한번 보겠습니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-05-20-27-45.png" class="img-fluid figure-img"></p>
<figcaption>구현 aws 구조</figcaption>
</figure>
</div>
<p>필요한 리소스는 VPC, subnet, security group, ec2 입니다.</p>
<p><code>server ec2</code>와 <code>database ec2</code>는 환경변수 SERVER_INSTANCE_COUNT에 지정된 갯수 만큼 생성됩니다. database ec2는 이전 단계에서 생성한 ami를 사용해줍니다.</p>
<p>public, private subnet의 갯수는 임의로 생성했습니다.</p>
<p>파일 구조는 아래와 같습니다.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">terraform/</span></span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> main/</span>
<span id="cb8-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   ├── main.tf</span>
<span id="cb8-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   ├── data.tf</span>
<span id="cb8-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   ├── output.tf</span>
<span id="cb8-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   └── variables.tf</span>
<span id="cb8-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> modules/network/</span>
<span id="cb8-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> main.tf</span>
<span id="cb8-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> output.tf</span>
<span id="cb8-10">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> variables.tf</span></code></pre></div>
<p>main.tf에서는 <code>aws_instance</code>를 생성하고, 그 외 VPC, subnet과 같은 리소스는 <code>network module</code>로 분리해서 생성했습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>modules/network/main.tf</strong></pre>
</div>
<div class="sourceCode" id="cb9" data-filename="modules/network/main.tf" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_vpc"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"main_vpc"</span> {</span>
<span id="cb9-2">  cidr_block           <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10.0.0.0/16"</span></span>
<span id="cb9-3">  instance_tenancy     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"default"</span></span>
<span id="cb9-4">  enable_dns_hostnames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb9-5">}</span>
<span id="cb9-6"></span>
<span id="cb9-7">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_subnet"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"public-1"</span> {</span>
<span id="cb9-8">  vpc_id                  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_vpc.main_vpc.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb9-9">  cidr_block              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10.0.1.0/24"</span></span>
<span id="cb9-10">  map_public_ip_on_launch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb9-11">  availability_zone       <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.AWS_REGION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">a"</span></span>
<span id="cb9-12">}</span>
<span id="cb9-13"></span>
<span id="cb9-14">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_subnet"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"public-2"</span> {</span>
<span id="cb9-15">  vpc_id                  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_vpc.main_vpc.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb9-16">  cidr_block              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10.0.2.0/24"</span></span>
<span id="cb9-17">  map_public_ip_on_launch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb9-18">  availability_zone       <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.AWS_REGION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">c"</span></span>
<span id="cb9-19">}</span>
<span id="cb9-20"></span>
<span id="cb9-21">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_subnet"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"private"</span> {</span>
<span id="cb9-22">  vpc_id                  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_vpc.main_vpc.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb9-23">  cidr_block              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10.0.3.0/24"</span></span>
<span id="cb9-24">  map_public_ip_on_launch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"false"</span></span>
<span id="cb9-25">  availability_zone       <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.AWS_REGION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">a"</span></span>
<span id="cb9-26">}</span></code></pre></div>
</div>
<p>먼저 VPC와 subnet을 생성합니다.</p>
<p>cidr_block은 private ip 중에서 겹치지 않는 범위로 지정해줍니다.</p>
<div class="callout callout-style-simple callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Private IP ranges
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Class A: 10.0.0.0–10.255.255.255</li>
<li>Class B: 172.16.0.0–172.31.255.255</li>
<li>Class C: 192.168.0.0–192.168.255.255</li>
</ul>
</div>
</div>
<p>Public subnet이 인터넷과 통신하기 위해서는 <code>Internet Gateway</code>와 <code>Route Table</code>이 필요합니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>modules/network/main.tf</strong></pre>
</div>
<div class="sourceCode" id="cb10" data-filename="modules/network/main.tf" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_internet_gateway"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gate_way"</span> {</span>
<span id="cb10-2">  vpc_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_vpc.main_vpc.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb10-3">}</span>
<span id="cb10-4"></span>
<span id="cb10-5">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_route_table"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"public_route_table"</span> {</span>
<span id="cb10-6">  vpc_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_vpc.main_vpc.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb10-7"></span>
<span id="cb10-8">  route {</span>
<span id="cb10-9">    cidr_block <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.0.0.0/0"</span></span>
<span id="cb10-10">    gateway_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_internet_gateway.gate_way.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb10-11">  }</span>
<span id="cb10-12">}</span>
<span id="cb10-13"></span>
<span id="cb10-14">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_route_table_association"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"public-1"</span> {</span>
<span id="cb10-15">  subnet_id      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_subnet.public<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb10-16">  route_table_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_route_table.public_route_table.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb10-17">}</span>
<span id="cb10-18"></span>
<span id="cb10-19">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_route_table_association"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"public-2"</span> {</span>
<span id="cb10-20">  subnet_id      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_subnet.public<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb10-21">  route_table_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_route_table.public_route_table.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb10-22">}</span></code></pre></div>
</div>
<p>모든 외부 트래픽을 Internet Gateway로 보내도록 Route Table을 설정하고, 이를 두 개의 Public subnet에 연결했습니다.</p>
<p>참고로 VPC 내부 통신은 자동으로 라우팅됩니다. 같은 VPC 안에 있는 리소스들은 VPC의 기본 라우팅 테이블을 통해 서로 통신할 수 있기 때문에 내부 통신을 위한 route table은 따로 생성하지 않았습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>modules/network/main.tf</strong></pre>
</div>
<div class="sourceCode" id="cb11" data-filename="modules/network/main.tf" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_security_group"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"server_sg"</span> {</span>
<span id="cb11-2">  vpc_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_vpc.main_vpc.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb11-3">  name   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"server_sg"</span></span>
<span id="cb11-4"></span>
<span id="cb11-5">  ingress {</span>
<span id="cb11-6">    from_port   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span></span>
<span id="cb11-7">    to_port     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span></span>
<span id="cb11-8">    protocol    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tcp"</span></span>
<span id="cb11-9">    cidr_blocks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var.SSH_CIDR_BLOCKS</span>
<span id="cb11-10">  }</span>
<span id="cb11-11"></span>
<span id="cb11-12">  ingress {</span>
<span id="cb11-13">    from_port   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb11-14">    to_port     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb11-15">    protocol    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tcp"</span></span>
<span id="cb11-16">    cidr_blocks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.0.0.0/0"</span>]</span>
<span id="cb11-17">  }</span>
<span id="cb11-18"></span>
<span id="cb11-19">  ingress {</span>
<span id="cb11-20">    from_port   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">443</span></span>
<span id="cb11-21">    to_port     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">443</span></span>
<span id="cb11-22">    protocol    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tcp"</span></span>
<span id="cb11-23">    cidr_blocks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.0.0.0/0"</span>]</span>
<span id="cb11-24">  }</span>
<span id="cb11-25"></span>
<span id="cb11-26">  egress {</span>
<span id="cb11-27">    from_port   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-28">    to_port     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-29">    protocol    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-1"</span></span>
<span id="cb11-30">    cidr_blocks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.0.0.0/0"</span>]</span>
<span id="cb11-31">  }</span>
<span id="cb11-32">}</span>
<span id="cb11-33"></span>
<span id="cb11-34">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_security_group"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"database_sg"</span> {</span>
<span id="cb11-35">  vpc_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_vpc.main_vpc.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb11-36">  name   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"efs_sg"</span></span>
<span id="cb11-37"></span>
<span id="cb11-38">  ingress {</span>
<span id="cb11-39">    from_port       <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3306</span></span>
<span id="cb11-40">    to_port         <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3306</span></span>
<span id="cb11-41">    protocol        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tcp"</span></span>
<span id="cb11-42">    security_groups <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [aws_security_group.server_sg.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>]</span>
<span id="cb11-43">  }</span>
<span id="cb11-44"></span>
<span id="cb11-45">  egress {</span>
<span id="cb11-46">    from_port   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-47">    to_port     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-48">    protocol    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-1"</span></span>
<span id="cb11-49">    cidr_blocks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.0.0.0/0"</span>]</span>
<span id="cb11-50">  }</span>
<span id="cb11-51">}</span></code></pre></div>
</div>
<p>마지막으로 security group입니다.</p>
<p>server ec2의 ssh 접근은 환경변수를 통해 ansible을 실행하는 머신의 ip에서만 접근 가능하도록 설정해줬습니다.</p>
<p>database ec2는 server ec2만 접근할 수 있도록 설정했습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>main/main.tf</strong></pre>
</div>
<div class="sourceCode" id="cb12" data-filename="main/main.tf" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사용자가 지정한 경로의 ssh key를 사용해 ec2에 접근 가능하도록 설정했습니다.</span></span>
<span id="cb12-2">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_key_pair"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_labtop"</span> {</span>
<span id="cb12-3">  key_name   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_labtop"</span></span>
<span id="cb12-4">  public_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>(var.SSH_PUBLIC_KEY_PATH)</span>
<span id="cb12-5">}</span>
<span id="cb12-6"></span>
<span id="cb12-7">module <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"network"</span> {</span>
<span id="cb12-8">  source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../modules/network"</span></span>
<span id="cb12-9"></span>
<span id="cb12-10">  AWS_REGION           <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var.AWS_REGION</span>
<span id="cb12-11">  SSH_CIDR_BLOCKS      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.SSH_IP}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/32"</span>]</span>
<span id="cb12-12">}</span>
<span id="cb12-13"></span>
<span id="cb12-14">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_instance"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"server"</span> {</span>
<span id="cb12-15">  count         <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var.SERVER_INSTANCE_COUNT</span>
<span id="cb12-16">  ami           <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.aws_ami.latest_ubuntu.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb12-17">  instance_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t2.micro"</span></span>
<span id="cb12-18"></span>
<span id="cb12-19">  vpc_security_group_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [module.network.server_sg_id]</span>
<span id="cb12-20">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># subnet은 2개를 번걸아가면서 사용하도록 설정했습니다.</span></span>
<span id="cb12-21">  subnet_id              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> module.network.public_subnets[count.index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb12-22"></span>
<span id="cb12-23">  key_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_key_pair.my_labtop.key_name</span>
<span id="cb12-24">  tags <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb12-25">    Name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"serverNode"</span></span>
<span id="cb12-26">  }</span>
<span id="cb12-27">}</span>
<span id="cb12-28"></span>
<span id="cb12-29">resource <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_instance"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"database"</span> {</span>
<span id="cb12-30">  count         <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var.SERVER_INSTANCE_COUNT</span>
<span id="cb12-31">  ami           <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.aws_ami.database_ami.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb12-32">  instance_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t2.micro"</span></span>
<span id="cb12-33"></span>
<span id="cb12-34">  vpc_security_group_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [module.network.database_sg_id]</span>
<span id="cb12-35">  subnet_id              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> module.network.private_subnets</span>
<span id="cb12-36"></span>
<span id="cb12-37">  key_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aws_key_pair.my_labtop.key_name</span>
<span id="cb12-38">  tags <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb12-39">    Name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dbNode"</span></span>
<span id="cb12-40">  }</span>
<span id="cb12-41">}</span></code></pre></div>
</div>
<p>최종적으로 main.tf에서 network module을 불러와서 필요한 리소스를 생성한 후, server와 database ec2를 생성했습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>main/data.tf</strong></pre>
</div>
<div class="sourceCode" id="cb13" data-filename="main/data.tf" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">data <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_ami"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latest_ubuntu"</span> {</span>
<span id="cb13-2">  most_recent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> true</span>
<span id="cb13-3"></span>
<span id="cb13-4">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span> {</span>
<span id="cb13-5">    name   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span></span>
<span id="cb13-6">    values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"</span>]</span>
<span id="cb13-7">  }</span>
<span id="cb13-8"></span>
<span id="cb13-9">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span> {</span>
<span id="cb13-10">    name   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"virtualization-type"</span></span>
<span id="cb13-11">    values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hvm"</span>]</span>
<span id="cb13-12">  }</span>
<span id="cb13-13"></span>
<span id="cb13-14">  owners <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"099720109477"</span>]</span>
<span id="cb13-15">}</span>
<span id="cb13-16"></span>
<span id="cb13-17">data <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aws_ami"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"database_ami"</span> {</span>
<span id="cb13-18">  most_recent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> true</span>
<span id="cb13-19">  owners <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"self"</span>]</span>
<span id="cb13-20">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span> {</span>
<span id="cb13-21">    name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span></span>
<span id="cb13-22">    values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hyunghki-database-*"</span>]</span>
<span id="cb13-23">  }</span>
<span id="cb13-24">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span> {</span>
<span id="cb13-25">    name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"root-device-type"</span></span>
<span id="cb13-26">    values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ebs"</span>]</span>
<span id="cb13-27">  }</span>
<span id="cb13-28">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span> {</span>
<span id="cb13-29">    name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"virtualization-type"</span></span>
<span id="cb13-30">    values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hvm"</span>]</span>
<span id="cb13-31">  }</span>
<span id="cb13-32">}</span></code></pre></div>
</div>
<p>server ec2는 기본 ubuntu 20.04 이미지를 사용하고, database ec2는 이전에 생성한 ami를 사용했습니다.</p>
</section>
<section id="ansible-코드" class="level3">
<h3 class="anchored" data-anchor-id="ansible-코드">ansible 코드</h3>
<p>이제 필요한 설정을 진행하겠습니다.</p>
<p>파일 구조는 아래와 같습니다.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">terraform/</span></span>
<span id="cb14-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> _requirements/                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># docker compose setting files</span></span>
<span id="cb14-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> inventories/</span>
<span id="cb14-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   └── aws_ec2.yml</span>
<span id="cb14-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> roles/setting_docker/tasks</span>
<span id="cb14-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   └── main.yml</span>
<span id="cb14-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> server.yml</span></code></pre></div>
<p>먼저 용어를 알아야 합니다.</p>
<ol type="1">
<li><p>Inventory (인벤토리)</p>
<p>인벤토리는 Ansible이 관리할 호스트(서버)의 목록입니다. 호스트를 그룹으로 묶어 관리할 수 있습니다.</p></li>
<li><p>Playbook (플레이북)</p>
<p>플레이북은 Ansible에서 작업을 정의하는 YAML 파일입니다. 플레이북은 하나 이상의 <code>플레이</code>로 구성되며, 각 플레이는 특정 호스트 그룹에 대해 수행할 작업(task)을 정의합니다.</p></li>
<li><p>Role (롤)</p>
<p>롤은 Ansible에서 재사용 가능한 구성 단위입니다. 플레이북을 모듈화하고 구조화하여 재사용성을 높이는 데 사용됩니다.</p></li>
</ol>
<p>Inventory에서 server 그룹을 정의한 후, playbook으로 docker compose 환경을 설정하겠습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>aws_ec2.yml</strong></pre>
</div>
<div class="sourceCode" id="cb15" data-filename="aws_ec2.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">plugin: aws_ec2</span>
<span id="cb15-2">keyed_groups:</span>
<span id="cb15-3">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> key: tags</span>
<span id="cb15-4">compose:</span>
<span id="cb15-5">  ansible_host: public_ip_address</span>
<span id="cb15-6">leading_separator: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb15-7">filters:</span>
<span id="cb15-8">  instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>name: running</span></code></pre></div>
</div>
<p>AWS EC2 동적 인벤토리 설정입니다. Terraform으로 생성한 EC2 인스턴스들을 자동으로 관리할 수 있습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>server.yml</strong></pre>
</div>
<div class="sourceCode" id="cb16" data-filename="server.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> hosts: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Name_serverNode"</span></span>
<span id="cb16-2">  gather_facts: false</span>
<span id="cb16-3">  become: true</span>
<span id="cb16-4">  roles:</span>
<span id="cb16-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> role: setting_docker</span>
<span id="cb16-6">  tasks:</span>
<span id="cb16-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: copy_requirements</span>
<span id="cb16-8">      copy:</span>
<span id="cb16-9">        src: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./_requirements/"</span></span>
<span id="cb16-10">        dest: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> ansible_user </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/app/"</span></span>
<span id="cb16-11">        mode: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0755'</span></span>
<span id="cb16-12">        directory_mode: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0755'</span></span>
<span id="cb16-13"></span>
<span id="cb16-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: Split array values <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> DB_PRIVATE_IP</span>
<span id="cb16-15">      set_fact:</span>
<span id="cb16-16">        target: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'DB_PRIVATE_IP') | split(' ') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-17"></span>
<span id="cb16-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: execute docker compose</span>
<span id="cb16-19">      shell:</span>
<span id="cb16-20">        cmd: docker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>compose up <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>d</span>
<span id="cb16-21">        chdir: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> ansible_user </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/app/"</span></span>
<span id="cb16-22">      environment:</span>
<span id="cb16-23">        DOMAIN_NAME: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> ansible_host </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-24">        MYSQL_USER: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'MYSQL_USER') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-25">        MYSQL_PASSWORD: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'MYSQL_PASSWORD') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-26">        DATABASE_NAME: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'DATABASE_NAME') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-27">        SITE_TITLE: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'SITE_TITLE') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-28">        ADMIN_NAME: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'ADMIN_NAME') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-29">        ADMIN_PASSWORD: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'ADMIN_PASSWORD') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-30">        ADMIN_EMAIL: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'ADMIN_EMAIL') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-31">        USER_NAME: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'USER_NAME') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-32">        USER_PASSWORD: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'USER_PASSWORD') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-33">        USER_EMAIL: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> lookup('env', 'USER_EMAIL') </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-34">        DB_PRIVATE_IP: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> target[ansible_play_hosts.index(inventory_hostname)] </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-35"></span>
<span id="cb16-36">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span> done message</span>
<span id="cb16-37">      debug:</span>
<span id="cb16-38">        msg: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> ansible_host </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span></code></pre></div>
</div>
<p>’Name’이 ’serverNode’인 인스턴스들만 선택하여 설정을 진행하겠습니다.</p>
</section>
</section>
<section id="실행" class="level2">
<h2 class="anchored" data-anchor-id="실행">실행</h2>
<p>먼저 .env 파일에 환경변수를 설정해줍니다.</p>
<p>ip 정보도 알아낸 후, SSH_IP에 설정해줍니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-05-20-30-17.png" class="img-fluid figure-img"></p>
<figcaption>naver에 내 ip 검색</figcaption>
</figure>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>.env</strong></pre>
</div>
<div class="sourceCode" id="cb17" data-filename=".env" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># only 1 line variable is allowed</span></span>
<span id="cb17-2">AWS_REGION<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>northeast<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb17-3">AWS_ACCESS_KEY_ID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=********************</span></span>
<span id="cb17-4">AWS_SECRET_ACCESS_KEY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=********************</span></span>
<span id="cb17-5">SERVER_INSTANCE_COUNT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb17-6">SSH_IP<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">121.135.181.56</span></span>
<span id="cb17-7">SSH_PUBLIC_KEY_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=~/</span>.ssh<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>id_rsa.pub</span>
<span id="cb17-8">SSH_PRIVATE_KEY_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=~/</span>.ssh<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>id_rsa</span>
<span id="cb17-9">MYSQL_USER<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dudu</span>
<span id="cb17-10">MYSQL_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>secret</span>
<span id="cb17-11">MYSQL_ROOT_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>secret</span>
<span id="cb17-12">DATABASE_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cloud</span>
<span id="cb17-13">SITE_TITLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hyunghki blog'</span></span>
<span id="cb17-14">ADMIN_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>admin</span>
<span id="cb17-15">ADMIN_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>secret</span>
<span id="cb17-16">ADMIN_EMAIL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>admin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>example.com</span>
<span id="cb17-17">USER_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user</span>
<span id="cb17-18">USER_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>secret</span>
<span id="cb17-19">USER_EMAIL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>example.com</span></code></pre></div>
</div>
<p>그후 make 명령어를 입력하면 자동으로 build가 진행됩니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-05-20-24-46.png" class="img-fluid figure-img"></p>
<figcaption>명령어 실행 결과</figcaption>
</figure>
</div>
<p>build가 완료되면 완료 메세지의 ip로 접속해줍니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-05-20-44-52.png" class="img-fluid figure-img"></p>
<figcaption>접속 페이지</figcaption>
</figure>
</div>
<p>wordpress 접속 페이지가 잘 뜨는 것을 확인할 수 있습니다.</p>
</section>
<section id="결과" class="level2">
<h2 class="anchored" data-anchor-id="결과">결과</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-05-20-19-46.png" class="img-fluid figure-img"></p>
<figcaption>최종 점수</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/02_areas/42_seoul/notes/img/2025-02-05-20-21-13.png" class="img-fluid figure-img"></p>
<figcaption>최종 평가</figcaption>
</figure>
</div>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">outro</h2>
<p>솔직히 일반적으로 사용되는 cloud 구조를 적용한건 아니긴 하지만, 과제에 맞춰서 진행하기 위해 고민하는 과정에서 다양한 구조를 적용해봤는데, 그 과정이 나름 학습에 도움이 된거 같습니다. 이 분야에 공부를 꽤 했고, 그 내용들을 다양하게 고민하며 적용해보고 싶다면 이 프로젝트가 괜찮은 선택지가 될 수도 있어 보입니다.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>aws</category>
  <category>packer</category>
  <category>terraform</category>
  <category>ansible</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/02_areas/42_seoul/notes/6.html</guid>
  <pubDate>Wed, 29 Jan 2025 15:00:00 GMT</pubDate>
</item>
</channel>
</rss>
