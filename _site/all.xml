<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>김형훈의 학습 블로그</title>
<link>https://cryscham123.github.io/all.html</link>
<atom:link href="https://cryscham123.github.io/all.xml" rel="self" type="application/rss+xml"/>
<description>안녕하세요. 김형훈의 학습 블로그 입니다.</description>
<image>
<url>https://cryscham123.github.io/profile.jpg</url>
<title>김형훈의 학습 블로그</title>
<link>https://cryscham123.github.io/all.html</link>
</image>
<generator>quarto-1.5.56</generator>
<lastBuildDate>Tue, 28 Jan 2025 11:52:27 GMT</lastBuildDate>
<item>
  <title>cloud-1</title>
  <link>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/5.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>아직 작성중인 노트입니다.</p>
</div>
</div>
</div>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-outer-1.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul outer 과제</figcaption>
</figure>
</div>
<p>다음 학기 시작 전까지 개념공부만 하면서 시간을 보내려고 하니까 프로젝트가 하고 싶어졌습니다. 원래는 python 과제를 하려고 했는데, 이전에 cloud 과제를 진행하다가 말았던게 기억나서 이어서 해보면 괜찮겠다 생각했습니다.</p>
</section>
<section id="프로젝트-및-구현-설명" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-및-구현-설명">프로젝트 및 구현 설명</h2>
<section id="개요" class="level3">
<h3 class="anchored" data-anchor-id="개요">개요</h3>
<p><a href="https://cdn.intra.42.fr/pdf/pdf/147805/en.subject.pdf">과제 명세서</a></p>
<p>참고한 자료는 다음과 같습니다:</p>
<ul>
<li><a href="https://www.udemy.com/course/aws-certified-solutions-architect-associate-saa-c03/">AWS SAA Udemy 강의</a></li>
<li><a href="https://www.udemy.com/course/terraform-and-ansible/?utm_campaign=2025-01-21&amp;utm_content=promo&amp;utm_medium=4897172&amp;utm_source=email-sendgrid&amp;utm_term=38475056">ansible terraform Udemy 강의</a></li>
</ul>
<p>이 강의들도 본 지 1년이 다되어가긴 하지만..과제할 때 사용한 제 배경지식이 여기서 나온거니까요. 과제를 진행하실 분들은 한번 수강해보시면 도움이 될 것 같습니다.</p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>이 포스팅에서 docker와 nginx, wordpress, mysql 구조에 대한 설명은 생략하겠습니다.<br>
전체 코드는 <a href="https://github.com/cryscham123/cloud-1">github repo</a>에서 확인하실 수 있습니다.</p>
</div>
</div>
</div>
</section>
<section id="전체적인-구조" class="level3">
<h3 class="anchored" data-anchor-id="전체적인-구조">전체적인 구조</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://snipboard.io/LxOGgU.jpg" class="img-fluid figure-img"></p>
<figcaption>구현 aws 구조</figcaption>
</figure>
</div>
<p>Public subnet의 EC2들에 대한 ssh 접근은 관리용 컴퓨터에서만(terraform, ansible 코드가 실행되는 컴퓨터) 접근이 가능하도록 제한했고, MySQL의 데이터는 Private subnet의 EC2에 저장하되 Public subnet의 EC2만 접근할 수 있도록 설정했습니다.</p>
<p>실제 프로덕션 환경이라면 위와 같은 구조로는 설계하지 않습니다. 일단 EC2 머신들을 Auto Scaling Group으로 묶고, 그 앞에 Network Load Balancer를 두어 단일 엔드포인트로 관리하는 것이 좋습니다. 또한 Database는 AWS RDS를 이용하고, WordPress의 파일 시스템은 EFS나 S3를 활용해 Stateless하게 구현하는게 좋습니다.</p>
<p>제 구현에서는 <code>각 서버가 독립적인 상태와 엔드포인트</code>를 가지고 있습니다.</p>
<p>그렇게 한 이유는 일단 <code>aws free tier</code> 서비스만으로 과제를 구현하려고 했던게 제일 크고요..(NLB는 사용할 수 없었습니다.) 나머지는 과제 제약사항 때문인데,</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://snipboard.io/Tx21SW.jpg" class="img-fluid figure-img"></p>
<figcaption>과제 제약사항</figcaption>
</figure>
</div>
<p>모든 프로세스는 컨테이너 안에서 동작해야 한다는 제약때문에, <code>aws RDS</code>는 <code>사용할 수 없었습니다</code>. 그리고 database는 public internet에서 접근할 수 없다고 해서, <code>db</code>는 <code>private subnet</code>의 ec2에서 돌아가게 설계했습니다.</p>
<p>IaC 설명, ansible, packer, terraform 설명</p>
</section>
<section id="pakcer-코드" class="level3">
<h3 class="anchored" data-anchor-id="pakcer-코드">Pakcer 코드</h3>
<p>database ec2는 private subnet에 두고, public subnet의 ec2만 연결이 가능하도록 설계할것입니다.</p>
<p>따라서 ansible로는 설정이 어렵습니다.</p>
<p>packer를 그래서 씁니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>database.pkr.hcl</strong></pre>
</div>
<div class="sourceCode" id="cb1" data-filename="database.pkr.hcl" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">source <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"amazon-ebs"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"database"</span> {</span>
<span id="cb1-2">  region  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var.AWS_REGION</span>
<span id="cb1-3">  profile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"default"</span></span>
<span id="cb1-4"></span>
<span id="cb1-5">  ami_name      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hyunghki-database-${formatdate("</span>YYYYMMDDhhmmss<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", timestamp())}"</span></span>
<span id="cb1-6">  instance_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t2.micro"</span></span>
<span id="cb1-7">  source_ami_filter {</span>
<span id="cb1-8">    filters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb1-9">      name                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"</span></span>
<span id="cb1-10">      root<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ebs"</span></span>
<span id="cb1-11">      virtualization<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hvm"</span></span>
<span id="cb1-12">    }</span>
<span id="cb1-13">    most_recent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> true</span>
<span id="cb1-14">    owners      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"099720109477"</span>]</span>
<span id="cb1-15">  }</span>
<span id="cb1-16">  ssh_username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu"</span></span>
<span id="cb1-17">}</span></code></pre></div>
</div>
<p>ubuntu-20.04를 기본 이미지로 시작합니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>database.pkr.hcl</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="database.pkr.hcl" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">build {</span>
<span id="cb2-2">  sources <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"source.amazon-ebs.database"</span>]</span>
<span id="cb2-3"></span>
<span id="cb2-4">  provisioner <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ansible"</span> {</span>
<span id="cb2-5">    playbook_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{path.root}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/ansible/database.yml"</span></span>
<span id="cb2-6">    user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ubuntu"</span></span>
<span id="cb2-7">    ansible_env_vars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb2-8">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ANSIBLE_HOST_KEY_CHECKING=False"</span>,</span>
<span id="cb2-9">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MYSQL_USER=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.MYSQL_USER}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb2-10">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MYSQL_PASSWORD=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.MYSQL_PASSWORD}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb2-11">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATABASE_NAME=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.DATABASE_NAME}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb2-12">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MYSQL_ROOT_PASSWORD=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{var.MYSQL_ROOT_PASSWORD}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-13">    ]</span>
<span id="cb2-14">  }</span>
<span id="cb2-15">}</span></code></pre></div>
</div>
<p>packer의 ansible plugin을 사용하면, ansible을 이용해서 golden ami를 만들 수 있습니다.</p>
<p>조금 더 멱등성 있게 편리한 세팅을 진행할 수 있죠.</p>
</section>
<section id="terraform-코드" class="level3">
<h3 class="anchored" data-anchor-id="terraform-코드">Terraform 코드</h3>
<p>이제 본격적으로 provision을 해보겠습니다.</p>
</section>
<section id="ansible-코드" class="level3">
<h3 class="anchored" data-anchor-id="ansible-코드">ansible 코드</h3>
<p>이제 software 세팅을 시작하겠습니다.</p>
</section>
<section id="build" class="level3">
<h3 class="anchored" data-anchor-id="build">build</h3>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Makefile</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="Makefile" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">PROVISION_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>terraform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>main</span>
<span id="cb3-2">PACKER_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>packer</span>
<span id="cb3-3">DEPLOY_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ansible</span>
<span id="cb3-4">include .env</span>
<span id="cb3-5">export</span>
<span id="cb3-6"></span>
<span id="cb3-7">.PHONY: provision deploy <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span> destroy re build_ami</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>: provision deploy</span>
<span id="cb3-10"></span>
<span id="cb3-11">build_ami: packer</span>
<span id="cb3-12">    packer init $(PACKER_PATH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>database.pkr.hcl</span>
<span id="cb3-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@PKR_VAR_AWS_REGION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(AWS_REGION) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-14">    PKR_VAR_MYSQL_USER<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(MYSQL_USER) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-15">    PKR_VAR_MYSQL_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(MYSQL_PASSWORD) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-16">    PKR_VAR_DATABASE_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(DATABASE_NAME) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-17">    PKR_VAR_MYSQL_ROOT_PASSWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(MYSQL_ROOT_PASSWORD) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-18">    packer build $(PACKER_PATH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>database.pkr.hcl</span>
<span id="cb3-19"></span>
<span id="cb3-20">provision: build_ami terraform</span>
<span id="cb3-21">    terraform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>chdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(PROVISION_PATH) init</span>
<span id="cb3-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@TF_VAR_AWS_REGION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(AWS_REGION) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-23">    TF_VAR_SERVER_INSTANCE_COUNT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SERVER_INSTANCE_COUNT) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-24">    TF_VAR_SSH_IP<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SSH_IP) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-25">    TF_VAR_SSH_PUBLIC_KEY_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SSH_PUBLIC_KEY_PATH) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-26">    terraform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>chdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(PROVISION_PATH) <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>auto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>approve</span>
<span id="cb3-27"></span>
<span id="cb3-28">deploy: ansible</span>
<span id="cb3-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@DB_PRIVATE_IP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$(shell terraform -chdir=$(PROVISION_PATH) output -json db_private_ip | jq -r '.[]' | tr '</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' ' ')"</span> \</span>
<span id="cb3-30">    ANSIBLE_HOST_KEY_CHECKING<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-31">    ANSIBLE_REMOTE_USER<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ubuntu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-32">    ansible<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>playbook <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-33">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i $(DEPLOY_PATH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>inventories <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-34">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>private<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SSH_PRIVATE_KEY_PATH) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-35">    $(DEPLOY_PATH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>server.yml </span>
<span id="cb3-36"></span>
<span id="cb3-37">destroy: terraform</span>
<span id="cb3-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@TF_VAR_AWS_REGION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(AWS_REGION) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-39">    TF_VAR_SERVER_INSTANCE_COUNT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SERVER_INSTANCE_COUNT) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-40">    TF_VAR_SSH_IP<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SSH_IP) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-41">    TF_VAR_SSH_PUBLIC_KEY_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(SSH_PUBLIC_KEY_PATH) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-42">    terraform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>chdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>$(PROVISION_PATH) destroy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>auto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>approve</span>
<span id="cb3-43"></span>
<span id="cb3-44">re: destroy <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span></span></code></pre></div>
</div>
<p>최종 build는 (42 seoul 사람에게 익숙한) <code>makefile</code>을 사용했습니다.</p>
<p>모든 변수는 <code>.env</code>로 관리하고 <code>makefile 내부에서 환경변수</code>로 가져와 packer, terraform, ansible <code>명령어를 실행</code>해주었습니다.</p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>사실 c언어도 아니고..이 과제 구현에서 makefile은 별로 어울리진 않은거 같긴 합니다만, 제가 아직 로컬에서 돌려볼만한 다른 build 툴을 배우지 않아서..</p>
</div>
</div>
</div>
</section>
</section>
<section id="결과" class="level2">
<h2 class="anchored" data-anchor-id="결과">결과</h2>
<p>아직 평가 전입니다.</p>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">outro</h2>
<p>솔직히 일반적으로 사용되는 cloud 구조를 적용한건 아니긴 하지만, 과제에 맞춰서 진행하기 위해 고민하는 과정에서 다양한 구조를 적용해봤는데, 그 과정이 나름 학습에 도움이 된거 같습니다.</p>
<p>그렇다고 cloud를 처음 공부하시는 분들에게 학습 용도로 추천할만한 과제까지는 아닌거 같지만, 이 분야에 공부를 꽤 했고, 그 내용들을 다양하게 고민하며 적용해보고 싶다면 괜찮은 선택지가 될 것 같습니다.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>aws</category>
  <category>terraform</category>
  <category>ansible</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/5.html</guid>
  <pubDate>Tue, 28 Jan 2025 11:52:27 GMT</pubDate>
</item>
<item>
  <title>인간 관계론 - 데일 카네기</title>
  <link>https://cryscham123.github.io/posts/00_inboxes/notes/01.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://contents.kyobobook.co.kr/sih/fit-in/458x0/pdt/9791164459667.jpg" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:30.0%"></p>
</figure>
</div>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<p>도서 <a href="https://product.kyobobook.co.kr/detail/S000213900397">인간 관계론</a> 정리 노트입니다.</p>
</div>
</div>
</div>
<section id="사람을-대하는-기본-기술" class="level2">
<h2 class="anchored" data-anchor-id="사람을-대하는-기본-기술">사람을 대하는 기본 기술</h2>
<section id="꿀을-얻으려면-벌집을-걷어차지-마라" class="level3">
<h3 class="anchored" data-anchor-id="꿀을-얻으려면-벌집을-걷어차지-마라">꿀을 얻으려면 벌집을 걷어차지 마라</h3>
<p>남을 비난하고 원망하며 불평하는 것은 어떤 바보라도 할 수 있다. 실제로 바보들은 그렇게 한다. 하지만 남을 이해하고 용서하려면 인격과 자제력이 필요하다.</p>
<p><code>사람을 비난하는 대신 그들을 이해하려고 노력해 보자</code>. 그들이 왜 그런 행동을 하는지 곰곰이 생각해 보자. 그편이 비난하는 것보다 훨씬 이롭고 흥미롭다.</p>
</section>
<section id="사람을-대하는-핵심-비결" class="level3">
<h3 class="anchored" data-anchor-id="사람을-대하는-핵심-비결">사람을 대하는 핵심 비결</h3>
<p>누군가에게 어떤 일을 하게 만드는 방법은 상대방이 그 일을 하고 싶게 만드는 것 뿐이다. 강제적인 방법들은 반드시 역효과를 일으킨다.</p>
<p>타인에게 어떤 일을 하게 하려면 그 사람이 원하는 것을 주는 방법밖에 없다. <code>인간의 본성이 지닌 가장 깊은 충동이 바로 중요한 사람이 되고자 하는 욕망이다.</code></p>
<p>이러한 갈망을 제대로 충족시켜 주는 사람은 다른 사람의 마음을 사로잡을 수 있다. <code>타인을 진실된 마음으로 칭찬하자.</code> 이는 이기적이고 거짓인 아첨과는 다르다.</p>
</section>
<section id="이-일을-해내는-사람은-세상을-얻을-것이고-그렇지-못한-사람은-외로운-길을-걸을-것이다." class="level3">
<h3 class="anchored" data-anchor-id="이-일을-해내는-사람은-세상을-얻을-것이고-그렇지-못한-사람은-외로운-길을-걸을-것이다.">이 일을 해내는 사람은 세상을 얻을 것이고, 그렇지 못한 사람은 외로운 길을 걸을 것이다.</h3>
<p><code>상대방에게 영향을 미치는  방법은 그사람이 원하는 것을 이야기하고, 이를 얻는 방법을 보여 주는 것이다.</code></p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<p>…이 부분 예시로 드는 것들이 조금 오버스럽다고 느껴진다.<br>
문화가 달라서 그런가? 아니면 번역 이슈인가?<br>
무슨 말을 하는진 알겠는데, 몇몇 부분은 별로 공감이 안 된다.</p>
</div>
</div>
</div>
</section>
</section>
<section id="사람들에게-호감을-얻는-6가지-방법" class="level2">
<h2 class="anchored" data-anchor-id="사람들에게-호감을-얻는-6가지-방법">사람들에게 호감을 얻는 6가지 방법</h2>
<section id="이렇게-하면-어디서든-환영받을-것이다." class="level3">
<h3 class="anchored" data-anchor-id="이렇게-하면-어디서든-환영받을-것이다.">이렇게 하면 어디서든 환영받을 것이다.</h3>
<p>다른 사람에게 관심이 없는 사람은 인생에서 가장 큰 어려움을 겪고, 다른 사람에게 가장 큰 상처를 준다. <code>상대방에게 진심으로 관심을 가져라</code></p>
</section>
<section id="좋은-첫인상을-남기는-간단한-방법" class="level3">
<h3 class="anchored" data-anchor-id="좋은-첫인상을-남기는-간단한-방법">좋은 첫인상을 남기는 간단한 방법</h3>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>독서</category>
  <category>인간 관계</category>
  <guid>https://cryscham123.github.io/posts/00_inboxes/notes/01.html</guid>
  <pubDate>Mon, 27 Jan 2025 11:46:55 GMT</pubDate>
</item>
<item>
  <title>3-몰라</title>
  <link>https://cryscham123.github.io/posts/01_projects/선형대수_복습/notes/3.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="가우스-조던-소거법" class="level2">
<h2 class="anchored" data-anchor-id="가우스-조던-소거법">가우스 조던 소거법</h2>
<blockquote class="blockquote">
<p>선형대수의 목표는 <img src="https://latex.codecogs.com/png.latex?Ax%20=%20b">에서 x를 찾는 것이다.</p>
</blockquote>
<img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%0Ax%20+%202y%20%5Cquad%20%20&amp;=%204%20%5C%5C%0A2x%20+%205y%20%5Cquad%20&amp;=%209%0A%5Cend%7Baligned%7D">
<p>이 수식을 다시 살펴보자. 위의 수식은 아래와 같이 적용할 수 있다.</p>
<img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%0A2x%20+%204y%20%5Cquad%20%20&amp;=%208%20%5C%5C%0A2x%20+%205y%20%5Cquad%20&amp;=%209%0A%5Cend%7Baligned%7D">
<p>위의 열립방정식을 풀면 <img src="https://latex.codecogs.com/png.latex?y%20=%201">이라는 결과를 얻는다. 다시 <img src="https://latex.codecogs.com/png.latex?y=1">을 대입해서 <img src="https://latex.codecogs.com/png.latex?x=2">라는 값을 구할 수 있다.</p>
<p>이제 이를 matrix와 vector로 풀어보자.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bbmatrix%7D%0A1%20&amp;%202%20%5C%5C%0A2%20&amp;%205%0A%5Cend%7Bbmatrix%7D%0A%5Cbegin%7Bbmatrix%7D%0Ax%20%5C%5C%0Ay%0A%5Cend%7Bbmatrix%7D%20=%0A%5Cbegin%7Bbmatrix%7D%0A4%20%5C%5C%0A9%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p>이를 확장행렬로 표현하면 다음과 같다</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5BA%7Cb%5D%20=%20%5Cbegin%7Bbmatrix%7D%0A1%20&amp;%202%20&amp;%20%7C%20&amp;%204%20%5C%5C%0A2%20&amp;%205%20&amp;%20%7C%20&amp;%209%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p>이제 가우스 조던 소거법을 적용해보자</p>
<p>적용 순서는 다음과 같다.</p>
<ol type="1">
<li>양 변에 0이 아닌 상수배를 해준다.</li>
<li>상수배를 한 행을 다른행에 더하거나 뺀다.</li>
<li>행끼리 자리 바꾼다.</li>
</ol>
<p>이에 맞춰서 위의 식을 풀이하면,</p>
<ol type="1">
<li>두 번째 행에서 첫 번째 행의 2배를 빼면</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bbmatrix%7D%0A1%20&amp;%202%20&amp;%20%7C%20&amp;%204%20%5C%5C%0A0%20&amp;%201%20&amp;%20%7C%20&amp;%201%0A%5Cend%7Bbmatrix%7D%0A"></p>
<ol start="2" type="1">
<li>첫 번째 행에서 두 번째 행의 2배를 빼면</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bbmatrix%7D%0A1%20&amp;%200%20&amp;%20%7C%20&amp;%202%20%5C%5C%0A0%20&amp;%201%20&amp;%20%7C%20&amp;%201%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p>따라서 <img src="https://latex.codecogs.com/png.latex?x%20=%202">, <img src="https://latex.codecogs.com/png.latex?y%20=%201">이라는 해를 얻을 수 있다.</p>
<p>즉 가우스조던 소거법은 <code>왼쪽을 항등행렬</code>로 만들고, 그 <code>오른쪽에 있는 값이 답</code>이되는 소거법이다.</p>
</section>
<section id="역행렬-구하기" class="level2">
<h2 class="anchored" data-anchor-id="역행렬-구하기">역행렬 구하기</h2>
<p>역행렬을 구할 수 있다면 x의 값을 쉽게 구할 수 있다. (<img src="https://latex.codecogs.com/png.latex?x%20=%20A%5E%7B-1%7Db">)</p>
<p>가우스 조던 소거법을 이용해 역행렬을 구해보자.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bbmatrix%7D%0Aa%20&amp;%20b%20&amp;%20%7C%20&amp;%201%20&amp;%200%20%5C%5C%0Ac%20&amp;%20d%20&amp;%20%7C%20&amp;%200%20&amp;%201%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bbmatrix%7D%0Aa%20&amp;%20b%20&amp;%20%7C%20&amp;%201%20&amp;%200%20%5C%5C%0A0%20&amp;%20%5Cfrac%7Bad-bc%7D%7Ba%7D%20&amp;%20%7C%20&amp;%20-%5Cfrac%7Bc%7D%7Ba%7D%20&amp;%201%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bbmatrix%7D%0Aa%20&amp;%20b%20&amp;%20%7C%20&amp;%201%20&amp;%200%20%5C%5C%0A0%20&amp;%201%20&amp;%20%7C%20&amp;%20-%5Cfrac%7B-c%7D%7Bad-bc%7D%20&amp;%20%5Cfrac%7Ba%7D%7Bad-bc%7D%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bbmatrix%7D%0Aa%20&amp;%200%20&amp;%20%7C%20&amp;%20%5Cfrac%7Bad%7D%7Bad-bc%7D%20&amp;%20%5Cfrac%7B-ab%7D%7Bad-bc%7D%20%5C%5C%0A0%20&amp;%201%20&amp;%20%7C%20&amp;%20-%5Cfrac%7B-c%7D%7Bad-bc%7D%20&amp;%20%5Cfrac%7Ba%7D%7Bad-bc%7D%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bbmatrix%7D%0A1%20&amp;%200%20&amp;%20%7C%20&amp;%20%5Cfrac%7Bd%7D%7Bad-bc%7D%20&amp;%20%5Cfrac%7B-b%7D%7Bad-bc%7D%20%5C%5C%0A0%20&amp;%201%20&amp;%20%7C%20&amp;%20-%5Cfrac%7B-c%7D%7Bad-bc%7D%20&amp;%20%5Cfrac%7Ba%7D%7Bad-bc%7D%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%E2%88%B4%20A%5E%7B-1%7D%20=%20%5Cfrac%7B1%7D%7Bad-bc%7D%0A%5Cbegin%7Bbmatrix%7D%0Ad%20&amp;%20-b%20%5C%5C%0A-c%20&amp;%20a%0A%5Cend%7Bbmatrix%7D%0A"></p>
<section id="invertible" class="level3">
<h3 class="anchored" data-anchor-id="invertible">invertible</h3>
<p>역행렬이 존재할 경우 invertible하다고 한다.</p>
<ol type="1">
<li><code>non singular matrix</code></li>
<li><code>det(A) ≠ 0</code>: ad - bc(<code>determinant</code>) = 0인 경우 역행렬이 존재하지 않는다.</li>
<li><code>A가 full rank</code>이다</li>
<li><code>N(A) = 0</code></li>
</ol>
</section>
</section>
<section id="determinant" class="level2">
<h2 class="anchored" data-anchor-id="determinant">determinant</h2>
<p>정사각행렬의 element로 scalar 값을 만드는 함</p>
<section id="x-3-행렬의-det" class="level3">
<h3 class="anchored" data-anchor-id="x-3-행렬의-det">3 x 3 행렬의 det</h3>
<p><img src="https://latex.codecogs.com/png.latex?%0AA=%0A%5Cbegin%7Bbmatrix%7D%0Aa%20&amp;%20b%20&amp;%20c%5C%5C%0Ad%20&amp;%20e%20&amp;%20f%20%5C%5C%0Ag%20&amp;%20h%20&amp;%20i%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?det(A)%20=%20a(ei%20-%20fh)%20-%20b(di-fg)+c(dh-eg)"></p>
<p><code>Laplace expansion</code> or <code>cofactor expansion</code></p>
</section>
<section id="properties" class="level3">
<h3 class="anchored" data-anchor-id="properties">properties</h3>
<ol type="1">
<li>det(A) = 0 이면 A is singular</li>
<li>A가 rank-deficient 이면 det(A) = 0</li>
<li>diagonal or triangular matrix, det(A) = 대각요소의 곱</li>
<li>항등행렬의 det=1</li>
<li>det(cA) = <img src="https://latex.codecogs.com/png.latex?c%5Endet(A)"> (A = nxn)</li>
<li><img src="https://latex.codecogs.com/png.latex?det(A%5ET)%20=%20det(A)"></li>
<li><code>det(AB) = det(A)det(B)</code></li>
<li><img src="https://latex.codecogs.com/png.latex?%5Ccolor%7Bred%7D%7Bdet(A%5E%7B-1%7D)%20=%20%5Cfrac%7B1%7D%7Bdet(A)%7D%7D"></li>
<li><img src="https://latex.codecogs.com/png.latex?%5Ccolor%7Bred%7D%7Bdet(A)%20=%20%CE%BB_1%CE%BB_2,...,%CE%BB_n%7D"></li>
</ol>
</section>
</section>
<section id="trace" class="level2">
<h2 class="anchored" data-anchor-id="trace">Trace</h2>
<p>정사각 행렬에 대해서만 정의되는 것, diagonal 전부 더함</p>
<p><img src="https://latex.codecogs.com/png.latex?tr(A)%20=%20%5Csum_%7Bi=1%7D%5E%7Bn%7Da_%7Bii%7D"></p>
<ol type="1">
<li>tr(A + B) = tr(A) + tr(B)</li>
<li>tr(cA) = ctr(A)</li>
<li><img src="https://latex.codecogs.com/png.latex?tr(A%5ET)%20=%20tr(A)"></li>
<li>tr(AB) = tr(BA)</li>
<li><img src="https://latex.codecogs.com/png.latex?tr(a%5ETb)%20=%20tr(ba%5ET)"></li>
<li><code>tr(ABCD) = tr(BCDA) = tr(CDAB) = tr(DABC)</code> (cyclic property)</li>
<li><img src="https://latex.codecogs.com/png.latex?tr(A)%20=%20%5Csum_%7Bi=1%7D%5E%7Bn%7D%5Clambda_i"></li>
</ol>
</section>
<section id="최소자승법" class="level2">
<h2 class="anchored" data-anchor-id="최소자승법">최소자승법</h2>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>선형 대수</category>
  <guid>https://cryscham123.github.io/posts/01_projects/선형대수_복습/notes/3.html</guid>
  <pubDate>Tue, 21 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>자기 소개서</title>
  <link>https://cryscham123.github.io/posts/01_projects/3_1_장학금_신청/notes/1.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<ol type="1">
<li>자기소개 및 가치관 (500자 이내)</li>
</ol>
<p>저는 데이터 분석과 IT 인프라 설계 분야에 깊은 관심을 가지고 있는 산업공학과 학생입니다. 산업공학을 전공하며 시스템 최적화와 데이터 기반 의사결정에 대한 이론을 배우며 데이터 분석 및 IT 인프라 설계 분야에 관심을 가지게 되었고, 이를 실무에 적용할 수 있는 지식을 학습하고자 42서울 교육기관에서 2년 동안 IT 관련 학습을 진행했습니다. 또한 이 기간 동안 AWS와 ADsP(Advanced Data Analytics Semi-Professional) 자격증을 취득하며 클라우드 컴퓨팅과 데이터 분석에 대한 기초 역량을 쌓았습니다.</p>
<p>저는 효율적이고 신뢰할 수 있는 시스템을 구축하는 것을 가장 중요한 가치로 삼고 있습니다. 이러한 시스템은 데이터 손실과 보안 위협을 방지할 뿐만 아니라, 장기적인 성장의 토대가 되기 때문입니다. 현재는 데이터와 블록체인 기술을 활용하여 복잡한 문제를 단순화하고, 효율적인 해결책을 찾는 데 큰 관심을 가지고 있습니다. 앞으로도 지속적인 학습과 경험을 통해 해당 분야에서 전문성을 키워가고자 합니다.</p>
<ol start="2" type="1">
<li>졸업 후 IT 및 블록체인 분야에 관련해서 이루고자 하는 꿈과 선정 사유 (500자 이내)</li>
</ol>
<p>저는 데이터 분석, IT 인프라, 블록체인 기술을 융합하여 현실의 복잡한 문제들을 해결하고 혁신적인 가치를 창출하는 데 기여하고 싶습니다. 전공 수업과 프로젝트를 통해 데이터가 지닌 잠재력을 배워가면서, 동시에 데이터의 신뢰성과 보안이라는 중요한 과제에 대해서도 깊이 고민하게 되었습니다. 특히 42서울에서의 학습 경험을 통해, 안전하고 효율적인 데이터 활용을 위해서는 IT 인프라와 블록체인 기술의 역할이 매우 중요하다는 것을 깨달았습니다. 이러한 경험들을 바탕으로 IT 인프라와 블록체인 기술에 더욱 관심을 가지게 되었고, 관련 기술 서적과 온라인 자료를 통해 꾸준히 학습하며 이해의 폭을 넓혀가고 있습니다. 앞으로도 끊임없이 배우고 성장하여 데이터의 가치를 안전하게 실현할 수 있는 시스템을 만드는 데 기여하고 싶습니다.</p>
<ol start="3" type="1">
<li>목표 달성을 위한 그간의 성과 및 계획 (500자 이내)</li>
</ol>
<p>저의 주요 성과로는 42서울에서의 프로젝트 경험과 AWS, ADsP 자격증 취득을 들 수 있습니다. 42서울에서 진행한 Solidity 기반 이더리움 스마트 컨트랙트 설계 및 배포 프로젝트를 통해 블록체인의 핵심 원리와 실제 활용 방안을 학습했습니다. 또한 Vagrant, Kubernetes(K8s), ArgoCD, GitLab helm 배포 프로젝트를 수행하며 온프레미스 환경에서의 인프라 설계와 개발 환경 관리 역량을 키웠고, 이를 통해 클라우드와 온프레미스 환경의 IT 인프라 운영에 대한 실질적인 이해도를 높일 수 있었습니다. 향후 계획으로는 학부 과정에 충실히 임하면서 데이터사이언스 대학원 진학을 위한 준비를 체계적으로 진행하고자 합니다. 대학원에서는 빅데이터 처리, 머신러닝, 딥러닝 등 데이터 분석의 핵심 기술을 심도 있게 학습하고자 합니다. 이와 병행하여 온라인 강좌 수강과 실전 프로젝트 수행을 통해 IT 인프라 및 블록체인 분야의 역량을 지속적으로 강화하고, 각종 공모전 참여를 통해 실력을 검증받고자 합니다. 궁극적으로는 이러한 기술들을 융합하여 데이터의 신뢰성과 보안을 보장하고, 효율적인 시스템을 설계하는 전문가로 성장하고 싶습니다.</p>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>자기 소개서</category>
  <guid>https://cryscham123.github.io/posts/01_projects/3_1_장학금_신청/notes/1.html</guid>
  <pubDate>Thu, 16 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>ft_transcendence - github action</title>
  <link>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/1.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-course-6.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul 공통과정 6서클 과제</figcaption>
</figure>
</div>
<p>42 Seoul 공통과정의 마지막 과제입니다. 이 프로젝트는 개발자가 선호하는 라이브러리와 프레임워크를 자유롭게 선택하여 구현할 수 있다는 점이 특징입니다.</p>
<p>대형 협업 과제인 만큼, 과제에 명시되어있지 않지만 협업을 위한 툴도 공부해서 다양하게 적용해볼 수 있는 좋은 과제인것 같습니다. 저같은 경우에는 coursera, udemy 강의를 통해 <strong>agile</strong> 협업 방식과 <strong>github에서의 적용 방법</strong>에 대해 공부를 했고, 프로젝트 진행에 있어서 꽤 도움이 됐던걸로 기억합니다. 사실 프로젝트를 진행하다보니, agile 방식을 온전히 다 적용하기엔 적합하지 않다고 판단했지만, <strong>Kanban Board</strong>로 프로젝트를 관리하는 것 같은 부분은 꽤 유용하게 활용할 수 있었습니다.</p>
</section>
<section id="프로젝트-및-구현-설명" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-및-구현-설명">프로젝트 및 구현 설명</h2>
<section id="개요" class="level3">
<h3 class="anchored" data-anchor-id="개요">개요</h3>
<p><a href="https://cdn.intra.42.fr/pdf/pdf/140713/en.subject.pdf">과제 명세서</a></p>
<p>해당 과제는 실시간 <a href="https://www.ponggame.org/">Pong 게임</a> 매칭 웹사이트를 만드는게 목표입니다. 저는 이번 프로젝트에서 <strong>github action 설정, User Management Backend 설계와 42 API를 이용한 OAuth 인증, JWT 구현, Game History를 Block Chain으로 저장</strong>하는 파트를 담당했습니다.</p>
<p>참고한 자료는 다음과 같습니다:</p>
<ul>
<li><a href="https://www.coursera.org/learn/agile-project-management">Google Agile Project 관리</a></li>
<li><a href="https://docs.github.com/ko/actions">Github Action Docs</a></li>
<li><a href="https://cli.github.com/manual/">Github CLI Docs</a></li>
<li><a href="https://www.udemy.com/course/python-django-the-practical-guide/?couponCode=KRLETSLEARNNOW">Django udemy 강좌</a></li>
<li><a href="https://www.django-rest-framework.org/">Django Rest Framework Docs</a></li>
<li><a href="https://django-rest-framework-simplejwt.readthedocs.io/en/latest/index.html">Django Simple JWT</a></li>
<li><a href="https://mgyo.tistory.com/832">JWT Token 탈취 대응 시나리오</a></li>
<li><a href="https://medium.com/@jose-luis-navarro/securing-our-microservices-through-authentication-and-authorization-with-jwt-refresh-tokens-and-f4439810fce7">micro service에서 JWT 활용 방법</a></li>
<li><a href="https://puleugo.tistory.com/154">Refresh Token을 사용해야 하는 이유</a></li>
<li><a href="https://www.hahwul.com/2020/01/18/samesite-lax/">Cookie에서의 same site 옵션</a></li>
<li><a href="https://bitcoin.org/files/bitcoin-paper/bitcoin_ko.pdf">Bitcoin 백서</a></li>
<li><a href="https://www.udemy.com/course/ethereum-and-solidity-the-complete-developers-guide/?couponCode=KRLETSLEARNNOW">Solidity Udemy 강의</a></li>
<li><a href="https://docs.soliditylang.org/en/latest/">Solidity Docs</a></li>
<li><a href="https://youtube.com/playlist?list=PL7jH19IHhOLOJfXeVqjtiawzNQLxOgTdq&amp;si=k5TMs5VUF0Z1xIA2">nomad coder 블록체인 시리즈</a></li>
</ul>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>이 포스팅에서는 <strong>github action setting, jwt, block chain</strong> 부분만 다루겠습니다.<br>
전체 코드는 비공개 되어있는 상태입니다.</p>
</div>
</div>
</div>
</section>
<section id="github-action-setting" class="level3">
<h3 class="anchored" data-anchor-id="github-action-setting">Github Action Setting</h3>
<p>github를 이용해서 agile 방법론을 적용할 수 있도록 의도했고, <strong>자동화</strong>와 <strong>template</strong>을 이용해 통일성 있는 구조를 유지하려고 했습니다.</p>
<p><strong>1. 회의를 통해 진행해야 하는 작업을 Kanban board에 정리한다.</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-11-28-18.png" class="img-fluid figure-img"></p>
<figcaption>Github Kanban Board</figcaption>
</figure>
</div>
<p>각각의 column에는 다음과 같은 내용이 들어갑니다.</p>
<ol type="1">
<li><strong>Discussion</strong>: 논의가 필요한 작업. 개개인이 자유롭게 올릴 수 있습니다</li>
<li><strong>Backlog</strong>: Discussion에 있는 내용 중 구현하기로 회의에서 정한 작업</li>
<li><strong>Ready</strong>: Back log에 있는 작업 중 이번 Sprint에서 구현할 작업들</li>
<li><strong>In Progress</strong>: Ready에 있는 작업 중 누군가가 작업중인 것</li>
<li><strong>Done</strong>: master branch에 merge가 완료된 작업</li>
</ol>
<p>자세한 내용은 meeting 부분을 참고해 주세요.</p>
<p>참고로 <strong>Disccusion</strong>에 작업을 올리는 방법은 <strong>template에 맞게 issue를 올리</strong>면 됩니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-16-19-51-40.png" class="img-fluid figure-img"></p>
<figcaption>Discussion template</figcaption>
</figure>
</div>
<p>아래와 같이 설정 파일을 만들어서 ‘.github/ISSUE_TEMPLATE/’ 폴더 안에 저장하면 issue create 시 자동으로 template이 뜨게 할 수 있습니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name:</span> New discussion</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">description:</span> new discussion</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">title:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[DISCUSSION]"</span></span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">labels:</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enhancement"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">projects:</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"org_name/5"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb1-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">body:</span></span>
<span id="cb1-7">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> type: markdown</span>
<span id="cb1-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">attributes:</span></span>
<span id="cb1-9">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">value:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb1-10">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">해당</span> 기능과 관련된 request가 이미 존재하는지 확인해주세요.</span>
<span id="cb1-11">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> type: textarea</span>
<span id="cb1-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">id:</span> story</span>
<span id="cb1-13">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">attributes:</span></span>
<span id="cb1-14">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">label:</span> Story</span>
<span id="cb1-15">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">description:</span> 해당 기능에 대한 설명이나 필요한 배경을 작성해주세요.</span>
<span id="cb1-16">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">placeholder:</span> 자유로운 양식으로 작성해주세요.</span>
<span id="cb1-17">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">validations:</span></span>
<span id="cb1-18">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">required:</span> true</span></code></pre></div>
<p><strong>2. Kanban board를 보고 개인이 능동적으로 고유 브랜치에 작업을 진행한다.</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-11-29-41.png" class="img-fluid figure-img"></p>
<figcaption>빨간 밑줄 부분을 설정해줍니다.</figcaption>
</figure>
</div>
<p>Kanban board의 Ready section에 있는 작업을 클릭해서 들어간 후, <strong>assignees를 본인으로 선택해서 작업</strong>하면 됩니다. <strong>task completion criteria</strong>라는 내용이 보이는데, 이는 <strong>회의를 통해 결정</strong>하는 것으로, 나중에 작업이 완료되고 <strong>pull request 시, 평가자가 작업에 완성도에 대해 판단할 수 있는 기준</strong>으로 제공됩니다.</p>
<p>자동화 코드는 아래와 같이 구현했습니다.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name:</span> Create branch</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">on:</span></span>
<span id="cb2-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">issues:</span></span>
<span id="cb2-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">types:</span> [ assigned ]</span>
<span id="cb2-5">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pull_request:</span></span>
<span id="cb2-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">types:</span> [ opened, closed ]</span>
<span id="cb2-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jobs:</span></span>
<span id="cb2-8">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">create_issue_branch_job:</span></span>
<span id="cb2-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">runs-on:</span> ubuntu-latest</span>
<span id="cb2-10">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">steps:</span></span>
<span id="cb2-11">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Generate token</span>
<span id="cb2-12">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">id:</span> generate_token</span>
<span id="cb2-13">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uses:</span> tibdex/github-app-token@v2</span>
<span id="cb2-14">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">with:</span></span>
<span id="cb2-15">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">app_id:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ secrets.APP_ID </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb2-16">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">private_key:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ secrets.PRIVATE_KEY </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb2-17"></span>
<span id="cb2-18">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gh 명령어를 이용해 project의 상태를 In progress로 수정해줍니다.</span></span>
<span id="cb2-19">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Project in-progress</span>
<span id="cb2-20">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">if:</span> github.event.action == <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'assigned'</span></span>
<span id="cb2-21">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb2-22">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PROJECT_ID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> project view 5 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--owner</span> organization-for-practice <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.id'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-23">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ITEM_ID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> project item-list 5 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--owner</span> organization-for-practice <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".items[] | select(.content.number == </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${NUMBER}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">) | .id"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-24">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">FIELD_ID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> project field-list 5 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--owner</span> organization-for-practice <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.fields[2].id'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-25">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">SINGLE_ID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> project field-list 5 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--owner</span> organization-for-practice <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.fields[2].options[] | select(.name == "In progress") | .id'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-26">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> project item-edit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--id</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${ITEM_ID}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--field-id</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${FIELD_ID}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--single-select-option-id</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${SINGLE_ID}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--project-id</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${PROJECT_ID}</span></span>
<span id="cb2-27">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb2-28">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GH_TOKEN:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.generate_token.outputs.token </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb2-29">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NUMBER:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ github.event.issue.number </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb2-30"></span>
<span id="cb2-31">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign한 작업에 대한 branch를 새로 만들어줍니다.</span></span>
<span id="cb2-32">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Create Issue Branch</span>
<span id="cb2-33">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uses:</span> robvanderleek/create-issue-branch@main</span>
<span id="cb2-34">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb2-35">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GITHUB_TOKEN:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.generate_token.outputs.token </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span></code></pre></div>
<p>위의 코드는 assign한 작업을 Ready column에서 In progress column으로 옮겨주고, 자동으로 작업할 branch를 만들어줍니다.</p>
<p>branch 자동 생성은 <a href="https://github.com/robvanderleek/create-issue-branch">이 workflow</a>를 사용하였고, 적용 시 아래와 같이 브랜치가 생성됩니다.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoLinkIssue</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoCloseIssue</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">branchName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> tiny</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">commentMessage</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb3-5">  \"${branchName}\" branch 생성 완료.</span>
<span id="cb3-6">  해당 branch를 통해서 main에 pull request 올려주세요.</span>
<span id="cb3-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">branches</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'task list'</span></span>
<span id="cb3-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prefix</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> feature/${issue.title[12,27],}/</span></span>
<span id="cb3-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">copyIssueAssigneeToPR</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bug'</span></span>
<span id="cb3-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prefix</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> hot_fix/${issue.title[6,21],}/</span></span>
<span id="cb3-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">copyIssueAssigneeToPR</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*'</span></span>
<span id="cb3-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">skip</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<p>위의 config 파일을 작성해주면 아래와 같이 브랜치가 생성됩니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-11-30-26.png" class="img-fluid figure-img"></p>
<figcaption>자동 생성된 branch</figcaption>
</figure>
</div>
<p>이름도 자동으로 생성되게 해서 <strong>convention을 지켜야 한다는 부담을 줄여</strong>줬습니다.</p>
<p><strong>3. 작업이 완료되면, 모든 조건을 충족하는지 확인한 후, master에 merge 한다.</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-11-31-07.png" class="img-fluid figure-img"></p>
<figcaption>pull request 화면</figcaption>
</figure>
</div>
<p>작업이 완료됬다고 판단되면 위 화면과 같이 <strong>pull request를 생성</strong>하고, <strong>Reviewer를 설정</strong>해주면 됩니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-11-31-35.png" class="img-fluid figure-img"></p>
<figcaption>task completion criteria</figcaption>
</figure>
</div>
<p>그러면 이전에 설정했던 기준들이 자동으로 불러와지고, <strong>모든 항목에 체크가 완료</strong>되어야 <strong>merge를 할 수 있게 설정</strong>했습니다. 구현 코드는 아래와 같습니다.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name:</span> Master merge rutine</span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">on:</span></span>
<span id="cb4-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pull_request_target:</span></span>
<span id="cb4-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">types:</span> [ opened, synchronize ]</span>
<span id="cb4-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">branches:</span></span>
<span id="cb4-6">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> master</span>
<span id="cb4-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb4-8">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PR_NUM:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ github.event.pull_request.number </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-9">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GH_REPO:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ github.repository </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jobs:</span></span>
<span id="cb4-11">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">get_checklist:</span></span>
<span id="cb4-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">runs-on:</span> ubuntu-latest</span>
<span id="cb4-13">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">if:</span> github.event.action == <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'opened'</span></span>
<span id="cb4-14">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">steps:</span></span>
<span id="cb4-15">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Generate token</span>
<span id="cb4-16">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">id:</span> generate_token</span>
<span id="cb4-17">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uses:</span> tibdex/github-app-token@v2</span>
<span id="cb4-18">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">with:</span></span>
<span id="cb4-19">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">app_id:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ secrets.APP_ID </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-20">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">private_key:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ secrets.PRIVATE_KEY </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-21">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Get issue</span>
<span id="cb4-22">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">id:</span> issue_num</span>
<span id="cb4-23">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb4-24">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">BRANCH:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ github.event.pull_request.head.ref </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-25">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb4-26">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$BRANCH</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature\/.*\/i[0-9]\+'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$BRANCH</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hot_fix\/.*\/i[0-9]\+'</span></span>
<span id="cb4-27">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">TMP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$BRANCH</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'i[0-9]\+'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-28">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NUMBER=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${TMP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span>i<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$GITHUB_OUTPUT</span></span>
<span id="cb4-29">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Get issue body</span>
<span id="cb4-30">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">id:</span> issue_body</span>
<span id="cb4-31">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb4-32">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GH_TOKEN:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.generate_token.outputs.token </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-33">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NUM:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.issue_num.outputs.number </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-34">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb4-35">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CONTENTS&lt;&lt;EOF"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$GITHUB_OUTPUT</span></span>
<span id="cb4-36">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> issue view <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${NUM}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span> body <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.body'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$GITHUB_OUTPUT</span></span>
<span id="cb4-37">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EOF"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$GITHUB_OUTPUT</span></span>
<span id="cb4-38">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> name: Update checklist</span>
<span id="cb4-39">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb4-40">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> pr comment <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PR_NUM</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--body</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${BODY}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-41">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb4-42">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GH_TOKEN:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.generate_token.outputs.token </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}</span>
<span id="cb4-43">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">BODY:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{ steps.issue_body.outputs.contents </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}"</span></span></code></pre></div>
<p><strong>merge가 완료된 branch</strong>는 <strong>자동으로 삭제</strong>가 되도록 설정을 해주었습니다.</p>
<p>이제 아래는 실제 <strong>프로젝트를 진행할 때 만들었던 rule</strong>들입니다.</p>
<section id="work-flow" class="level4">
<h4 class="anchored" data-anchor-id="work-flow"><strong>1. work flow</strong></h4>
<p><strong>github flow</strong>로 진행됩니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-16-20-11-33.png" class="img-fluid figure-img"></p>
<figcaption>github flow</figcaption>
</figure>
</div>
<ol type="1">
<li>매 작업은 master branch의 HEAD를 기반으로 이루어집니다.<br>
pr을 올리지 않는 개인 작업용 <strong>local branch는 자유롭게 생성</strong>해주세요.</li>
<li>master에 직접적인 push는 관리자를 제외하고는 불가능합니다.</li>
<li>master에 대한 merge는 squash merge로 진행됩니다.</li>
<li>그 외의 merge는 rebase로 진행해주세요.</li>
</ol>
</section>
<section id="work" class="level4">
<h4 class="anchored" data-anchor-id="work"><strong>2. work</strong></h4>
<ol type="1">
<li>kanban board의 'Ready' 섹션에서 하나를 정해서 새로운 기능에 대한 작업을 진행해주세요.<br>
선택한 작업은 assignees에 자신의 팀원을 등록 후, Start Date를 해당 날짜로 설정해주세요.<br>
assignees 등록이 완료되면 자동으로 target branch가 생성됩니다.<br>
해당 branch에 팀원들이 필요한 기능들을 자유로운 방식으로 구현한 후, master branch에 merge 해주세요.<br>
단, 해당 branch에 대한 merge는 rebase로 진행해주세요.</li>
<li>hot_fix issue나, new feature request issue는 discussion의 필요성이 있을 경우에 등록해주세요.</li>
<li>작업 중, 현재 작업하는 범위 외에서 추가적인 기능이 필요할 경우 관련 issue에 comment를 남기거나, reopen 해주세요.</li>
</ol>
</section>
<section id="commit-message-convention" class="level4">
<h4 class="anchored" data-anchor-id="commit-message-convention"><strong>3. commit message convention</strong></h4>
<p>아래의 명령어를 입력해주세요</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config commit.template .github/COMMIT_MESSAGE_TEMPLATE</span></code></pre></div>
<p>이후, -m 옵션 없이 ’git commit’으로 message를 입력해주세요.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>COMMIT_MESSAGE_TEMPLATE</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="COMMIT_MESSAGE_TEMPLATE" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># commit message template</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ▼ &lt;Title&gt; 작성</span></span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ▼ &lt;빈 줄&gt;</span></span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ▼ &lt;body&gt; 작성</span></span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ▼ &lt;빈 줄&gt;</span></span>
<span id="cb6-9"></span>
<span id="cb6-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ▼ &lt;footer&gt; 작성</span></span>
<span id="cb6-11"></span>
<span id="cb6-12"></span>
<span id="cb6-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># About Convention</span></span>
<span id="cb6-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   &lt;Title&gt;</span></span>
<span id="cb6-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 필수로 입력해주세요</span></span>
<span id="cb6-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 형식: &lt;type&gt;: &lt;short summary&gt;</span></span>
<span id="cb6-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb6-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       &lt;type&gt;</span></span>
<span id="cb6-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - config: 설정 관련 파일 작성 또는 변경</span></span>
<span id="cb6-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - docs: 문서 변경사항</span></span>
<span id="cb6-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - feat: 새로운 기능</span></span>
<span id="cb6-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - fix: 버그 수정</span></span>
<span id="cb6-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - refactor: 기능 추가나 버그 수정이 아닌 변경 사항</span></span>
<span id="cb6-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - remove: 코드나 파일 제거</span></span>
<span id="cb6-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - style: 스타일 작성 또는 수정</span></span>
<span id="cb6-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - test: 누락된 테스트 추가 또는 기존 테스트 수정</span></span>
<span id="cb6-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - core: 기능 구현 외 시스템 관련 작업</span></span>
<span id="cb6-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb6-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       &lt;short summary&gt;</span></span>
<span id="cb6-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - 변경 사항에 대한 간단한 설명</span></span>
<span id="cb6-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           - 첫글자 소문자, 현재 시제, 명령문으로 마지막에 .(마침표) 없이 작성</span></span>
<span id="cb6-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb6-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   &lt;body&gt;</span></span>
<span id="cb6-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 선택적으로 입력 해주세요</span></span>
<span id="cb6-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 현재 시제, 명령문으로 작성</span></span>
<span id="cb6-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 변경 사항의 동기(왜)를 설명</span></span>
<span id="cb6-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 변경 효과를 설명하기 위해 이전 동작과 현재 동작의 비교를 포함할 수 있음</span></span>
<span id="cb6-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb6-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   &lt;footer&gt;</span></span>
<span id="cb6-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 선택적으로 입력 해주세요</span></span>
<span id="cb6-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 해당 commit과 관련된 task의 issue 번호들을 적어주세요</span></span>
<span id="cb6-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - 'bug'나 'task list' label이 붙은 issue는 제외해주세요</span></span>
<span id="cb6-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#       - ex) closes #&lt;issue 번호&gt; closes #&lt;issue 번호&gt; ...</span></span></code></pre></div>
</div>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>commit message template은 <a href="https://www.conventionalcommits.org/en/v1.0.0/">이 사이트</a>를 참고해서 만들었습니다.</p>
</div>
</div>
</div>
</section>
<section id="pull-request" class="level4">
<h4 class="anchored" data-anchor-id="pull-request"><strong>4. pull request</strong></h4>
<ol type="1">
<li>pull request는 <strong>500줄의 코드</strong>를 넘어가지 않게 작성 바랍니다.</li>
<li>모든 check list를 통과한 request만 master에 merge 가능합니다.</li>
<li>reviewers에는 해당 작업과 관련된 domain의 팀원을 선택해주세요. 최소 1명 이상의 동료에게 평가를 받은 request만 merge 가능합니다.</li>
</ol>
</section>
<section id="meeting" class="level4">
<h4 class="anchored" data-anchor-id="meeting"><strong>5. meeting</strong></h4>
<ul>
<li><p>daily meeting</p>
<ul>
<li><p>매일 정해진 시간에 팀원들은 각각 다음과 같은 사안에 대해 논의합니다.</p>
<ol type="1">
<li>개인이 어제 작업한 내용</li>
<li>개인이 오늘 작업할 내용</li>
<li>개인이 현재 도움이 필요한 내용</li>
</ol></li>
<li><p>이후, 새로운 내용이 추가된 ('Disccusion' 섹션에 있는) issue 중 다음과 같은 내용에 대해 논의합니다.</p>
<ol type="1">
<li>해당 issue가 유효한가</li>
<li>추가적으로 필요하거나 필요 없는 내용</li>
<li>해당 issue의 priority (매우 급함 / 급함 / 안 급함)</li>
<li>해당 issue의 estimate (작업하는데 필요한 노력의 정량적인 수치)</li>
</ol></li>
<li><p>추가적으로, project의 'Back log' 항목에서 'Ready' 항목으로 추가해야 할 작업에 대해 논의하거나 'Ready' 항목에서 'Back log' 항목으로 제외할 작업에 대해 논의할 수 있습니다.</p></li>
</ul></li>
<li><p>sprint planning / retrospective</p>
<ul>
<li>2주에 한번 진행.</li>
<li>이전 sprint에 대한 평가와 이후 sprint를 위한 계획을 세웁니다.<br>
</li>
<li>planning
<ul>
<li>Project의 'Back log' 항목 중 본격적으로 작업을 진행할 항목을 정합니다.</li>
<li>daily meeting 시간을 조정할 수 있습니다.</li>
</ul></li>
<li>retrospective
<ul>
<li>이전 sprint의 문제점에 대해 서로 의논해봅니다.</li>
</ul></li>
</ul></li>
</ul>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>프로젝트를 하다보니, 생각보다 진행 속도가 빨라서 2주에 한번 진행하는 sprint는 유명무실해져버렸습니다. 실제로는 daily meeting만 진행을 했습니다.</p>
</div>
</div>
</div>
</section>
</section>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">outro</h2>
<p>내용이 너무 길어져서 2편에 계속 포스팅 하겠습니다.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>agile</category>
  <category>github action</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/1.html</guid>
  <pubDate>Thu, 16 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>ft_transcendence - block chain</title>
  <link>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/3.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>아직 작성중인 노트입니다.</p>
</div>
</div>
</div>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-course-6.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul 공통과정 6서클 과제</figcaption>
</figure>
</div>
<p><a href="../../../../posts/03_resources/42_seoul/notes/0.html">1편 github action</a>과 <a href="../../../../posts/03_resources/42_seoul/notes/1.html">2편 JWT</a>에 이어서 block chain 파트에 대해 설명하겠습니다.</p>
</section>
<section id="프로젝트-및-구현-설명" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-및-구현-설명">프로젝트 및 구현 설명</h2>
<section id="block-chain" class="level3">
<h3 class="anchored" data-anchor-id="block-chain">Block Chain</h3>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>블록 체인의 개념적인 자세한 설명은 생략하겠습니다.</p>
</div>
</div>
</div>
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-16-20-40-25.png" class="img-fluid"> <img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-16-20-40-38.png" class="img-fluid" alt="block chain 요구사항"></p>
<p><strong>이더리움</strong>은 비트코인과 함께 가장 잘 알려진 블록체인 플랫폼 중 하나입니다. 하지만 비트코인이 단순히 디지털 화폐에 중점을 둔 반면, 이더리움은 <strong>스마트 컨트랙트 기능</strong>을 통해 <strong>더 다양한 응용 프로그램</strong>(Decentralized Applications, DApps)을 지원합니다.</p>
<p><strong>스마트 컨트랙트</strong>는 블록체인 상에서 동작하는 자동화된 계약입니다. 이는 코드로 작성된 계약 조건을 블록체인에 저장하고, <strong>특정 조건이 충족되면 자동으로 실행되는 프로그램</strong>입니다. 스마트 컨트랙트의 주요 특징은 다음과 같습니다:</p>
<ul>
<li><p><strong>자동 실행</strong>: 계약 조건이 충족되면 코드가 자동으로 실행됩니다. 중간에 인간의 개입이 필요하지 않습니다.</p></li>
<li><p><strong>투명성</strong>: 블록체인에 저장되기 때문에 모든 거래 내역이 공개되고 검증 가능합니다.</p></li>
<li><p><strong>불변성</strong>: 한 번 배포된 스마트 컨트랙트는 수정이 불가능합니다. 이는 신뢰성을 보장합니다.</p></li>
<li><p><strong>분산화</strong>: 중앙 집중형 서버가 필요 없이 블록체인 네트워크 상에서 실행됩니다.</p></li>
</ul>
<p>명세서에 따르면, 스마트 컨트랙트를 테스트하기 위한 로컬 개발 환경이 필요합니다. 이를 위해 <strong>가나슈(Ganache)</strong>를 사용했습니다. 가나슈는 이더리움 블록체인의 로컬 테스트넷을 제공하는 도구로, 개발자가 스마트 컨트랙트를 배포하고 테스트할 수 있는 가상 환경을 만들어 줍니다. 스마트 컨트랙트 작성 후, solidity로 컴파일해서 가나슈 블록체인 환경에 저장을 해주겠습니다.</p>
<p>먼저 가나슈 테스팅 환경 세팅입니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode dockerfile code-with-copy"><code class="sourceCode dockerfile"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> node:alpine</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">WORKDIR</span> /app</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">npm</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-g</span> ganache</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">CMD</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ganache</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-h</span> 0.0.0.0 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--wallet.accounts</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${BLOCK_CHAIN_PRIVATE_KEY}</span>,0x1000000000000000000 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--miner.coinbase</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${BLOCK_CHAIN_ACCOUNT}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--database.dbPath</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${BLOCK_CHAIN_DB_PATH}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--chain.networkId</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${BLOCK_CHAIN_NETWORK_ID}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--chain.asyncRequestProcessing</span></span></code></pre></div>
<p>docker container로 실행되도록 설정했습니다.</p>
<pre class="solidity"><code>// SPDX-License-Identifier: GPL-3.0
pragma solidity &gt;=0.4.22 &lt;0.9.0;
contract TournamentHistory {
    struct Tournament {
        uint    tournament_id;
        uint    datetime;
        string  winner;
        Game[3] games;
    }
    struct Game {
        uint    datetime;
        uint[2] players;
        string  winner;
        string  rally;
    }
    address public  chairperson;
    uint private tournament_total;
    mapping(uint =&gt; uint) private user_log_total;

    event TournamentDetail(
        uint indexed    tournament_id,
        uint            datetime,
        string          winner,
        Game[3]         games
    );

    event TournamentDetailForUser(
        uint            tournament_id,
        uint indexed    user_id,
        uint indexed    user_log_key,
        uint            datetime,
        string          winner,
        Game[3]         games
    );

    constructor() {
        chairperson = msg.sender;
    }

    function addTournament(
        uint            datetime,
        string  memory  winner,
        uint[4] memory  user_id,
        Game[3] memory  games
    ) 
        external
    {
        require(msg.sender == chairperson, "You dont have permission to add a tournament.");
        emit TournamentDetail(++tournament_total, datetime, winner, games);
        for (uint i = 0; i &lt; 4; i++) {
            emit TournamentDetailForUser(
                tournament_total,
                user_id[i], 
                user_log_total[user_id[i]]++,
                datetime, 
                winner, 
                games
            );
        }
    }
}</code></pre>
<p>Pong Game의 Tournament 경기 정보를 저장하는 smart contract 입니다.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json, os</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> web3 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Web3</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> solcx <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> compile_standard, install_solc, set_solc_version</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/etc/block_chain/contracts/TournamentHistory.sol"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb3-6">    contract_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.read()</span>
<span id="cb3-7"></span>
<span id="cb3-8">install_solc(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.8.20"</span>)</span>
<span id="cb3-9">set_solc_version(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.8.20"</span>)</span>
<span id="cb3-10">compiled_sol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> compile_standard(</span>
<span id="cb3-11">    {</span>
<span id="cb3-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"language"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Solidity"</span>,</span>
<span id="cb3-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sources"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory.sol"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: contract_file}},</span>
<span id="cb3-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"settings"</span>:{</span>
<span id="cb3-15">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"outputSelection"</span>: {</span>
<span id="cb3-16">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>: {</span>
<span id="cb3-17">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abi"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"evm.bytecode"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"evm.sourceMap"</span>]}</span>
<span id="cb3-18">            }</span>
<span id="cb3-19">        }, </span>
<span id="cb3-20">    }</span>
<span id="cb3-21">)</span>
<span id="cb3-22"></span>
<span id="cb3-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/etc/block_chain/contracts/compiled_code.json"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb3-24">    json.dump(compiled_sol, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb3-25"></span>
<span id="cb3-26">bytecode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> compiled_sol[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"contracts"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory.sol"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"evm"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bytecode"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"object"</span>]</span>
<span id="cb3-27">abi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(compiled_sol[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"contracts"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory.sol"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata"</span>])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abi"</span>]</span>
<span id="cb3-28">w3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Web3(Web3.HTTPProvider(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://block_chain:8545"</span>))</span>
<span id="cb3-29">chain_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BLOCK_CHAIN_NETWORK_ID"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb3-30">account_address <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BLOCK_CHAIN_ACCOUNT"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb3-31">private_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BLOCK_CHAIN_PRIVATE_KEY"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb3-32"></span>
<span id="cb3-33">TournamentHistory <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w3.eth.contract(abi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>abi, bytecode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bytecode)</span>
<span id="cb3-34">nonce <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w3.eth.get_transaction_count(account_address)</span>
<span id="cb3-35">transaction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TournamentHistory.constructor().build_transaction(</span>
<span id="cb3-36">    {</span>
<span id="cb3-37">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chainId"</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(chain_id),</span>
<span id="cb3-38">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gasPrice"</span>: w3.eth.gas_price,</span>
<span id="cb3-39">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"from"</span>: account_address,</span>
<span id="cb3-40">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nonce"</span>: nonce,</span>
<span id="cb3-41">    }</span>
<span id="cb3-42">)</span>
<span id="cb3-43">signed_txn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w3.eth.account.sign_transaction(transaction, private_key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>private_key)</span>
<span id="cb3-44">tx_hash <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w3.eth.send_raw_transaction(signed_txn.rawTransaction)</span>
<span id="cb3-45">tx_receipt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w3.eth.wait_for_transaction_receipt(tx_hash)</span>
<span id="cb3-46"></span>
<span id="cb3-47">compiled_sol[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'contracts'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TournamentHistory.sol'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TournamentHistory'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'contract_address'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tx_receipt.contractAddress</span>
<span id="cb3-48">compiled_sol[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'contracts'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TournamentHistory.sol'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TournamentHistory'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nonce'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(nonce)</span>
<span id="cb3-49"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/etc/block_chain/contracts/compiled_code.json"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb3-50">    json.dump(compiled_sol, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span></code></pre></div>
<p>위 로직으로 compile 후, 가나슈에 베포되도록 했습니다.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">This module is for storing and retrieving tournament data from the blockchain.</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json, os</span>
<span id="cb4-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> web3 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Web3</span>
<span id="cb4-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> django.conf <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> settings</span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Tournament:</span>
<span id="cb4-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Store and retrieve tournament data from the blockchain.</span></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb4-12">    chain_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BLOCK_CHAIN_NETWORK_ID"</span>))</span>
<span id="cb4-13">    account_address <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BLOCK_CHAIN_ACCOUNT"</span>)</span>
<span id="cb4-14">    private_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BLOCK_CHAIN_PRIVATE_KEY"</span>)</span>
<span id="cb4-15">    </span>
<span id="cb4-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Web3(Web3.HTTPProvider(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://block_chain:8545"</span>))</span>
<span id="cb4-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/etc/block_chain/contracts/compiled_code.json"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb4-19">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.config_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb4-20">        abi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.config_file[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"contracts"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory.sol"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata"</span>])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abi"</span>]</span>
<span id="cb4-21">        contract_address <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.config_file[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"contracts"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory.sol"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TournamentHistory"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"contract_address"</span>]</span>
<span id="cb4-22">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.contract <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w3.eth.contract(address<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>contract_address, abi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>abi)</span>
<span id="cb4-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tournament_detail_event <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.contract.events.TournamentDetail</span>
<span id="cb4-24">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tournament_detail_for_user_event <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.contract.events.TournamentDetailForUser</span>
<span id="cb4-25"></span>
<span id="cb4-26">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> store_tournament(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tournament_date, winner, players, games):</span>
<span id="cb4-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Store tournament data in the blockchain.</span></span>
<span id="cb4-29"></span>
<span id="cb4-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        argument means:</span></span>
<span id="cb4-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        1. tournament date 2. winner:string 3. players:uint[4] 4. games:tuple[3]</span></span>
<span id="cb4-32"></span>
<span id="cb4-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        The games what is tuple means:</span></span>
<span id="cb4-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        (game start time, players:uint[2], winner:string, rally:string)</span></span>
<span id="cb4-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb4-36">        nonce <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w3.eth.get_transaction_count(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.account_address)</span>
<span id="cb4-37">        transaction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.contract.functions.addTournament(</span>
<span id="cb4-38">            tournament_date,</span>
<span id="cb4-39">            winner,</span>
<span id="cb4-40">            players,</span>
<span id="cb4-41">            games</span>
<span id="cb4-42">        ).build_transaction({</span>
<span id="cb4-43">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chainId"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.chain_id,</span>
<span id="cb4-44">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gasPrice"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w3.eth.gas_price,</span>
<span id="cb4-45">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"from"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.account_address,</span>
<span id="cb4-46">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nonce"</span>: nonce,</span>
<span id="cb4-47">        })</span>
<span id="cb4-48">        signed_txn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w3.eth.account.sign_transaction(transaction, private_key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.private_key)</span>
<span id="cb4-49">        tx_hash <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w3.eth.send_raw_transaction(signed_txn.rawTransaction)</span>
<span id="cb4-50">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w3.eth.wait_for_transaction_receipt(tx_hash)</span>
<span id="cb4-51">        </span>
<span id="cb4-52">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_tournament_for_user(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, user_id, page, total):</span>
<span id="cb4-53">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Retrieve tournament data from the blockchain for a specific user.</span></span>
<span id="cb4-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Please give page argument directly from the request.</span></span>
<span id="cb4-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        You will get max 10 logs per page if exist.</span></span>
<span id="cb4-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        If no data in given page, empty array will return</span></span>
<span id="cb4-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Also, if argeuments are invalid (not unsigned int), empty array will return.</span></span>
<span id="cb4-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb4-60">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> user_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> page <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb4-61">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> []</span>
<span id="cb4-62">        page <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb4-63">        target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (page <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> settings.PAGE_SIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> i)) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(settings.PAGE_SIZE)]</span>
<span id="cb4-64">        logs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tournament_detail_for_user_event.create_filter(</span>
<span id="cb4-65">            fromBlock<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb4-66">            toBlock<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'latest'</span>, </span>
<span id="cb4-67">            argument_filters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'user_id'</span>: user_id, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'user_log_key'</span>: target})</span>
<span id="cb4-68">        ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-69">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> log <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> logs.get_all_entries():</span>
<span id="cb4-70">            ret.insert(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, log.args)</span>
<span id="cb4-71">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span>
<span id="cb4-72"></span>
<span id="cb4-73">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_tournament(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, tournament_id):</span>
<span id="cb4-74">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Retrieve tournament data from the blockchain with id.</span></span>
<span id="cb4-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        If tournament_id is not exist, None will return.</span></span>
<span id="cb4-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb4-78">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> tournament_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb4-79">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb4-80">        logs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tournament_detail_event.create_filter(</span>
<span id="cb4-81">            fromBlock<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb4-82">            toBlock<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'latest'</span>, </span>
<span id="cb4-83">            argument_filters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tournament_id'</span>: tournament_id})</span>
<span id="cb4-84">        target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [log.args <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> log <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> logs.get_all_entries()]</span>
<span id="cb4-85">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> target[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> target <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
<p>web3.0을 이용해 모듈화 해줬습니다.</p>
</section>
</section>
<section id="결과" class="level2">
<h2 class="anchored" data-anchor-id="결과">결과</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/printf-score.png" class="img-fluid figure-img"></p>
<figcaption>최종 점수</figcaption>
</figure>
</div>
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-13-20-12-05.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-13-20-12-58.png" class="img-fluid"></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-13-20-13-50.png" class="img-fluid figure-img"></p>
<figcaption>최종 평가</figcaption>
</figure>
</div>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">outro</h2>
<p>ft_transcendence 과제는 통상 5인 팀이 2-3개월에 걸쳐 완성하는 대형 과제입니다. 이런 과제를 고작 3인이 한 달 만에 완료한것은 보통 일이 아니라고 생각합니다.</p>
<p>처음 계획했던 것보다 빠른 진행이 가능했던 건 팀원들의 기술적 역량이 높았던 것도 있지만, 팀원 전원이 지속적인 몰입과 집중력을 유지했던 것과, 매일 아침 미팅을 진행하며 지속적으로 팀원간 의사소통을 했던 것이 크게 작용했던 것 같습니다. 앞으로 이 과제를 수행하실 분들도 협업 능력을 키우는 용도로 해당 과제를 수행해 나가시면 큰 도움이 될거라 생각합니다.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>solidity</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/3.html</guid>
  <pubDate>Thu, 16 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>ft_transcendence - JWT</title>
  <link>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/2.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>아직 작성중인 노트입니다.</p>
</div>
</div>
</div>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-course-6.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul 공통과정 6서클 과제</figcaption>
</figure>
</div>
<p><a href="../../../../posts/03_resources/42_seoul/notes/0.html">1편 github action</a>에 이어서 JWT 파트에 대해 설명하겠습니다.</p>
</section>
<section id="프로젝트-및-구현-설명" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-및-구현-설명">프로젝트 및 구현 설명</h2>
<section id="jwt" class="level3">
<h3 class="anchored" data-anchor-id="jwt">JWT</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-16-20-37-17.png" class="img-fluid figure-img"></p>
<figcaption>security 요구사항</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-16-20-38-52.png" class="img-fluid figure-img"></p>
<figcaption>JWT 요구사항</figcaption>
</figure>
</div>
<p>비밀번호를 저장할 때는 암호화를 해야 한다는 요구사항이 있습니다. 이번 포스팅에서는 다루지 않지만, 우리의 구현에서는 비밀번호 없이 OAuth만으로 로그인이 가능하도록 설계했습니다. 따라서 사용자가 직접 비밀번호를 설정하지는 않습니다.</p>
<p>다만, JWT 구현 과정에서 비밀번호로 간주될 수 있는 부분이 있다고 판단하여 해시 처리를 추가했습니다. 이는 명세서의 해당 요구사항을 반영한 것입니다.</p>
<section id="개념" class="level4">
<h4 class="anchored" data-anchor-id="개념">개념</h4>
<p>구현에 대해 설명하기 전에, 먼저 <strong>JWT(JSON Web Token)가 무엇인지 이해</strong>해야 합니다. JWT는 <strong>토큰 기반 암호화 방식의 표준화된 형식</strong>으로, 다음과 같은 형태를 가지고 있습니다.</p>
<ol type="1">
<li><strong>Header</strong>: 토큰의 유형(예: JWT)과 사용된 암호화 알고리즘(예: HMAC SHA256)을 지정합니다.</li>
<li><strong>Payload</strong>: 토큰에 담을 정보를 포함합니다. 여기에는 클레임(Claim)이라고 불리는 키-값 쌍이 포함됩니다.</li>
<li><strong>Signature</strong>: 헤더와 페이로드를 합친 후, 지정된 알고리즘과 비밀 키를 사용해 서명한 값입니다. 이 서명은 토큰의 무결성을 보장합니다.</li>
</ol>
<p>각 부분은 점(.)으로 구분되며, Base64Url로 인코딩되어 있습니다.</p>
<p>토큰 암호화 방식은 왜 등장했을까요? 우리가 일반적으로 알고 있는 <strong>세션-쿠키 방식과는 어떤 차이</strong>가 있을까요?</p>
<ul>
<li><p><strong>세션-쿠키 방식</strong>: 사용자가 로그인하면 서버는 세션 ID를 생성하고 이를 사용자의 정보와 함께 <strong>데이터베이스나 메모리에 저장</strong>합니다. <strong>이후 클라이언트는 쿠키에 세션 ID를 저장</strong>하고, 요청마다 이를 서버로 전송합니다. 서버는 세션 ID를 검증하여 사용자를 인증합니다. 이 방식은 <strong>사용자가 증가할수록 서버의 메모리나 데이터베이스에 부담이 커집니다.</strong></p></li>
<li><p><strong>토큰 암호화 방식</strong>: 인증에 필요한 정보와 사용자의 정보(클레임)가 <strong>토큰 자체에 포함</strong>되어 있습니다. 서버는 토큰의 서명만 검증하면 되기 때문에 별도의 <strong>저장 공간이 필요하지 않습니다.</strong> 따라서 서버의 부하를 줄일 수 있습니다.</p></li>
</ul>
<p>즉, 기존의 세션-쿠키에서는 서버에 저장하던 정보를 토큰에 담아서 사용자한테 전달하는게 토큰 인증방식입니다. 언뜻 보기에는 토큰 암호화 방식이 세션-쿠키 방식의 상위호환처럼 보이지만, 토큰 방식에는 몇 가지 <strong>보안상의 위협</strong>이 존재합니다. 주요 위협과 그에 대한 대응 방법은 다음과 같습니다.</p>
<ul>
<li><p><strong>토큰 탈취</strong>: 토큰이 노출되면 공격자가 이를 악용할 수 있습니다.</p>
<p>대응 방법: <strong>HTTPS</strong>를 사용하여 통신을 암호화하고, 토큰의 <strong>유효 기간을 짧게</strong> 설정합니다. 또한, <strong>Refresh Token을 사용</strong>하여 Access Token의 유효 기간을 더욱 단축할 수 있습니다.</p></li>
<li><p><strong>XSS(Cross-Site Scripting) 공격</strong>: 악성 스크립트를 통해 토큰을 탈취할 수 있습니다.</p>
<p>대응 방법: <strong>HttpOnly와 Secure 플래그를 사용해 쿠키에 토큰을 저장</strong>합니다.</p></li>
<li><p><strong>CSRF(Cross-Site Request Forgery) 공격</strong>: 사용자의 권한을 도용해 악의적인 요청을 보낼 수 있습니다.</p>
<p>대응 방법: <strong>CSRF 토큰을 사용</strong>하거나, <strong>SameSite 속성을 설정</strong>해 쿠키를 보호합니다.</p></li>
<li><p>토큰 재생 공격: 탈취한 토큰을 재사용하는 공격입니다.</p>
<p>대응 방법: <strong>토큰에 일회용 nonce 값을 포함</strong>시키거나, <strong>토큰 블랙리스트를 관리</strong>합니다.</p></li>
</ul>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>토큰 탈취의 대응방법이 조금 허술하다고 느껴질 수 있습니다.<br>
더 많은 정보는 <a href="https://mgyo.tistory.com/832">이 포스팅</a>이 도움이 될것 같습니다.</p>
</div>
</div>
</div>
<p>인증 방식은 상황에 맞게 알맞은 선택을 하는게 중요합니다. 서버 확장성이나 경량화 측면에서는 토큰 인증 방식이 매력적인 이점을 가져다 줍니다. 하지만, <strong>보안이 중요한 서비스의 경우 session-cookie 방식이 더 유리</strong>할 수 있습니다.</p>
</section>
<section id="구현" class="level4">
<h4 class="anchored" data-anchor-id="구현">구현</h4>
<p>그럼 이제 구현 내용을 보도록 하겠습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>middleware.py</strong></pre>
</div>
<div class="sourceCode" id="cb1" data-filename="middleware.py" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> JWTMiddleware:</span>
<span id="cb1-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, get_response):</span>
<span id="cb1-3">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.get_response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_response</span>
<span id="cb1-4"></span>
<span id="cb1-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__call__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, request):</span>
<span id="cb1-6">        access <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request.COOKIES.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access'</span>)</span>
<span id="cb1-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> access <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> request.path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/auth/ft'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> request.path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/auth/refresh'</span>:</span>
<span id="cb1-8">            request.META[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HTTP_AUTHORIZATION'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Bearer </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>access<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb1-9">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.get_response(request)</span>
<span id="cb1-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> responseclass JWTMiddleware:</span>
<span id="cb1-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, get_response):</span>
<span id="cb1-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.get_response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_response</span>
<span id="cb1-13"></span>
<span id="cb1-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__call__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, request):</span>
<span id="cb1-15">        access <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request.COOKIES.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access'</span>)</span>
<span id="cb1-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> access <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> request.path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/auth/ft'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> request.path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/auth/refresh'</span>:</span>
<span id="cb1-17">            request.META[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HTTP_AUTHORIZATION'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Bearer </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>access<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb1-18">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.get_response(request)</span>
<span id="cb1-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> response</span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>settings.py</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="settings.py" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">SIMPLE_JWT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb2-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AUTH_HEADER_TYPES"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bearer"</span>,),</span>
<span id="cb2-3">    </span>
<span id="cb2-4">    ...</span>
<span id="cb2-5">}</span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>아_정리하기_귀찮아</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="아_정리하기_귀찮아" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_info_from_token(token, key):</span>
<span id="cb3-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb3-3">        payload <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jwt.decode(</span>
<span id="cb3-4">            token,</span>
<span id="cb3-5">            settings.SECRET_KEY,</span>
<span id="cb3-6">            algorithms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[settings.SIMPLE_JWT[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ALGORITHM'</span>]],</span>
<span id="cb3-7">            options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"verify_signature"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"verify_exp"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>}</span>
<span id="cb3-8">        )</span>
<span id="cb3-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> jwt.InvalidTokenError:</span>
<span id="cb3-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb3-11">    ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> payload.get(key)</span>
<span id="cb3-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> CustomTokenRefresh(APIView):</span>
<span id="cb3-15">    permission_classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb3-16"></span>
<span id="cb3-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> post(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, request):</span>
<span id="cb3-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb3-19">            refresh_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request.COOKIES.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refresh'</span>)</span>
<span id="cb3-20">            access_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request.COOKIES.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access'</span>)</span>
<span id="cb3-21">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> refresh_token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb3-22">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> TokenError</span>
<span id="cb3-23">            user_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_info_from_token(refresh_token, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'user_id'</span>)</span>
<span id="cb3-24">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> user_id <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb3-25">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> TokenError</span>
<span id="cb3-26">            user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> User.objects.get(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user_id)</span>
<span id="cb3-27">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> access_token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb3-28">                ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_info_from_token(access_token, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2FA'</span>)</span>
<span id="cb3-29">                is_weak <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ret <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'F'</span></span>
<span id="cb3-30">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb3-31">                is_weak <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> user.two_factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb3-32">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> user.refresh_token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> check_password(refresh_token, user.refresh_token):</span>
<span id="cb3-33">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> TokenError</span>
<span id="cb3-34">            validate_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RefreshToken(refresh_token)</span>
<span id="cb3-35">            validate_token.check_exp()</span>
<span id="cb3-36">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> (TokenError, User.DoesNotExist) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb3-37">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(e, TokenError):</span>
<span id="cb3-38">                user.refresh_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb3-39">                user.save()</span>
<span id="cb3-40">            res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Response({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'detail'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Given token not valid for any token type'</span>}, status<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">401</span>)</span>
<span id="cb3-41">            res.delete_cookie(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access'</span>)</span>
<span id="cb3-42">            res.delete_cookie(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refresh'</span>)</span>
<span id="cb3-43">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> res</span>
<span id="cb3-44">        refresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RefreshToken.for_user(user)</span>
<span id="cb3-45">        user.last_login <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> timezone.now()</span>
<span id="cb3-46">        user.refresh_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_password(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(refresh), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'md5'</span>)</span>
<span id="cb3-47">        user.save()</span>
<span id="cb3-48">        access <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> refresh.access_token</span>
<span id="cb3-49">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> is_weak:</span>
<span id="cb3-50">            access[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2FA'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'F'</span></span>
<span id="cb3-51">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Response(status<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">204</span>)</span>
<span id="cb3-52">        response.set_cookie(</span>
<span id="cb3-53">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access'</span>, </span>
<span id="cb3-54">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(access), </span>
<span id="cb3-55">            httponly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, </span>
<span id="cb3-56">            secure<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb3-57">            samesite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Lax'</span>)</span>
<span id="cb3-58">        response.set_cookie(</span>
<span id="cb3-59">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refresh'</span>, </span>
<span id="cb3-60">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(refresh), </span>
<span id="cb3-61">            httponly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, </span>
<span id="cb3-62">            path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"/auth/refresh;"</span>,</span>
<span id="cb3-63">            secure<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb3-64">            samesite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Strict'</span>)</span>
<span id="cb3-65">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> response</span>
<span id="cb3-66"></span>
<span id="cb3-67"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> AuthProvider(APIView):</span>
<span id="cb3-68">    permission_classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb3-69"></span>
<span id="cb3-70">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, request, auth_name):</span>
<span id="cb3-71">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> auth_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ft'</span>:</span>
<span id="cb3-72">            ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_ft_user(request)</span>
<span id="cb3-73">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb3-74">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> Http404</span>
<span id="cb3-75">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(ret, HttpResponse) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(ret, Response):</span>
<span id="cb3-76">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span>
<span id="cb3-77">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb3-78">            user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> User.objects.get(oauth__id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ret[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>], oauth__provider<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ret[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"provider"</span>])</span>
<span id="cb3-79">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> User.DoesNotExist:</span>
<span id="cb3-80">            user_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> User.objects.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>()</span>
<span id="cb3-81">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>):</span>
<span id="cb3-82">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb3-83">                    username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ret[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'default_username'</span>]</span>
<span id="cb3-84">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb3-85">                    username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ret[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"default_username"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:03d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-86">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> user_list.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>username).exists():</span>
<span id="cb3-87">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb3-88">            random_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(random.choices(string.ascii_letters, k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) </span>
<span id="cb3-89">            user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> User(</span>
<span id="cb3-90">                username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> username, </span>
<span id="cb3-91">                email <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ret[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>],</span>
<span id="cb3-92">                oauth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb3-93">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>: ret[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>],</span>
<span id="cb3-94">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"provider"</span>: ret[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"provider"</span>],</span>
<span id="cb3-95">                },</span>
<span id="cb3-96">                password <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_password(random_str, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'md5'</span>),</span>
<span id="cb3-97">            )</span>
<span id="cb3-98">            user.save()</span>
<span id="cb3-99">            user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> User.objects.get(username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>username)</span>
<span id="cb3-100">            sync_user_to_game_db(user.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, user.username)</span>
<span id="cb3-101">        user.last_login <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> timezone.now()</span>
<span id="cb3-102">        refresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RefreshToken.for_user(user)</span>
<span id="cb3-103">        user.refresh_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_password(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(refresh), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'md5'</span>)</span>
<span id="cb3-104">        user.save()</span>
<span id="cb3-105">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> user.two_factor:</span>
<span id="cb3-106">            res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HttpResponseRedirect(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>settings<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>BASE_URL<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/two-factor'</span>)</span>
<span id="cb3-107">            access <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> refresh.access_token</span>
<span id="cb3-108">            access[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2FA'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'F'</span></span>
<span id="cb3-109">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb3-110">            res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HttpResponseRedirect(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>settings<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>BASE_URL<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/home'</span>)</span>
<span id="cb3-111">            access <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> refresh.access_token</span>
<span id="cb3-112">        res.status_code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">303</span></span>
<span id="cb3-113">        res.set_cookie(</span>
<span id="cb3-114">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access'</span>, </span>
<span id="cb3-115">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(access), </span>
<span id="cb3-116">            httponly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, </span>
<span id="cb3-117">            secure<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb3-118">            samesite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Lax'</span>)</span>
<span id="cb3-119">        res.set_cookie(</span>
<span id="cb3-120">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refresh'</span>, </span>
<span id="cb3-121">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(refresh), </span>
<span id="cb3-122">            httponly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, </span>
<span id="cb3-123">            path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"/auth/refresh;"</span>,</span>
<span id="cb3-124">            secure<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb3-125">            samesite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Strict'</span>)</span>
<span id="cb3-126">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> res</span>
<span id="cb3-127"></span>
<span id="cb3-128"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_ft_user(request):</span>
<span id="cb3-129">    code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request.GET.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'code'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb3-130">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>:</span>
<span id="cb3-131">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HttpResponseRedirect(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">getattr</span>(settings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'AUTH_42_CLIENT_URL'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>))</span>
<span id="cb3-132">        response.status_code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">303</span></span>
<span id="cb3-133">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> response</span>
<span id="cb3-134">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb3-135">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.post(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'https://api.intra.42.fr/oauth/token?</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>urlencode({</span>
<span id="cb3-136">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grant_type'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'authorization_code'</span>,</span>
<span id="cb3-137">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'client_id'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">getattr</span>(settings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'AUTH_42_CLIENT_ID'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>),</span>
<span id="cb3-138">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'client_secret'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">getattr</span>(settings, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'AUTH_42_CLIENT_SECRET'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>),</span>
<span id="cb3-139">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'code'</span>: code,</span>
<span id="cb3-140">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'redirect_uri'</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>settings<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>BASE_URL<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/auth/ft'</span>,</span>
<span id="cb3-141">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scope'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'public'</span>,</span>
<span id="cb3-142">        })<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb3-143">        response.raise_for_status()</span>
<span id="cb3-144">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://api.intra.42.fr/v2/me'</span>, headers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb3-145">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Authorization'</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Bearer </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>response<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>json()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access_token'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb3-146">        })</span>
<span id="cb3-147">        response.raise_for_status()</span>
<span id="cb3-148">        user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response.json()</span>
<span id="cb3-149">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {</span>
<span id="cb3-150">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"default_username"</span>: user[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"login"</span>],</span>
<span id="cb3-151">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"provider"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"42"</span>,</span>
<span id="cb3-152">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>: user[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>],</span>
<span id="cb3-153">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>: user[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>],</span>
<span id="cb3-154">        }</span>
<span id="cb3-155">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> (requests.exceptions.RequestException, JSONDecodeError, <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">KeyError</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb3-156">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> response.status_code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">401</span>:</span>
<span id="cb3-157">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> Response({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"detail"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"잘못된 권한입니다"</span>}, status<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">401</span>)</span>
<span id="cb3-158">        logger.error(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: response code: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>response<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>status_code<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> and response body: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>response<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb3-159">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> Response({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"detail"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Internal Server Error"</span>}, status<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)</span>
<span id="cb3-160"></span>
<span id="cb3-161"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@api_view</span>([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'POST'</span>])</span>
<span id="cb3-162"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@permission_classes</span>([IsAuthenticated])</span>
<span id="cb3-163"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> logOut(request):</span>
<span id="cb3-164">    user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request.user</span>
<span id="cb3-165">    user.last_logout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>timezone.now()</span>
<span id="cb3-166">    user.refresh_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb3-167">    user.save()</span>
<span id="cb3-168">    res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Response(status<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">204</span>)</span>
<span id="cb3-169">    res.delete_cookie(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'access'</span>)</span>
<span id="cb3-170">    res.delete_cookie(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refresh'</span>)</span>
<span id="cb3-171">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> res</span></code></pre></div>
</div>
</section>
</section>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">outro</h2>
<p>3편에 block chain 관련 설명으로 이어서 진행하겠습니다.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>django</category>
  <category>jwt</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/2.html</guid>
  <pubDate>Thu, 16 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>inception-of-things</title>
  <link>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/4.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>아직 작성중인 노트입니다.</p>
</div>
</div>
</div>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-outer-1.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul outer 과제</figcaption>
</figure>
</div>
<p>42 Seoul의 공통 과정을 마무리하면, 원하는 분야를 선택하여 심화 과제를 수행할 수 있습니다. 그중에서도 ’Inception-of-Things’는 인프라 관련 심화 과제로, 가장 많은 경험치를 얻을 수 있는 과제입니다.</p>
<p>얼핏 보면 매우 어려운 과제처럼 느껴질 수 있지만, 개념을 확실히 이해하고 공부한다면 누구나 빠르게 완료할 수 있다고 생각합니다. 저의 경우, CKA 자격증 취득을 목표로 k8s를 공부하던 중 우연히 팀원을 구하게 되어 이 과제를 수행하게 되었습니다. 배경지식이 어느 정도 있는 상태에서 진행하다 보니, 크게 어렵지 않게 잘 마무리할 수 있었던 것 같습니다.</p>
</section>
<section id="프로젝트-및-구현-설명" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-및-구현-설명">프로젝트 및 구현 설명</h2>
<section id="개요" class="level3">
<h3 class="anchored" data-anchor-id="개요">개요</h3>
<p><a href="https://cdn.intra.42.fr/pdf/pdf/143948/en.subject.pdf">과제 명세서</a></p>
<p>참고한 자료는 다음과 같습니다:</p>
<ul>
<li><a href="https://www.udemy.com/course/certified-kubernetes-administrator-with-practice-tests/">CKA Udemy 강의</a></li>
<li><a href="https://www.udemy.com/course/argo-cd-essential-guide-for-end-users-with-practice/">ArgoCD Udemy 강의</a></li>
<li><a href="https://docs.gitlab.com/charts/">gitlab helm 베포 Docs</a></li>
<li><a href="https://developer.hashicorp.com/vagrant/docs">Vagrant Docs</a></li>
</ul>
<p>참고로 저는 보통 새로운 개념을 공부할 때, 영상 강의로 시작을 하지만, 공식 docs도 반드시 확인합니다. 강의가 오래되거나 혹은 강사가 생략해서 모든 개념을 다루지 않는 경우도 많기 때문입니다.</p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>전체 코드는 비공개 되어있는 상태입니다</p>
</div>
</div>
</div>
</section>
<section id="part-1" class="level3">
<h3 class="anchored" data-anchor-id="part-1">Part 1</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-14-00-34.png" class="img-fluid figure-img"></p>
<figcaption>Part 1 요구사항</figcaption>
</figure>
</div>
<ol type="1">
<li>cluster가 뭔지</li>
<li>provision이 뭔지</li>
<li>k8s는 clusting 해주는 tool, provision은 vagrant로 진행</li>
<li>진행 과정</li>
</ol>
<pre class="hcl"><code>Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-24.04"
  config.vm.box_version = "202404.26.0"

  config.vm.define "hyunghkiS" do |control|
    control.vm.hostname = "hyunghkiS"
    control.vm.network "private_network", ip: "192.168.56.110"
    control.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--name", "hyunghkiS"]
      v.memory = "1024"
      v.cpus = "1"
    end
    # just for evaluation
    control.vm.provision "shell", inline: &lt;&lt;-SHELL
      sudo apt-get update
      sudo apt-get install -y net-tools
    SHELL
    control.vm.provision "shell", path: "scripts/server.sh"
  end
  config.vm.define "hyunghkiSW" do |control|
    control.vm.hostname = "hyunghkiSW"
    control.vm.network "private_network", ip: "192.168.56.111"
    control.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--name", "hyunghkiSW"]
      v.memory = "1024"
      v.cpus = "1"
    end
    # just for evaluation
    control.vm.provision "shell", inline: &lt;&lt;-SHELL
      sudo apt-get update
      sudo apt-get install -y net-tools
    SHELL
    control.vm.provision "shell", path: "scripts/agent.sh"
  end
end</code></pre>
<p>vagrant file</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alias k=kubectl'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> /home/vagrant/.bashrc</span>
<span id="cb2-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> /home/vagrant/.bashrc</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sfL</span> https://get.k3s.io <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">K3S_KUBECONFIG_MODE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"644"</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> server <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--node-ip</span> 192.168.56.110</span>
<span id="cb2-7"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">K3S_TOKEN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> cat /var/lib/rancher/k3s/server/node-token<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$K3S_TOKEN</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /vagrant/k3s_token</span></code></pre></div>
<p>server script</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alias k=kubectl'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> /home/vagrant/.bashrc</span>
<span id="cb3-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> /home/vagrant/.bashrc</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">K3S_TOKEN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /vagrant/k3s_token<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sfL</span> https://get.k3s.io <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">K3S_URL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>https://192.168.56.110:6443 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">K3S_TOKEN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$K3S_TOKEN</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--node-ip</span> 192.168.56.111</span></code></pre></div>
<p>agent script</p>
</section>
<section id="part-2" class="level3">
<h3 class="anchored" data-anchor-id="part-2">Part 2</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-14-03-02.png" class="img-fluid figure-img"></p>
<figcaption>Part 2 요구사항</figcaption>
</figure>
</div>
<ol type="1">
<li>본격적으로 cluster 구조에 대해 설명</li>
<li>pod, replicaset, 또 뭐 있었는데 어쨌든 설명</li>
<li>진행 과정</li>
</ol>
<pre class="hcl"><code>Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-24.04"
  config.vm.box_version = "202404.26.0"

  config.vm.define "hyunghkiS" do |control|
    control.vm.hostname = "hyunghkiS"
    control.vm.network "private_network", ip: "192.168.56.110"
    control.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--name", "hyunghkiS"]
      v.memory = "8192"
      v.cpus = "5"
    end
    config.vm.synced_folder "confs", "/etc/vagrant/confs"
    control.vm.provision "shell", path: "scripts/server.sh"
  end
end</code></pre>
<p>vagrant file</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alias k=kubectl'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> /home/vagrant/.bashrc</span>
<span id="cb5-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> /home/vagrant/.bashrc</span>
<span id="cb5-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sfL</span> https://get.k3s.io <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">K3S_KUBECONFIG_MODE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"644"</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> server</span>
<span id="cb5-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">until</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get crd <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ingressroutes.traefik.containo.us'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb5-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'waiting for CRD...'</span></span>
<span id="cb5-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1</span>
<span id="cb5-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb5-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> apply <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> /etc/vagrant/confs</span>
<span id="cb5-11"></span>
<span id="cb5-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">until</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">!</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get pods <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> jsonpath=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{.items[*].metadata.name}'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb5-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1</span>
<span id="cb5-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb5-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> pod <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get pods <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> jsonpath=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{.items[*].metadata.name}'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb5-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">until</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get pods <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$pod</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Running'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb5-17">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1</span>
<span id="cb5-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb5-19">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">app_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get pods <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$pod</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> jsonpath=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{.metadata.labels.app}'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-20">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">HTML</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;EOF</span></span>
<span id="cb5-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;!DOCTYPE html&gt;</span></span>
<span id="cb5-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;html&gt; </span></span>
<span id="cb5-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;head&gt; </span></span>
<span id="cb5-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    &lt;title&gt;Hello Kubernetes!&lt;/title&gt;</span></span>
<span id="cb5-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/head&gt;</span></span>
<span id="cb5-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;body&gt;</span></span>
<span id="cb5-27"></span>
<span id="cb5-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    &lt;div class="main"&gt;</span></span>
<span id="cb5-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        &lt;div class="content"&gt;</span></span>
<span id="cb5-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            &lt;div id="message"&gt; </span></span>
<span id="cb5-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    Hello from </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${app_name}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb5-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/div&gt;</span></span>
<span id="cb5-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;div id="info"&gt;</span></span>
<span id="cb5-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    &lt;table&gt; </span></span>
<span id="cb5-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        &lt;tr&gt;</span></span>
<span id="cb5-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            &lt;th&gt;pod:&lt;/th&gt; </span></span>
<span id="cb5-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            &lt;td&gt;</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${pod}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/td&gt;</span></span>
<span id="cb5-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        &lt;/tr&gt;</span></span>
<span id="cb5-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        &lt;tr&gt;</span></span>
<span id="cb5-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            &lt;th&gt;node:&lt;/th&gt; </span></span>
<span id="cb5-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            &lt;td&gt;</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uname</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> (</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uname</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)&lt;/td&gt; </span></span>
<span id="cb5-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        &lt;/tr&gt; </span></span>
<span id="cb5-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    &lt;/table&gt;</span></span>
<span id="cb5-44"></span>
<span id="cb5-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/div&gt; </span></span>
<span id="cb5-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    &lt;/div&gt; </span></span>
<span id="cb5-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/div&gt;</span></span>
<span id="cb5-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/body&gt;</span></span>
<span id="cb5-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/html&gt;</span></span>
<span id="cb5-50"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">EOF</span></span>
<span id="cb5-51"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-52">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">$"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${HTML}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /home/vagrant/index.html</span>
<span id="cb5-53">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> cp /home/vagrant/index.html <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$pod</span>:/usr/share/nginx/html/index.html <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null</span>
<span id="cb5-54"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
<p>server script</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>deploy.yml</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="deploy.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">apiVersion: apps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1</span>
<span id="cb6-2">kind: Deployment</span>
<span id="cb6-3">metadata:</span>
<span id="cb6-4">  name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>one</span>
<span id="cb6-5">  labels:</span>
<span id="cb6-6">    app: app1</span>
<span id="cb6-7">spec:</span>
<span id="cb6-8">  replicas: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-9">  selector:</span>
<span id="cb6-10">    matchLabels:</span>
<span id="cb6-11">      app: app1</span>
<span id="cb6-12">  template:</span>
<span id="cb6-13">    metadata:</span>
<span id="cb6-14">      labels:</span>
<span id="cb6-15">        app: app1</span>
<span id="cb6-16">    spec:</span>
<span id="cb6-17">      containers:</span>
<span id="cb6-18">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: nginx</span>
<span id="cb6-19">        image: nginx</span>
<span id="cb6-20">        ports:</span>
<span id="cb6-21">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> containerPort: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb6-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb6-23">apiVersion: apps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1</span>
<span id="cb6-24">kind: Deployment</span>
<span id="cb6-25">metadata:</span>
<span id="cb6-26">  name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>two</span>
<span id="cb6-27">  labels:</span>
<span id="cb6-28">    app: app2</span>
<span id="cb6-29">spec:</span>
<span id="cb6-30">  replicas: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb6-31">  selector:</span>
<span id="cb6-32">    matchLabels:</span>
<span id="cb6-33">      app: app2</span>
<span id="cb6-34">  template:</span>
<span id="cb6-35">    metadata:</span>
<span id="cb6-36">      labels:</span>
<span id="cb6-37">        app: app2</span>
<span id="cb6-38">    spec:</span>
<span id="cb6-39">      containers:</span>
<span id="cb6-40">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: nginx</span>
<span id="cb6-41">        image: nginx</span>
<span id="cb6-42">        ports:</span>
<span id="cb6-43">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> containerPort: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb6-44"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb6-45">apiVersion: apps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1</span>
<span id="cb6-46">kind: Deployment</span>
<span id="cb6-47">metadata:</span>
<span id="cb6-48">  name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>three</span>
<span id="cb6-49">  labels:</span>
<span id="cb6-50">    app: app3</span>
<span id="cb6-51">spec:</span>
<span id="cb6-52">  replicas: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-53">  selector:</span>
<span id="cb6-54">    matchLabels:</span>
<span id="cb6-55">      app: app3</span>
<span id="cb6-56">  template:</span>
<span id="cb6-57">    metadata:</span>
<span id="cb6-58">      labels:</span>
<span id="cb6-59">        app: app3</span>
<span id="cb6-60">    spec:</span>
<span id="cb6-61">      containers:</span>
<span id="cb6-62">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: nginx</span>
<span id="cb6-63">        image: nginx</span>
<span id="cb6-64">        ports:</span>
<span id="cb6-65">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> containerPort: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>ing.yml</strong></pre>
</div>
<div class="sourceCode" id="cb7" data-filename="ing.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">apiVersion: networking.k8s.io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1</span>
<span id="cb7-2">kind: Ingress</span>
<span id="cb7-3">metadata:</span>
<span id="cb7-4">  name: ingress</span>
<span id="cb7-5">spec:</span>
<span id="cb7-6">  ingressClassName: traefik</span>
<span id="cb7-7">  rules:</span>
<span id="cb7-8">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> host: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app1.com"</span></span>
<span id="cb7-9">    http:</span>
<span id="cb7-10">      paths:</span>
<span id="cb7-11">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pathType: Prefix</span>
<span id="cb7-12">        path: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span></span>
<span id="cb7-13">        backend:</span>
<span id="cb7-14">          service:</span>
<span id="cb7-15">            name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>one</span>
<span id="cb7-16">            port:</span>
<span id="cb7-17">              number: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb7-18">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> host: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app2.com"</span></span>
<span id="cb7-19">    http:</span>
<span id="cb7-20">      paths:</span>
<span id="cb7-21">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pathType: Prefix</span>
<span id="cb7-22">        path: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span></span>
<span id="cb7-23">        backend:</span>
<span id="cb7-24">          service:</span>
<span id="cb7-25">            name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>two</span>
<span id="cb7-26">            port:</span>
<span id="cb7-27">              number: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>route.yml</strong></pre>
</div>
<div class="sourceCode" id="cb8" data-filename="route.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">apiVersion: traefik.containo.us<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1alpha1</span>
<span id="cb8-2">kind: IngressRoute</span>
<span id="cb8-3">metadata:</span>
<span id="cb8-4">  name: default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>backend</span>
<span id="cb8-5">spec:</span>
<span id="cb8-6">  routes:</span>
<span id="cb8-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> match: PathPrefix(`<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>`)</span>
<span id="cb8-8">      kind: Rule</span>
<span id="cb8-9">      services:</span>
<span id="cb8-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>three</span>
<span id="cb8-11">          port: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>svc.yml</strong></pre>
</div>
<div class="sourceCode" id="cb9" data-filename="svc.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">apiVersion: v1</span>
<span id="cb9-2">kind: Service</span>
<span id="cb9-3">metadata:</span>
<span id="cb9-4">  name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>one</span>
<span id="cb9-5">spec:</span>
<span id="cb9-6">  selector:</span>
<span id="cb9-7">    app: app1</span>
<span id="cb9-8">  ports:</span>
<span id="cb9-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> protocol: TCP</span>
<span id="cb9-10">      port: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb9-11">      targetPort: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb9-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb9-13">apiVersion: v1</span>
<span id="cb9-14">kind: Service</span>
<span id="cb9-15">metadata:</span>
<span id="cb9-16">  name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>two</span>
<span id="cb9-17">spec:</span>
<span id="cb9-18">  selector:</span>
<span id="cb9-19">    app: app2</span>
<span id="cb9-20">  ports:</span>
<span id="cb9-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> protocol: TCP</span>
<span id="cb9-22">      port: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb9-23">      targetPort: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb9-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb9-25">apiVersion: v1</span>
<span id="cb9-26">kind: Service</span>
<span id="cb9-27">metadata:</span>
<span id="cb9-28">  name: app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>three</span>
<span id="cb9-29">spec:</span>
<span id="cb9-30">  selector:</span>
<span id="cb9-31">    app: app3</span>
<span id="cb9-32">  ports:</span>
<span id="cb9-33">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> protocol: TCP</span>
<span id="cb9-34">      port: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb9-35">      targetPort: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span></code></pre></div>
</div>
</section>
<section id="part-3" class="level3">
<h3 class="anchored" data-anchor-id="part-3">Part 3</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-14-04-32.png" class="img-fluid figure-img"></p>
<figcaption>Part 3 요구사항</figcaption>
</figure>
</div>
<ol type="1">
<li>ArgoCD에 대해 설명</li>
<li>진행 과정</li>
</ol>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">! </span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> kubectl <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb10-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install kubectl</span>
<span id="cb10-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb10-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">! </span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> k3d <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb10-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install k3d</span>
<span id="cb10-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb10-9"></span>
<span id="cb10-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">k3d</span> cluster create argocd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9999:9999@loadbalancer"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8888:8888@loadbalancer"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"80:80@loadbalancer"</span></span>
<span id="cb10-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> create ns argocd</span>
<span id="cb10-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> create ns dev</span>
<span id="cb10-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> create ns gitlab</span>
<span id="cb10-14"></span>
<span id="cb10-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> apply <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> argocd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml</span>
<span id="cb10-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> patch deploy argocd-server <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> argocd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'json'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[{"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--insecure"}]'</span></span>
<span id="cb10-17"></span>
<span id="cb10-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get cm argocd-cm <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> argocd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> yaml <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> tmp.yml</span>
<span id="cb10-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">$'data:</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  timeout.reconciliation: 10s'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> tmp.yml</span>
<span id="cb10-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> apply <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> tmp.yml <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> tmp.yml</span>
<span id="cb10-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> rollout restart deploy argocd-repo-server <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> argocd</span>
<span id="cb10-22"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">until</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get svc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> kube-system <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> traefik<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb10-23">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1</span>
<span id="cb10-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb10-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> patch svc traefik <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> kube-system <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{"spec":{"ports":[{"name":"wil","port":8888,"targetPort":"wil"},{"name":"glab","port":9999,"targetPort":"glab"}]}}'</span></span>
<span id="cb10-26"></span>
<span id="cb10-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> patch deploy traefik <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> kube-system <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'json'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[</span></span>
<span id="cb10-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    {"op": "add", "path": "/spec/template/spec/containers/0/ports/-", "value": {"containerPort": 8888, "name": "wil", "protocol": "TCP"}},</span></span>
<span id="cb10-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    {"op": "add", "path": "/spec/template/spec/containers/0/ports/-", "value": {"containerPort": 9999, "name": "glab", "protocol": "TCP"}},</span></span>
<span id="cb10-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    {"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--entrypoints.wil.address=:8888/tcp"},</span></span>
<span id="cb10-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    {"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--entrypoints.glab.address=:9999/tcp"}</span></span>
<span id="cb10-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">]'</span></span>
<span id="cb10-33"></span>
<span id="cb10-34"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">until</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get crd <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ingressroutes.traefik.containo.us'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb10-35">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'waiting for CRD...'</span></span>
<span id="cb10-36">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1</span>
<span id="cb10-37"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb10-38"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> apply <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> ../confs/mand</span>
<span id="cb10-39"></span>
<span id="cb10-40"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">until</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get deploy <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> argocd argocd-server <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-ojsonpath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{.status.availableReplicas}'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-ne</span> 0 <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb10-41">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1</span>
<span id="cb10-42">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'waiting for argocd ready...'</span></span>
<span id="cb10-43"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb10-44"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">$'</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\e</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[92mSetting done!</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\e</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[0m</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">You can start with admin password:'</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get secret argocd-initial-admin-secret <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> argocd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> json <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> password <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">awk</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{gsub(/"/, "", $2); print $2}'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">base64</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--decode</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>application.yml</strong></pre>
</div>
<div class="sourceCode" id="cb11" data-filename="application.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">apiVersion: argoproj.io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1alpha1</span>
<span id="cb11-2">kind: Application</span>
<span id="cb11-3">metadata:</span>
<span id="cb11-4">  name: myapp</span>
<span id="cb11-5">  namespace: argocd</span>
<span id="cb11-6">spec:</span>
<span id="cb11-7">  destination:</span>
<span id="cb11-8">    namespace: dev</span>
<span id="cb11-9">    server: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://kubernetes.default.svc"</span></span>
<span id="cb11-10">  project: development</span>
<span id="cb11-11">  source:</span>
<span id="cb11-12">    path: manifests</span>
<span id="cb11-13">    repoURL: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/42-iot/hyunghki_source.git"</span></span>
<span id="cb11-14">    targetRevision: HEAD</span>
<span id="cb11-15">  syncPolicy:</span>
<span id="cb11-16">    automated:</span>
<span id="cb11-17">      prune: true</span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>dev_route.yml</strong></pre>
</div>
<div class="sourceCode" id="cb12" data-filename="dev_route.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">apiVersion: argoproj.io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1alpha1</span>
<span id="cb12-2">kind: Application</span>
<span id="cb12-3">metadata:</span>
<span id="cb12-4">  name: myapp</span>
<span id="cb12-5">  namespace: argocd</span>
<span id="cb12-6">spec:</span>
<span id="cb12-7">  destination:</span>
<span id="cb12-8">    namespace: dev</span>
<span id="cb12-9">    server: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://kubernetes.default.svc"</span></span>
<span id="cb12-10">  project: development</span>
<span id="cb12-11">  source:</span>
<span id="cb12-12">    path: manifests</span>
<span id="cb12-13">    repoURL: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/42-iot/hyunghki_source.git"</span></span>
<span id="cb12-14">    targetRevision: HEAD</span>
<span id="cb12-15">  syncPolicy:</span>
<span id="cb12-16">    automated:</span>
<span id="cb12-17">      prune: true</span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>ing.yml</strong></pre>
</div>
<div class="sourceCode" id="cb13" data-filename="ing.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">apiVersion: traefik.containo.us<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1alpha1</span>
<span id="cb13-2">kind: IngressRoute</span>
<span id="cb13-3">metadata:</span>
<span id="cb13-4">  name: route</span>
<span id="cb13-5">  namespace: dev</span>
<span id="cb13-6">spec:</span>
<span id="cb13-7">  entryPoints:</span>
<span id="cb13-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> wil</span>
<span id="cb13-9">  routes:</span>
<span id="cb13-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> match: PathPrefix(`<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>`)</span>
<span id="cb13-11">      kind: Rule</span>
<span id="cb13-12">      services:</span>
<span id="cb13-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name: wil<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>playground</span>
<span id="cb13-14">          port: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8888</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>project.yml</strong></pre>
</div>
<div class="sourceCode" id="cb14" data-filename="project.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">apiVersion: networking.k8s.io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1</span>
<span id="cb14-2">kind: Ingress</span>
<span id="cb14-3">metadata:</span>
<span id="cb14-4">  name: argocd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>server<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>http</span>
<span id="cb14-5">  namespace: argocd</span>
<span id="cb14-6">  annotations:</span>
<span id="cb14-7">    traefik.ingress.kubernetes.io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>router.entrypoints: web</span>
<span id="cb14-8">spec:</span>
<span id="cb14-9">  ingressClassName: traefik</span>
<span id="cb14-10">  rules:</span>
<span id="cb14-11">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> http:</span>
<span id="cb14-12">      paths:</span>
<span id="cb14-13">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> path: <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span></span>
<span id="cb14-14">        pathType: Prefix</span>
<span id="cb14-15">        backend:</span>
<span id="cb14-16">          service:</span>
<span id="cb14-17">            name: argocd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>server</span>
<span id="cb14-18">            port:</span>
<span id="cb14-19">              name: http</span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>bonus_application.yml</strong></pre>
</div>
<div class="sourceCode" id="cb15" data-filename="bonus_application.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">apiVersion: argoproj.io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1alpha1</span>
<span id="cb15-2">kind: Application</span>
<span id="cb15-3">metadata:</span>
<span id="cb15-4">  name: gitlab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>app</span>
<span id="cb15-5">  namespace: argocd</span>
<span id="cb15-6">spec:</span>
<span id="cb15-7">  destination:</span>
<span id="cb15-8">    namespace: gitlab</span>
<span id="cb15-9">    server: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://kubernetes.default.svc"</span></span>
<span id="cb15-10">  project: default</span>
<span id="cb15-11">  source:</span>
<span id="cb15-12">    path: manifests</span>
<span id="cb15-13">    repoURL: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://gitlab.192.168.56.110.nip.io/root/hyunghki.git"</span></span>
<span id="cb15-14">    targetRevision: master</span>
<span id="cb15-15">  syncPolicy:</span>
<span id="cb15-16">    automated:</span>
<span id="cb15-17">      prune: true</span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>bonus_route.yml</strong></pre>
</div>
<div class="sourceCode" id="cb16" data-filename="bonus_route.yml" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">apiVersion: argoproj.io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v1alpha1</span>
<span id="cb16-2">kind: Application</span>
<span id="cb16-3">metadata:</span>
<span id="cb16-4">  name: gitlab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>app</span>
<span id="cb16-5">  namespace: argocd</span>
<span id="cb16-6">spec:</span>
<span id="cb16-7">  destination:</span>
<span id="cb16-8">    namespace: gitlab</span>
<span id="cb16-9">    server: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://kubernetes.default.svc"</span></span>
<span id="cb16-10">  project: default</span>
<span id="cb16-11">  source:</span>
<span id="cb16-12">    path: manifests</span>
<span id="cb16-13">    repoURL: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://gitlab.192.168.56.110.nip.io/root/hyunghki.git"</span></span>
<span id="cb16-14">    targetRevision: master</span>
<span id="cb16-15">  syncPolicy:</span>
<span id="cb16-16">    automated:</span>
<span id="cb16-17">      prune: true</span></code></pre></div>
</div>
</section>
<section id="bonus-part" class="level3">
<h3 class="anchored" data-anchor-id="bonus-part">Bonus Part</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-17-14-04-55.png" class="img-fluid figure-img"></p>
<figcaption>Bonus Part 요구사항</figcaption>
</figure>
</div>
<ol type="1">
<li>helm chart가 뭔지</li>
<li>gitlab cluster가 왜 필요한지</li>
<li>진행 과정</li>
</ol>
<pre class="hcl"><code>Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-24.04"
  config.vm.box_version = "202404.26.0"

  config.vm.define "hyunghkiS" do |control|
    control.vm.hostname = "hyunghkiS"
    control.vm.network "private_network", ip: "192.168.56.110"
    control.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--name", "hyunghkiS"]
      v.memory = "16384"
      v.cpus = "5"
    end
    config.vm.synced_folder "confs", "/etc/vagrant/confs"
    control.vm.provision "shell", path: "scripts/setting.sh"
  end
end</code></pre>
<p>vagrant file</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alias k=kubectl'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> /home/vagrant/.bashrc</span>
<span id="cb18-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> /home/vagrant/.bashrc</span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install kubectl</span></span>
<span id="cb18-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sfL</span> https://get.k3s.io <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">K3S_KUBECONFIG_MODE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"644"</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> server <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--disable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>traefik</span>
<span id="cb18-6"></span>
<span id="cb18-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install helm</span></span>
<span id="cb18-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> https://baltocdn.com/helm/signing.asc <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gpg</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--dearmor</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tee /usr/share/keyrings/helm.gpg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null</span>
<span id="cb18-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> apt-transport-https</span>
<span id="cb18-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"deb [arch=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dpkg</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--print-architecture</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tee /etc/apt/sources.list.d/helm-stable-debian.list</span>
<span id="cb18-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get update</span>
<span id="cb18-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> helm</span>
<span id="cb18-13"></span>
<span id="cb18-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># setting gitlab</span></span>
<span id="cb18-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> create ns gitlab</span>
<span id="cb18-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">KUBECONFIG</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/etc/rancher/k3s/k3s.yaml</span>
<span id="cb18-17"></span>
<span id="cb18-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">helm</span> repo add gitlab https://charts.gitlab.io/</span>
<span id="cb18-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">helm</span> repo update</span>
<span id="cb18-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">helm</span> upgrade <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--namespace</span> gitlab <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--install</span> gitlab gitlab/gitlab <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> global.hosts.domain=192.168.56.110.nip.io <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> global.hosts.externalIP=192.168.56.110 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> global.ingress.tls.enabled=false <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> global.hosts.https=false <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> global.ingress.configureCertmanager=false <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> global.edition=ce <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> global.shell.port=4242</span>
<span id="cb18-29"></span>
<span id="cb18-30"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">until</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get deploy <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> gitlab gitlab-webservice-default <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-ojsonpath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{.status.availableReplicas}'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-ne</span> 0 <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb18-31">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 1</span>
<span id="cb18-32">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'waiting for gitlab ready...'</span></span>
<span id="cb18-33"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb18-34"></span>
<span id="cb18-35"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">$'</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\e</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[92mAll done!</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\e</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[0m</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">You can start with root password:'</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get secret gitlab-gitlab-initial-root-password <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> gitlab <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-ojsonpath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{.data.password}'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">base64</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--decode</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</section>
</section>
<section id="결과" class="level2">
<h2 class="anchored" data-anchor-id="결과">결과</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/printf-score.png" class="img-fluid figure-img"></p>
<figcaption>최종 점수</figcaption>
</figure>
</div>
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-13-20-14-45.png" class="img-fluid"></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-13-20-15-10.png" class="img-fluid figure-img"></p>
<figcaption>최종 평가</figcaption>
</figure>
</div>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">outro</h2>
<p>k8s의 개략적인 개념을 적용해보기 좋은 과제였던것 같습니다. 왠지 이 과제를 발판으로 삼아 더 응용할만한 과제가 있을법 한데, 의외로 후속 과제가 없는것이 조금 아쉬웠습니다. 개인적으로 조금 더 깊이 있는 infra 분야의 심화 과제가 많이 나왔으면 좋겠네요.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>vagrant</category>
  <category>k8s</category>
  <category>argoCD</category>
  <category>gitlab</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/4.html</guid>
  <pubDate>Sat, 11 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>ft_printf</title>
  <link>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/0.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>아직 작성중인 노트입니다.</p>
</div>
</div>
</div>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">Intro</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/42-course-2.png" class="img-fluid figure-img"></p>
<figcaption>42 seoul 공통과정 2서클 과제</figcaption>
</figure>
</div>
<p>ft_printf는 42 Seoul 공통과정 초반에 수행했던 과제입니다. 2년이라는 시간이 지나 코드의 세부 내용은 많이 희미해졌지만, C언어에 대한 기억을 되살려가며 코드를 하나씩 설명해보도록 하겠습니다.</p>
</section>
<section id="프로젝트-설명" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-설명">프로젝트 설명</h2>
<section id="개요" class="level3">
<h3 class="anchored" data-anchor-id="개요">개요</h3>
<p><a href="https://cdn.intra.42.fr/pdf/pdf/143719/en.subject.pdf">과제 명세서</a></p>
<p>이 프로젝트는 C언어의 printf 함수를 직접 구현하는 과제입니다. 얼핏 단순해 보이지만, printf의 작동 원리를 깊이 이해해야 하는 복잡한 과제입니다. (사실 어느정도 타협을 해서 구현을 해도 된다고 생각하지만, 이 부분을 납득하지 못하는 평가자를 만나면 곤란해질 수 있습니다.)</p>
<p>구현 시 반드시 <a href="https://github.com/taeng42/norminette/blob/master/pdf/ko.norm.pdf">norminette 규칙</a>을 준수해야 하는데, 이는 코드의 가독성을 위한 것이고, 대표적인 예시는 다음과 같습니다.</p>
<ul>
<li>파일당 함수 5개 이하</li>
<li>함수당 코드 25줄 이하</li>
<li>한 줄당 80자 이하</li>
</ul>
<p>구현의 정확성을 위해 <a href="https://www.dii.uchile.cl/~daespino/files/Iso_C_1999_definition.pdf">ISO C99 표준 문서</a>의 285페이지를 참고했습니다. 자세한 내용은 코드와 함께 설명드리겠습니다.</p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>이 포스팅에서 makefile과 ar 명령어에 대한 설명은 생략하겠습니다.</p>
</div>
</div>
</div>
</section>
<section id="mandatory" class="level3">
<h3 class="anchored" data-anchor-id="mandatory">Mandatory</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/printf-man.png" class="img-fluid figure-img"></p>
<figcaption>Mandatory 요구 내용</figcaption>
</figure>
</div>
<p>허용 함수부터 보겠습니다.</p>
<ul>
<li>malloc</li>
<li>free</li>
<li>write</li>
<li>va_start, va_arg, va_copy, va_end</li>
</ul>
<p>buffer는 따로 구현하지 않을 예정이기 때문에 malloc과 free 함수는 사용하지 않았습니다.</p>
<p>이중 눈여겨볼 함수는 va_ … 함수들인데, 각각의 설명은 <a href="https://linux.die.net/man/3/va_start">이 문서</a>를 참조했습니다. 간단히 설명하자면 이런겁니다. (c언어 프로그램의 메모리 구조, buffer 설명)</p>
</section>
<section id="bonus" class="level3">
<h3 class="anchored" data-anchor-id="bonus">Bonus</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/printf-bonus.png" class="img-fluid figure-img"></p>
<figcaption>Bonus 요구 내용</figcaption>
</figure>
</div>
<p>flag에 대한 내용이 나옵니다. 이제 여기서부터 과제가 애매해지기 시작하는데, 구현 범위를 확실하게 정해야합니다. 그래야 undefined behavior가 발생시, 적절한 답변을 할 수 있습니다. 저는 ISO c99 문서를 기준으로 구현했습니다.</p>
<p>과제에서 제시한 flag들에 대한 설명이 나오는 부분을 한번 보겠습니다.</p>
</section>
</section>
<section id="코드-설명" class="level2">
<h2 class="anchored" data-anchor-id="코드-설명">코드 설명</h2>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>전체 코드는 <a href="https://github.com/cryscham123/my_printf">github repo</a>에서 확인 가능합니다.</p>
</div>
</div>
</div>
<p>header 먼저 살펴보도록 하겠습니다.<br>
변수명이 마음에 안들지만, 협업 경험이 전혀 없던 시기에 작성한 코드임을 감안해주시길 바랍니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb1-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#ifndef FT_PRINTF_H</span></span>
<span id="cb1-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># define FT_PRINTF_H</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*printf에서 사용할 함수들을 macro로 설정해주었습니다. */</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*이 당시엔 enum을 몰라서 이렇게 구현을 했습니다..*/</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># define F_WDTH </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span></span>
<span id="cb1-8"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># define F_PREC </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb1-9"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># define F_ZERO </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb1-10"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># define F_LEFT </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb1-11"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># define F_PLUS </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb1-12"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># define F_SHAP </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-13"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># define F_SPACE </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;stdarg.h&gt;</span></span>
<span id="cb1-16"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"># include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;unistd.h&gt;</span></span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*specifier 문자를 만났을 때, 어떻게 출력을 해야되는지에 대한 정보를 저장할 구조체입니다.*/</span></span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> s_info</span>
<span id="cb1-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-22">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>    flag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*이 변수에 flag 정보를 비트연산으로 저장합니다.*/</span></span>
<span id="cb1-23">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>             field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span> # 이건 뭐였지</span>
<span id="cb1-24">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>             cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*specifier 문자를 처리할 때, 출력하는 문자의 갯수를 저장합니다.*/</span></span>
<span id="cb1-25">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>            cmd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*어떤 specifier를 처리하는지 저장합니다.*/</span></span>
<span id="cb1-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>   t_info<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-27"></span>
<span id="cb1-28"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_printf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...);</span></span>
<span id="cb1-29"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-30"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_printstr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-31"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_putnum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-32"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_puthex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-33"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_max<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-34"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-35"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_precision<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-36"></span>
<span id="cb1-37"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif</span></span></code></pre></div>
<p>다음으로, ft_printf.c 파일의 함수들을 살펴보겠습니다.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb2-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_printf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...)</span></span>
<span id="cb2-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">va_list</span> ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>     cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>     tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-6"></span>
<span id="cb2-7">    va_start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> # 변수 초기화</span>
<span id="cb2-8">    cnt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\0</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'%'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> # format 문자를 만날 경우</span>
<span id="cb2-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-13">            s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb2-14">            tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ft_convert<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> # format 문자를 ft_convert 함수에서 처리해줍니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb2-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb2-17">            tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> write<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> # format 문자가 아닐 경우 그대로 출력합니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb2-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-19">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> # 출력에 실패하면 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>을 반환합니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span> 동적할당을 하지 않았기때문에 다른 조치는 취하지 않습니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb2-20">        cnt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> # 출력한 문자 갯수만큼 계속 저장해줍니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb2-21">        s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb2-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-23">    va_end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> # 최종적으로 출력에 성공한 문자의 갯수를 반환합니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb2-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*flag에 대한 정보를 먼저 처리해줍니다.*/</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*코드가 조금 특이하죠. 사실 norminette 때문에 이렇게 구현했습니다.*/</span></span>
<span id="cb3-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>  ft_convert<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">va_list</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-5">    t_info  i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>     tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-7"></span>
<span id="cb3-8">    i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> # 변수들을 초기화 해줍니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb3-9">    i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cnt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-10">    i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-11">    i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'#'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'+'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-14">        tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0!!1!!!!!!!2!3!!4"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)**</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb3-15">        i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb3-16">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)++;</span></span>
<span id="cb3-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'9'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb3-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-20">        tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-21">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-22">        i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>F_WDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'9'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-24">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-25">            i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(**</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-26">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)++;</span></span>
<span id="cb3-27">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-28">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_parse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb3-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb4-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> ft_flag_validate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_LEFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb4-4">        i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_PREC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb4-6">        i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_SPACE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_PLUS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb4-8">        i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>F_SPACE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*본격적으로 specifier를 처리해주는 로직입니다.*/</span></span>
<span id="cb4-12"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>  ft_parse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">va_list</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> status<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-15"></span>
<span id="cb4-16">    i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-17">    ft_flag_validate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-19">        status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>va_arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">size_t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'%'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-21">        status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'%'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-23">        status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ft_printstr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>va_arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'i'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-25">        status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ft_putnum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>va_arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'u'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-27">        status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ft_putnum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>va_arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'p'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-29">        status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ft_puthex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>va_arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb4-31">        status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ft_puthex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>va_arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>ap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> ft_padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>다음으로, parse.c 파일의 함수들을 입니다.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb5-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*이 로직은 아래에서 사용됩니다.*/</span></span>
<span id="cb5-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'!'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'%'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_LEFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb5-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-9">    i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb5-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>write<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb5-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-12"></span>
<span id="cb5-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_printstr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-15">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-16"></span>
<span id="cb5-17">    len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*printf에서는 null이 오면 (null)을 출력한다는 점을 바탕으로 작성했습니다.*/</span></span>
<span id="cb5-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_printstr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(null)"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb5-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_PREC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]))</span></span>
<span id="cb5-22">        len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb5-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_LEFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb5-24">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-25">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-26">    len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_PREC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]))</span></span>
<span id="cb5-28">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-29">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-30">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-31">        len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb5-32">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-34"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-35"></span>
<span id="cb5-36"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_putnum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-37"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> is_sign<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> is_put<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-40"></span>
<span id="cb5-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-42">        i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>F_PLUS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> F_SPACE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-43">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*norminette 때문에 삼항연산자를 쓸 수 없어서 아래와 같이 작성했습니다.*/</span></span>
<span id="cb5-44">    num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> </span>
<span id="cb5-45">    is_sign <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>F_PLUS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> F_SPACE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-46">    is_put <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> cur <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_PREC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb5-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-48">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-49">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"! !!+-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-50">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-51">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_LEFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb5-52">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ft_max<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cur <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> is_put<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> is_sign<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-53">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-54">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"! !!+-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-55">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-56">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_PREC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb5-57">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_precision<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb5-58">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb5-59">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-60">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_putnum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cur <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-61">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-62">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-63"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-64"></span>
<span id="cb5-65"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_puthex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-66"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-67">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>    s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-68">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>     is_sign<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-69"></span>
<span id="cb5-70">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* %x나 %p specifier의 경우 소문자로 출력 */</span></span>
<span id="cb5-71">    s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0123456789ABCDEF"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'p'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-72">    is_sign <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'p'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!(</span>cur <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-73">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-74">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-75">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> is_sign <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-76">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xX"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'X'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-77">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-78">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_LEFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb5-79">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ft_max<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cur <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> is_sign<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-80">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-81">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> is_sign <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-82">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xX"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'X'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-83">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-84">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_PREC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb5-85">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_precision<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb5-86">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb5-87">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-88">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_puthex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cur <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-89">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-90">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-91"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>마지막으로 flag_utils.c 함수입니다.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb6-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">"ft_printf.h"</span></span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_max<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-9"></span>
<span id="cb6-10"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>    padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-13"></span>
<span id="cb6-14">    padding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_ZERO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-16">        padding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_WDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span></span>
<span id="cb6-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>write<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-20">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-21">        i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-22">        n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-26"></span>
<span id="cb6-27"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ft_precision<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-28"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> F_PREC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>field<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-32">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-34">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-35">        n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-36">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ft_putchr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb6-38"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="결과" class="level2">
<h2 class="anchored" data-anchor-id="결과">결과</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/img/printf-score.png" class="img-fluid figure-img"></p>
<figcaption>최종 점수</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/03_resources/42_seoul/notes/img/2025-01-13-20-07-29.png" class="img-fluid figure-img"></p>
<figcaption>최종 평가</figcaption>
</figure>
</div>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">Outro</h2>
<p>C언어의 깊이 있는 매력을 경험할 수 있었던 과제라고 생각합니다. 특히 프로그램의 메모리 구조를 이해하는 과정에서 많은 것을 배울 수 있었습니다. 과제 구현의 범위가 난해하고, norminette을 지키는 것 때문에 어려움이 조금 있었지만, 그래도 흥미롭게 했던걸로 기억합니다.</p>
<p>사실 솔직히 말하면 제가 제출한 코드는 norminette을 아주 완벽하게 위반하고 있습니다. norminette에서는 한 줄에 여러 동작을 하는 코드를 작성하지 말라고 나와있는데, 뭐..네 그렇습니다. 그래도 소설로 비유하면 가끔은 비유법과 은유법이 들어가줘야 재미가 있는것 아니겠습니까? 남들이 조금 못 알아보면 어떻습니까? 가끔은 이런 재미있는 코드도 존재해야 발전이라는게 있는거죠.</p>
<p>..농담이고 협업할때는 절대 이렇게 코드를 작성하지 않습니다. 어쨌든 긴 글 읽어주셔서 감사합니다!</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>printf</category>
  <category>c</category>
  <category>42 seoul</category>
  <guid>https://cryscham123.github.io/posts/03_resources/42_seoul/notes/0.html</guid>
  <pubDate>Sat, 11 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>2-기초(2)</title>
  <link>https://cryscham123.github.io/posts/01_projects/선형대수_복습/notes/2.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<blockquote class="blockquote">
<p>행렬의 곱은 교환법칙이 성립하지 않는다.</p>
</blockquote>
<section id="행렬의-곱을-바라보는-관점" class="level2">
<h2 class="anchored" data-anchor-id="행렬의-곱을-바라보는-관점">행렬의 곱을 바라보는 관점</h2>
<ol type="1">
<li>내적으로 바라보기</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0AA%20=%20%5Cbegin%7Bbmatrix%7D%0Aa_1%5ET%20%5C%5C%0Aa_2%5ET%20%5C%5C%0Aa_3%5ET%0A%5Cend%7Bbmatrix%7D%0A%5Cquad%20(a_x%20=%20%5Ctext%7Bcolumn%20vector%7D)%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0AAB%20=%20%5Cbegin%7Bbmatrix%7D%0Aa_1%5ET%20%5C%5C%0Aa_2%5ET%20%5C%5C%0Aa_3%5ET%0A%5Cend%7Bbmatrix%7D%0A%5Cbegin%7Bbmatrix%7D%0Ab_1%20&amp;%20b_2%20&amp;%20b_3%0A%5Cend%7Bbmatrix%7D%20=%0A%5Cbegin%7Bbmatrix%7D%0Aa_1%5ETb_1%20&amp;%20a_1%5ETb_2%20&amp;%20a_1%5ETb_3%20%5C%5C%0Aa_2%5ETb_1%20&amp;%20a_2%5ETb_2%20&amp;%20a_2%5ETb_3%20%5C%5C%0Aa_3%5ETb_1%20&amp;%20a_3%5ETb_2%20&amp;%20a_3%5ETb_3%0A%5Cend%7Bbmatrix%7D%0A"></p>
<ol start="2" type="1">
<li>rank-1 matrix의 합</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0AAB%20=%20%5Cbegin%7Bbmatrix%7D%0Aa_1%20&amp;%20a_2%20&amp;%20a_3%0A%5Cend%7Bbmatrix%7D%0A%5Cbegin%7Bbmatrix%7D%0Ab_1%5ET%20%5C%5C%0Ab_2%5ET%20%5C%5C%0Ab_3%5ET%0A%5Cend%7Bbmatrix%7D%20=%0Aa_1%5ETb_1%20+%20a_2%5ETb_2%20+%20a_3%5ETb_3%0A"></p>
<ol start="3" type="1">
<li>Column space로 바라보기</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0AAx%20=%20%5Cbegin%7Bbmatrix%7D%0Aa_1%20&amp;%20a_2%20&amp;%20a_3%0A%5Cend%7Bbmatrix%7D%0A%5Cbegin%7Bbmatrix%7D%0Ax_1%20%5C%5C%0Ax_2%20%5C%5C%0Ax_3%0A%5Cend%7Bbmatrix%7D%20=%20a_1x_1%20+%20a_2x_2%20+%20a_3x_3%0A"></p>
<ol start="4" type="1">
<li>Row space로 바라보기</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0Ax%5ETA%20=%20%5Cbegin%7Bbmatrix%7D%0Ax_1%20&amp;%20x_2%20&amp;%20x_3%0A%5Cend%7Bbmatrix%7D%0A%5Cbegin%7Bbmatrix%7D%0Aa_1%5ET%20%5C%5C%0Aa_2%5ET%20%5C%5C%0Aa_3%5ET%0A%5Cend%7Bbmatrix%7D%20=%20x_1a_1%5ET%20+%20x_2a_2%5ET%20+%20x_3a_3%5ET%0A"></p>
</section>
<section id="span과-column-space" class="level2">
<h2 class="anchored" data-anchor-id="span과-column-space">span과 column space</h2>
<ul>
<li><p>column space: column vector들이 span하는 영역</p></li>
<li><p>span: linear combination으로 만들어지는 모든 벡터들의 집합</p></li>
<li><p>linear combination: vector들을 scalar 배 하고 더한 것</p></li>
<li><p>linear independent: span하는 vector들이 서로 독립적인 경우</p>
<p>수학적 정의: <img src="https://latex.codecogs.com/png.latex?a_1v_1%20+%20a_2v_2%20+%20%5Ccdots%20+%20a_nv_n%20=%200"> 일 때 <img src="https://latex.codecogs.com/png.latex?a_1%20=%20a_2%20=%20%5Ccdots%20=%20a_n%20=%200"> 인 경우</p></li>
<li><p>basis: 어떤 공간을 이루는 필수적인 구성요소 (<code>linear independent</code>, <code>span</code>)</p></li>
</ul>
</section>
<section id="항등행렬" class="level2">
<h2 class="anchored" data-anchor-id="항등행렬">항등행렬</h2>
<p><img src="https://latex.codecogs.com/png.latex?AI%20=%20IA%20=%20A">를 만족하는 행렬 <img src="https://latex.codecogs.com/png.latex?I"></p>
</section>
<section id="역행렬" class="level2">
<h2 class="anchored" data-anchor-id="역행렬">역행렬</h2>
<p><img src="https://latex.codecogs.com/png.latex?Ax%20=%20b">를 만족하는 <img src="https://latex.codecogs.com/png.latex?x">를 찾는 것은 <img src="https://latex.codecogs.com/png.latex?A%5E%7B-1%7DAx%20=%20A%5E%7B-1%7Db">를 만족하는 <img src="https://latex.codecogs.com/png.latex?x">를 찾는 것과 같다.</p>
</section>
<section id="대각-행렬" class="level2">
<h2 class="anchored" data-anchor-id="대각-행렬">대각 행렬</h2>
<p>diagonal을 제외한 모든 요소가 0인 행렬 (square, rectangular 모두 가능)</p>
</section>
<section id="orthogonal-행렬" class="level2">
<h2 class="anchored" data-anchor-id="orthogonal-행렬">Orthogonal 행렬</h2>
<p>행렬의 모든 column들이 orthonormal vector인 경우</p>
<p><img src="https://latex.codecogs.com/png.latex?Q%5E%7B-1%7D%20=%20Q%5ET"></p>
</section>
<section id="행렬의-rank" class="level2">
<h2 class="anchored" data-anchor-id="행렬의-rank">행렬의 rank</h2>
<p>rank: 행렬이 가지는 independent한 column의 개수 → column space의 차원</p>
<p><code>rank(A) = rank(A^T)</code></p>
<ul>
<li>full-column rank: 해가 없거나 한 개 존재</li>
<li>full-row rank: 해가 무한하다</li>
<li>full rank: 해가 한 개 있다.</li>
<li>rank-deficient: b가 column space에 속하지 않는 경우 해가 없고, 그렇지 않으면 해가 무한하다.</li>
</ul>
</section>
<section id="null-space" class="level2">
<h2 class="anchored" data-anchor-id="null-space">Null space</h2>
<p><img src="https://latex.codecogs.com/png.latex?Ax%20=%200">을 만족하는 모든 <img src="https://latex.codecogs.com/png.latex?x">의 집합</p>
<p>A가 m x n 행렬이라면, dim(N(A)) = n - rank(A)</p>
<p>null space와 row space는 orthogonal하다.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>선형 대수</category>
  <guid>https://cryscham123.github.io/posts/01_projects/선형대수_복습/notes/2.html</guid>
  <pubDate>Fri, 10 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Nonlinear Programming</title>
  <link>https://cryscham123.github.io/posts/01_projects/OR_예습/notes/3.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="nonlinear-programming-example" class="level2">
<h2 class="anchored" data-anchor-id="nonlinear-programming-example">Nonlinear Programming Example</h2>
<ul>
<li><p>Pricing</p></li>
<li><p>Inventory</p></li>
<li><p>Portfolio optimization (finance)</p>
<p>→ <code>Balance</code> (margin vs price, ordering cost vs inventory cost, return vs risk, …)</p></li>
</ul>
<p>Because <code>trade off</code> can only be modeled in a nonlinear way, the programs are by nature <code>nonlinear</code></p>
<blockquote class="blockquote">
<p>At least one of fumular is nonlinear, Nonlinear Program.<br>
But some people says that NLP contents LP</p>
</blockquote>
<section id="example-pricing-a-single-good" class="level3">
<h3 class="anchored" data-anchor-id="example-pricing-a-single-good">Example: Pricing a single good</h3>
<ul>
<li>A retailer buys one product at a unit cost <img src="https://latex.codecogs.com/png.latex?c"></li>
<li>It chooses a unit retail price <img src="https://latex.codecogs.com/png.latex?p"></li>
<li>The demand is a function of <img src="https://latex.codecogs.com/png.latex?p">: <img src="https://latex.codecogs.com/png.latex?D(p)%20=%20a%20-%20bp"></li>
<li>Find profit-maximizing price</li>
</ul>
<img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%0A%5Cunderset%7Bp%7D%7Bmax%7D%20%5Cquad%20%20&amp;(p-c)(a-bp)%20%5C%5C%0As.t.%20%5Cquad%20%20&amp;p%20%E2%89%A5%200%20%5C%5C%0A%5Cend%7Baligned%7D">
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7Bor%7D%0A"></p>
<img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%0A%5Cunderset%7Bp%5Cge0%7D%7Bmax%7D%20%5Cquad%20%20&amp;(p-c)(a-bp)%20%5C%5C%0A%5Cend%7Baligned%7D">
<p><img src="https://latex.codecogs.com/png.latex?p%20-%20c"> is <code>sales margin</code>, <img src="https://latex.codecogs.com/png.latex?a-bp"> is <code>Demand</code> (how many sales)</p>
</section>
<section id="example-folding-a-piece-of-paper" class="level3">
<h3 class="anchored" data-anchor-id="example-folding-a-piece-of-paper">Example: Folding a piece of paper</h3>
<p><img src="https://cryscham123.github.io/img/example-or-1.png" class="img-fluid"></p>
</section>
<section id="example-locating-a-hospital" class="level3">
<h3 class="anchored" data-anchor-id="example-locating-a-hospital">Example: locating a hospital</h3>
<p><img src="https://cryscham123.github.io/img/yo2.png" class="img-fluid"></p>
</section>
</section>
<section id="eoq-model-economic-order-quantity" class="level2">
<h2 class="anchored" data-anchor-id="eoq-model-economic-order-quantity">EOQ Model (Economic Order Quantity)</h2>
<p><img src="https://cryscham123.github.io/img/yo3.png" class="img-fluid"> <img src="https://cryscham123.github.io/img/yo4.png" class="img-fluid"></p>
<ul>
<li><p>Parameters</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?D">: annual demand</li>
<li><img src="https://latex.codecogs.com/png.latex?K">: unit ordering cost</li>
<li><img src="https://latex.codecogs.com/png.latex?h">: unit holding cost per year</li>
<li><img src="https://latex.codecogs.com/png.latex?p">: unit purchasing cost</li>
</ul></li>
<li><p>Decision varaible</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?q">: order quantity per order</li>
</ul></li>
<li><p>Objective: Minimizing annual total cost</p></li>
</ul>
<p><img src="https://cryscham123.github.io/img/yo5.png" class="img-fluid"></p>
</section>
<section id="portfolio-model" class="level2">
<h2 class="anchored" data-anchor-id="portfolio-model">Portfolio Model</h2>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>Operational Research</category>
  <category>1차</category>
  <guid>https://cryscham123.github.io/posts/01_projects/OR_예습/notes/3.html</guid>
  <pubDate>Thu, 09 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>2-기초(1)</title>
  <link>https://cryscham123.github.io/posts/01_projects/선형대수_복습/notes/1.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="vector" class="level2">
<h2 class="anchored" data-anchor-id="vector">Vector</h2>
<p>vector는 크기와 방향을 가지고 있다.</p>
<section id="example" class="level3">
<h3 class="anchored" data-anchor-id="example">Example</h3>
<img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Bbmatrix%7D%0A3%20%5C%5C%0A2%0A%5Cend%7Bbmatrix%7D">
<div id="2eb7257d" class="cell" data-execution_count="1">
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/선형대수_복습/notes/1_files/figure-html/cell-2-output-1.png" width="591" height="434" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>크기: <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7B9%20+%204%7D%20=%20%5Csqrt%7B13%7D"></li>
<li>방향: <img src="https://latex.codecogs.com/png.latex?tan%5E%7B-1%7D(%5Cfrac%7B2%7D%7B3%7D)"></li>
</ul>
<p>크기와 방향이 같으면 같은 벡터이다.</p>
</section>
<section id="덧셈" class="level3">
<h3 class="anchored" data-anchor-id="덧셈">덧셈</h3>
<p>벡터의 덧셈을 기하학적으로 알아보자</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bbmatrix%7D%0A3%20%5C%5C%0A2%0A%5Cend%7Bbmatrix%7D%20+%0A%5Cbegin%7Bbmatrix%7D%0A-2%20%5C%5C%0A1%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p>위의 수식을 좌표평면에 나타나면 다음과 같다.</p>
<div id="103eac78" class="cell" data-execution_count="2">
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/선형대수_복습/notes/1_files/figure-html/cell-3-output-1.png" width="591" height="434" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>끝점을 다 더한 좌표와 시작 점을 연결한 벡터인 <code>초록색 화살표</code>가 두 벡터의 합이 된다.</p>
</section>
<section id="scalar-배" class="level3">
<h3 class="anchored" data-anchor-id="scalar-배">Scalar 배</h3>
<p>vector에 scalar, 즉 숫자 하나를 곱하면 무슨 일이 생길까?</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A2%20*%20%5Cbegin%7Bbmatrix%7D%0A2%20%5C%5C%0A1%0A%5Cend%7Bbmatrix%7D%20=%0A%5Cbegin%7Bbmatrix%7D%0A4%20%5C%5C%0A2%0A%5Cend%7Bbmatrix%7D%0A"> <img src="https://latex.codecogs.com/png.latex?%0A-2%20*%20%5Cbegin%7Bbmatrix%7D%0A2%20%5C%5C%0A1%0A%5Cend%7Bbmatrix%7D%20=%0A%5Cbegin%7Bbmatrix%7D%0A-4%20%5C%5C%0A-2%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p>마찬가지로 좌표평면으로 나타내는건 귀찮아서 생략하겠다.</p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>Scalar 배를 한 벡터끼리 더하면 모든 2차원 좌표를 표현할 수 있다.</p>
</div>
</div>
</div>
</section>
</section>
<section id="전치-transpose" class="level2">
<h2 class="anchored" data-anchor-id="전치-transpose">전치 (Transpose)</h2>
<p>행렬 <img src="https://latex.codecogs.com/png.latex?A">의 요소 <img src="https://latex.codecogs.com/png.latex?a_%7Bij%7D">는 A의 Transpose인 <img src="https://latex.codecogs.com/png.latex?A%5ET">의 <img src="https://latex.codecogs.com/png.latex?a_%7Bji%7D">가 된다. 즉, 행렬 <img src="https://latex.codecogs.com/png.latex?A">를 전치하면 diagnal(대각선 요소)를 제외한 모든 요소가 대각선을 기준으로 서로 뒤바뀐다.</p>
<blockquote class="blockquote">
<p><code>Symmetrix matrix</code>: <img src="https://latex.codecogs.com/png.latex?A%20=%20A%5ET">인 행렬, 즉 대각선을 기준으로 값이 전부 같은 행렬 <code>Hermitian matrix</code>: <img src="https://latex.codecogs.com/png.latex?(A%5E*)%5ET%20=%20A%5EH(conjugate%20transpose)%20=%20A">를 만족하는 행렬</p>
</blockquote>
<p>Vector의 경우에는 Column Vector의 경우, Transpose시 Row Vector로, Row Vector의 경우도 반대로 작용한다.</p>
<section id="properties" class="level3">
<h3 class="anchored" data-anchor-id="properties">Properties</h3>
<ol type="1">
<li><p><img src="https://latex.codecogs.com/png.latex?(A%5ET)%5ET%20=%20A"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?(A+B)%5ET%20=%20A%5ET%20+%20B%5ET"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?%5Ccolor%7Bred%7D%7B(AB)%5ET%20=%20B%5ETA%5ET%7D"></p>
<p><img src="https://latex.codecogs.com/png.latex?(A%5ETA)%5ET">와 <img src="https://latex.codecogs.com/png.latex?(AA%5ET)%5ET">의 결과는 항상 자기 자신이 된다. → <code>Symmetrix matrix</code></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?C(A)%5ET%20=%20CA%5ET"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?det(A%5ET)%20=%20det(A)"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?(A%5ET)%5E%7B-1%7D%20=%20(A%5E%7B-1%7D)%5ET"></p></li>
</ol>
</section>
</section>
<section id="inner-product-projection" class="level2">
<h2 class="anchored" data-anchor-id="inner-product-projection">Inner Product &amp; Projection</h2>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cunderset%7Ba%7D%7B%5Cbegin%7Bbmatrix%7D%0A1%20%5C%5C%0A3%0A%5Cend%7Bbmatrix%7D%7D%20*%0A%5Cunderset%7Bb%7D%7B%5Cbegin%7Bbmatrix%7D%0A5%20%5C%5C%0A1%0A%5Cend%7Bbmatrix%7D%7D%20=%201%20*%205%20+%203%20*%201%20=%208%20=%20a%5ETb%20=%20b%5ETa%0A"></p>
<p>갑자기 등장한 <img src="https://latex.codecogs.com/png.latex?a%5ETb">가 의미하는건 아래와 같다.</p>
<p><img src="https://latex.codecogs.com/png.latex?a%5ETb%20=%20%7C%7Ca%7C%7C*%7C%7Cb%7C%7Ccos%CE%B8"></p>
<blockquote class="blockquote">
<p>||a||는 a 벡터의 크기를 의미한다.</p>
</blockquote>
<p>위의 식을 그림으로 표현해보자</p>
<div id="cf1d70e6" class="cell" data-execution_count="3">
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/선형대수_복습/notes/1_files/figure-html/cell-4-output-1.png" width="648" height="490" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>내적은 초록색 화살표와 파란색 화살표의 곱으로 표현할 수 있다.<br>
이는 a 벡터가 b 벡터의 방향에 대해 얼마나 투영되었는지를 나타낸다.<br>
두 벡터의 방향이 일치할 때 내적의 값이 가장 크고, 수직일 때 0 (안 닮음을 의미), 반대 방향일 때 가장 작은 값이 된다.</p>
<section id="단위-벡터크기가-1인-벡터-계산" class="level3">
<h3 class="anchored" data-anchor-id="단위-벡터크기가-1인-벡터-계산">단위 벡터(크기가 1인 벡터) 계산</h3>
<p>위의 식으로 부터 다음의 추론 과정을 통해 단위 벡터를 계산할 수 있다.</p>
<p><img src="https://latex.codecogs.com/png.latex?a%5ETa%20=%20%7C%7Ca%7C%7C%5E2"><br>
∴ <img src="https://latex.codecogs.com/png.latex?%7C%7Ca%7C%7C%20=%20%5Csqrt%7Ba%5ETa%7D"><br>
∴ 단위 벡터는 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Ba%7D%7B%7C%7Ca%7C%7C%7D"> = <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Ba%7D%7B%5Csqrt%7Ba%5ETa%7D%7D"></p>
</section>
<section id="정사형-벡터의-좌표-계산" class="level3">
<h3 class="anchored" data-anchor-id="정사형-벡터의-좌표-계산">정사형 벡터의 좌표 계산</h3>
<p>벡터의 <code>좌표</code>는 <code>방향과 크기의 곱</code>으로 표현할 수 있다.<br>
<img src="https://latex.codecogs.com/png.latex?a%5ETb%20=%20%7C%7Ca%7C%7C*%7C%7Cb%7C%7Ccos%CE%B8"><br>
정사형 벡터의 크기는 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Ba%5ETb%7D%7B%7C%7Cb%7C%7C%7D%20=%20%5Cfrac%7Ba%5ETb%7D%7B%5Csqrt%7Bb%5ETb%7D%7D"><br>
장사형 벡터의 방향은 b의 단위 벡터와 같다.<br>
즉, 정사형 벡터의 좌표는 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Ba%5ETb%7D%7B%5Csqrt%7Bb%5ETb%7D%7D%20*%20%5Cfrac%7Bb%7D%7B%5Csqrt%7Bb%5ETb%7D%7D%20=%20%5Cfrac%7Ba%5ETb%7D%7Bb%5ETb%7Db"></p>
<p><img src="https://latex.codecogs.com/png.latex?a%5ET%5Cfrac%7Bb%7D%7B%5Csqrt%7Bb%5ETb%7D%7D*%5Cfrac%7Bb%7D%7B%5Csqrt%7Bb%5ETb%7D%7D">로도 구할 수 있다.</p>
<blockquote class="blockquote">
<p>a와 수직으로 연결되는 정사형 벡터 <img src="https://latex.codecogs.com/png.latex?%5Chat%7Bx%7D"><br>
<img src="https://latex.codecogs.com/png.latex?(a-b%5Chat%7Bx%7D)%5ETb%5Chat%7Bx%7D%20=%200"><br>
<img src="https://latex.codecogs.com/png.latex?a%5ETb%20-%20b%5ETbb%5Chat%7Bx%7D%20=%200"><br>
<img src="https://latex.codecogs.com/png.latex?%5Chat%7Bx%7D%20=%20%5Cfrac%7Ba%5ETb%7D%7Bb%5ETb%7D"></p>
</blockquote>
</section>
</section>
<section id="norm" class="level2">
<h2 class="anchored" data-anchor-id="norm">Norm</h2>
<p>크기를 나타내는 것(0 포함, 양 음수 scalar)</p>
<section id="norm-l_2-norm" class="level3">
<h3 class="anchored" data-anchor-id="norm-l_2-norm">2-Norm (<img src="https://latex.codecogs.com/png.latex?l_2">-norm)</h3>
<p>벡터의 물리적인 길이.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Aa%20=%20%5Cbegin%7Bbmatrix%7D%0A1%20%5C%5C%0A2%20%5C%5C%0A3%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%7C%7Ca%7C%7C_2%20=%20%5Csqrt%7B1%5E2+2%5E2+3%5E2%7D%20=%20(%7C1%7C%5E%7B%5Ccolor%7Bred%7D%7B2%7D%7D+%7C2%7C%5E%7B%5Ccolor%7Bred%7D%7B2%7D%7D+%7C3%7C%5E%7B%5Ccolor%7Bred%7D%7B2%7D%7D)%5E%7B%5Ccolor%7Bred%7D%7B%5Cfrac%7B1%7D%7B2%7D%7D%7D"></p>
<p>2 제곱에, <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B2%7D">여서 2-norm이다.</p>
<blockquote class="blockquote">
<p>두 벡터 사이의 거리는 두 벡터의 차이의 2-norm이다.</p>
</blockquote>
</section>
<section id="norm-l_1-norm" class="level3">
<h3 class="anchored" data-anchor-id="norm-l_1-norm">1-Norm (<img src="https://latex.codecogs.com/png.latex?l_1">-norm)</h3>
<p>1 제곱에 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B1%7D">을 계산해주면 된다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%7C%7Ca%7C%7C_1%20=%20(%7C1%7C%5E1+%7C2%7C%5E1+%7C3%7C%5E1)%5E%7B%5Cfrac%7B1%7D%7B1%7D%7D"></p>
</section>
<section id="p-norm-l_p-norm" class="level3">
<h3 class="anchored" data-anchor-id="p-norm-l_p-norm">p-Norm (<img src="https://latex.codecogs.com/png.latex?l_p">-norm)</h3>
<p><img src="https://latex.codecogs.com/png.latex?%7C%7Ca%7C%7C_p%20=%20(%7Cx_1%7C%5Ep+%7Cx_2%7C%5Ep+%7Cx_3%7C%5Ep+...)%5E%7B%5Cfrac%7B1%7D%7Bp%7D%7D%20=%20(%5Cunderset%7Bt%7D%7B%5CSigma%7D%20%7Cx_t%7C%5Ep)%5E%7B%5Cfrac%7B1%7D%7Bp%7D%7D%20%5Cquad%20(p%20%E2%89%A5%201)"></p>
</section>
<section id="infinity-norm" class="level3">
<h3 class="anchored" data-anchor-id="infinity-norm">infinity-Norm</h3>
<p><img src="https://latex.codecogs.com/png.latex?%7C%7Ca%7C%7C_%E2%88%9E%20=%20%5Cunderset%7Bt%7D%7Bmax%7D%7Cx_t%7C"></p>
<p>1-norm, 2-norm, infinity-norm의 값이 1이 되는 모든 벡터들을 좌표평면에 나타내면 다음과 같다.</p>
<div id="7fda1dda" class="cell" data-execution_count="4">
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/선형대수_복습/notes/1_files/figure-html/cell-5-output-1.png" width="592" height="579" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>같은 벡터일 때, 1-norm ≥ 2-norm ≥ ∞-norm 순으로 크다.</p>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>선형 대수</category>
  <guid>https://cryscham123.github.io/posts/01_projects/선형대수_복습/notes/1.html</guid>
  <pubDate>Thu, 09 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>1-개요</title>
  <link>https://cryscham123.github.io/posts/01_projects/선형대수_복습/notes/0.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="선형대수가-무엇일까" class="level2">
<h2 class="anchored" data-anchor-id="선형대수가-무엇일까">선형대수가 무엇일까</h2>
<p>선형 방정식을 matrix와 vector로 표현해서 다루는 수학</p>
<p><img src="https://latex.codecogs.com/png.latex?ax%5E2%20+%20bx%20+%20c%20=%200"> (x)</p>
<p><img src="https://latex.codecogs.com/png.latex?ax_1%20+%20bx_2%20+%20c%20=%200"> (0)</p>
<section id="example" class="level3">
<h3 class="anchored" data-anchor-id="example">Example</h3>
<img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%0Ax%20+%202y%20%5Cquad%20%20&amp;=%204%20%5C%5C%0A2x%20+%205y%20%5Cquad%20&amp;=%209%0A%5Cend%7Baligned%7D">
<p>위의 연립 1차 방정식을 matrix와 vector로 표현해보자</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cunderset%7BA%7D%7B%5Cbegin%7Bbmatrix%7D%0A1%20&amp;%202%20%5C%5C%0A2%20&amp;%205%0A%5Cend%7Bbmatrix%7D%7D%0A%5Cunderset%7Bx%7D%7B%5Cbegin%7Bbmatrix%7D%0Ax%20%5C%5C%0Ay%0A%5Cend%7Bbmatrix%7D%7D%20=%0A%5Cbegin%7Bbmatrix%7D%0A1x%20+%202y%20%5C%5C%0A2x%20+%205y%0A%5Cend%7Bbmatrix%7D%20=%0A%5Cunderset%7Bb%7D%7B%5Cbegin%7Bbmatrix%7D%0A4%20%5C%5C%0A9%0A%5Cend%7Bbmatrix%7D%7D%0A"></p>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>선형 대수</category>
  <guid>https://cryscham123.github.io/posts/01_projects/선형대수_복습/notes/0.html</guid>
  <pubDate>Thu, 09 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Second Brain - 티아고 포르테</title>
  <link>https://cryscham123.github.io/posts/04_archives/para_blog/notes/1.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://contents.kyobobook.co.kr/sih/fit-in/458x0/pdt/9791165347048.jpg" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:30.0%"></p>
</figure>
</div>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<p>도서 <a href="https://product.kyobobook.co.kr/detail/S000201140661">Second Brain</a> 정리 노트입니다.</p>
</div>
</div>
</div>
<section id="second-brain의-핵심-기능" class="level2">
<h2 class="anchored" data-anchor-id="second-brain의-핵심-기능">Second Brain의 핵심 기능</h2>
<ol type="1">
<li><p><code>아이디어를 구체화한다</code></p>
<p>머릿속에서 아이디어를 <code>분리</code>하여 구체적인 형태로 만들어야 한다.</p></li>
<li><p><code>아이디어 사이의 연관성을 새롭게 밝혀낸다.</code></p>
<p>다양한 자료를 한곳에 보관하면 자료간 연결 작업이 촉진되며, 생각지 못한 연관성을 찾아낼 가능성을 높일 수 있다.</p></li>
<li><p><code>시간을 두고 아이디어를 발전시킨다.</code></p>
<p>사람들은 줄곧 아이디어를 떠올릴 때 최신 정보에 중요성을 더 부여하는 경향이 있다.<br>
몇년 간 축적된 아이디어를 마음껏 이용할 수 있다면 더 좋을 것이다.</p></li>
<li><p><code>나만의 독특한 관점을 정교하게 다듬는다.</code></p>
<p>작가의 벽에 부딪히는 것은 적절한 단어를 떠올릴 수 없다는 것이 아니라, 글을 쓸 탄약이 부족하다는 것이다.<br>
자신의 견해를 지지할 수 있는 자료를 지속적으로 모아야한다.</p></li>
</ol>
<blockquote class="blockquote">
<p>머리는 아이디어를 생각하는 곳이지 보관하는 곳이어선 안된다.</p>
</blockquote>
</section>
<section id="중요한-것을-기억하는-4-단계-code" class="level2">
<h2 class="anchored" data-anchor-id="중요한-것을-기억하는-4-단계-code">중요한 것을 기억하는 4 단계 (CODE)</h2>
<ol type="1">
<li><p><strong>Capture: 공명하는 내용을 수집하라</strong></p>
<p>당신과 마음에 닿는 내용을 분별하여 보관하고 나머지는 버려라</p></li>
<li><p><strong>Organazie: 실행을 목표로 정리하라</strong></p>
<p><code>실행</code>을 염두에 두고 정리하라.</p></li>
<li><p><strong>Distill: 핵심을 찾아 추출하라</strong></p>
<p>메모의 요점을 정리하라.<br>
<code>메모를 저장한 이유</code>, <code>생각하던 내용</code>, <code>무엇이 당신의 관심을 끌었는지에 대한 설명</code></p></li>
<li><p><strong>Express: 작업한 결과물을 표현하라</strong></p>
<p>개인적이고 구체적이며 검증된 정보는 실제로 사용할 때에 비로소 <code>지식</code>이 된다.<br>
당신이 아는 내용을 다른 사람과 공유하기 전까지는 그저 <code>이론</code>에 불과하다.</p></li>
</ol>
<section id="capture" class="level3">
<h3 class="anchored" data-anchor-id="capture">Capture</h3>
<p>미래에 어떻게 될지 전혀 모르는데 무엇을 저장할지 어떻게 결정할 수 있을까? 어떤 정보가 보관할 가치가 있는지 정확히 알아내도록 통찰력을 키우기 위해 리처드 파인만의 <code>좋아하는 12가지 문제</code> 방법을 제시한다. 자신에게 흥미를 불러일으키는 <code>열린 질문들</code>을 자유롭게 적어보자. 그후 해당 질문들을 학습의 방향을 제시하는 북극성으로 삼아 활용한다.</p>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
직접 적어본 질문들
</div>
</div>
<div class="callout-body-container callout-body">
<ol type="1">
<li>쇠퇴하지 않는 사람이 되기 위해 꾸준히 해야하는 활동에는 어떤게 있을까?</li>
<li>운에 좌절하지 않기 위해 어떤걸 준비해야 할까?</li>
<li>학점을 잘 받으려면 어떻게 공부해야 할까?</li>
<li>소중한 인연은 무엇인가?</li>
<li>무엇을 위해 발전해야 하는가?</li>
<li>시간이 지나도 가치있는건 무엇일까?</li>
<li>공명하는 지식이 매번 진실일까?</li>
<li>돈을 잘 벌려면 어떻게 해야할까?</li>
</ol>
</div>
</div>
<p>그런 다음, 해당 주제와 관련된 자료에서 아래의 기준에 해당하는 내용들을 선별한다. 수집하는 자료는 외부에 존재하는 자료뿐만 아니라 자료를 수집하면서 얻은 내면 세계의 아이디어 역시 그 대상이될 수 있다.</p>
<ol type="1">
<li><p><strong>영감을 불러일으키는가</strong></p></li>
<li><p><strong>나와 내 일에 유용한가</strong></p></li>
<li><p><strong>개인적인 정보인가</strong></p>
<p>가족이나 친구들과 나눈 문자 메세지들도 수집의 대상이 될 수 있다.</p></li>
<li><p><strong>놀랄 만한 사실인가</strong></p>
<p>기존의 알고있는 자료만 수집하면 <code>확증편향</code>의 위험이 있다.<br>
second brain은 이미 알고 있는 내용을 또 확인하는 방법이 되어서는 안 된다.</p></li>
</ol>
<p>다음과 같은 유형들은 보관하기에 적합하지 않다.</p>
<ol type="1">
<li><strong>민감한 정보</strong></li>
<li><strong>포토샵 파일이나 비디오 영상처럼 전용 앱이 필요한 경우</strong></li>
<li><strong>대용량 파일</strong></li>
<li><strong>공동 편집이 필요한 경우</strong></li>
</ol>
</section>
<section id="organize" class="level3">
<h3 class="anchored" data-anchor-id="organize">Organize</h3>
<p>수집한 자료를 정리할 때, 종류별로 나누지 않고, 얼마나 실행 가능한지에 따라 정리할 수 있다. 주제와 하위 항목으로 연달아 이루어진 복잡한 계층 체계에 따라 메모를 정리하는 대신, <code>이것은 어떤 프로젝트에 가장 도움이 될까?</code>라는 간단한 질문 하나에만 답하면 된다.</p>
<section id="para" class="level4">
<h4 class="anchored" data-anchor-id="para">PARA</h4>
<ol type="1">
<li><p><code>Project</code>: 일이나 생활에서 현재 진행 중이며 단기간 노력이 필요한 일</p>
<p>시작과 끝이 존재. <code>완성</code>, <code>승인</code>, <code>착수</code>, <code>발표</code>처럼 구체적이고 확실한 결과가 있어야 한다.</p></li>
<li><p><code>Area</code>: 오랫동안 관리하고 싶고 장기적으로 책임지는 일</p>
<p>정해진 종료 날짜와 최종 목표가 없음.</p></li>
<li><p><code>Resource</code>: 향후 도움이 될 수 있는 주제 혹은 관심사</p>
<p><code>현재 진행하는 프로젝트 혹은 영역과 관련 없는 자료</code>, 당분간 실행할 수 없는 메모나 파일 등을 보관할 수 있다.</p></li>
<li><p><code>Archive</code>: 전에는 위의 세 가지 유형에 속했지만, 지금은 비활성화된 항목</p>
<p>완료하거나 취소된 프로젝트, 이제는 관리하지 않는 책임 영역, 흥미를 잃은 자원 등을 보관할 수 있다.</p></li>
</ol>
<p>PARA 정리 방식은 부엌 정리 방식과 유사하다. 부엌에 있는 물건들은 전부 식사를 준비하도록 설계되고 정리된다. 각각의 상위 폴더들을 비유하면, archive는 냉동고, resource는 식료품 저장고, 영역은 냉장고, 프로젝트는 불 위에서 끓고 있는 냄비나 팬과 같다.</p>
<p>부엌을 음식 종류에 따라 정리하면 얼마나 터무니없을지 상상해보라. 신선한 과일과 말린 과일, 과일 주스와 냉동 과일은 모두 과일로 만들었다는 이유로 같은 장소에 보관될 것이다. 그런데 이것이 바로 대부분의 사람들이 파일과 메모를 정리하는 방식이다. 책을 읽으며 메모했다는 이유만으로 책 메모는 책 메모끼리, 다른 사람의 말을 인용했다는 이유만으로 인용문은 인용문끼리 보관한다.</p>
</section>
</section>
<section id="distill" class="level3">
<h3 class="anchored" data-anchor-id="distill">Distill</h3>
<p>메모는 단순한 수집을 넘어 실제 활용이 가능한 형태로 정제되어야 한다. 이를 위해 다음과 같은 단계별 요약 과정을 거친다.</p>
<ol type="1">
<li><strong>메모 수집</strong>: 먼저 빠르게 수집, 정리 이후 정제는 나중에 진행</li>
<li><strong>굵게 처리</strong>: 중요한 문장이나 구절을 표시</li>
<li><strong>하이라이트 처리</strong>: 굵게 처리된 내용 중 핵심을 강조</li>
<li><strong>핵심 요약</strong>: 최종적으로 메모의 핵심을 추출</li>
</ol>
<p>이 과정에서 주의할 점들</p>
<ol type="1">
<li><strong>과다 하이라이트 처리</strong>: 이전 단계 내용의 10-20% 정도만 선별</li>
<li><strong>목적 없는 하이라이트 처리</strong>: 무작정 시작하지 않고, 메모를 어떻게 사용할지 알게 될 때까지 기다린 후, 필요에 따라 하이라이트 한다.</li>
<li><strong>어려운 방식의 하이라이트 처리</strong>: 본인의 직관에 맞게 흥미로운 구절들을 하이라이트 한다.</li>
</ol>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<p>메모의 생존 여부는 ’얼마나 쉽게 찾을 수 있는가’에 달려있다.</p>
</div>
</div>
</div>
</section>
<section id="express" class="level3">
<h3 class="anchored" data-anchor-id="express">Express</h3>
<p>맡은일을 중간 단계로 나누어서 최대한 빠르게 결과물을 도출하라 도출한 작업물들을 중간단계로써 다른 프로젝트에 사용할 때, 도움을 얻을 수 있다. 도출한 결과물들을 다른사람들과 공유를 해서 피드백을 받아라</p>
</section>
</section>
<section id="창조력을-완성하는-과정" class="level2">
<h2 class="anchored" data-anchor-id="창조력을-완성하는-과정">창조력을 완성하는 과정</h2>
<p>언제든 참신한 아이디어를 떠올릴 수 있다고 기대해서는 안된다. 혁신과 문제 해결은 흥미로운 아이디어를 체계적으로 불러일으켜 우리가 인식하게 하는 일상에 달려 있다.</p>
<p>세컨드브레인은 창의적인 과정들을 아이디어 수집, 정리, 핵심 추출, 조립의 단계로 표준화하여 우리의 뇌 활동을 돕는다.</p>
<section id="창의적인-프로젝트를-완료할-때-도움이-되는-전략" class="level3">
<h3 class="anchored" data-anchor-id="창의적인-프로젝트를-완료할-때-도움이-되는-전략">창의적인 프로젝트를 완료할 때 도움이 되는 전략</h3>
<ol type="1">
<li><p>아이디어 군도: 프로젝트 수행에 필요한 모든 문서를 모은다. 그리고 해당 문서들을 연결하라.</p></li>
<li><p>헤밍웨이 다리: 현재 진행중인 프로젝트에서 다음과 같은 사항들을 메모에 기록하라.</p>
<ol type="1">
<li>다음 단계에는 어떤 이야기를 쓸 지</li>
<li>현재 상황</li>
<li>잊어버리기 쉬운 세부 사항</li>
<li>다음 작업 시간의 목표</li>
</ol></li>
<li><p>범위 조금씩 축소하기: 프로젝트의 복잡한 문제가 드러나면 과감하게 범위를 축소하라</p></li>
</ol>
</section>
<section id="효율적인-실행을-위한-세-가지-습관" class="level3">
<h3 class="anchored" data-anchor-id="효율적인-실행을-위한-세-가지-습관">효율적인 실행을 위한 세 가지 습관</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<p>정리정돈은 타고난 특성이 아닌 습관이다.</p>
</div>
</div>
</div>
<section id="체크리스트-습관" class="level4">
<h4 class="anchored" data-anchor-id="체크리스트-습관">체크리스트 습관</h4>
<ol type="1">
<li>수집: 프로젝트에 대한 내 생각을 수집하라
<ol type="1">
<li>이 프로젝트에 대해 이미 알고 있는 것은 무엇인가?</li>
<li>알아내야 하지만 아직 모르는 것은 무엇인가?</li>
<li>목표나 목적은 무엇인가?</li>
<li>통찰력을 얻으려면 누구와 대화해야 하는가?</li>
<li>아이디어를 얻으려면 어떤 것을 읽거나 들어야 하는가?</li>
</ol></li>
<li>검토: 관련 메모가 있을 만한 폴더나 태그를 검토하라</li>
<li>검색: 모든 폴더에서 관련 용어를 검색하라</li>
<li>이동: 관련 메모를 프로젝트 폴더로 이동하거나 태그를 설정하라</li>
<li>작성: 수집한 메모로 개요를 작성하고 프로젝트를 계획하라</li>
</ol>
</section>
<section id="리뷰-습관" class="level4">
<h4 class="anchored" data-anchor-id="리뷰-습관">리뷰 습관</h4>
<ol type="1">
<li><p>주간 리뷰</p>
<p>일주일 동안 작업한 모든 메체의 메모를 검토하라 그리고 이번 주 할 과제를 정하라</p></li>
<li><p>월간 리뷰</p>
<p>솔직히 이런건 잘 안할거 같다.</p></li>
</ol>
</section>
<section id="알아차리는-습관" class="level4">
<h4 class="anchored" data-anchor-id="알아차리는-습관">알아차리는 습관</h4>


</section>
</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>학습</category>
  <category>독서</category>
  <guid>https://cryscham123.github.io/posts/04_archives/para_blog/notes/1.html</guid>
  <pubDate>Wed, 08 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>돈의 심리학 - 모건 하우절</title>
  <link>https://cryscham123.github.io/posts/00_inboxes/notes/00.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://contents.kyobobook.co.kr/sih/fit-in/458x0/pdt/9791191056372.jpg" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:30.0%"></p>
</figure>
</div>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<p>도서 <a href="https://product.kyobobook.co.kr/detail/S000001947552?utm_source=google&amp;utm_medium=cpc&amp;utm_campaign=googleSearch&amp;gad_source=1">돈의 심리학</a> 정리 노트입니다.</p>
</div>
</div>
</div>
<section id="금융-행동의-개인차" class="level2">
<h2 class="anchored" data-anchor-id="금융-행동의-개인차">1. 금융 행동의 개인차</h2>
<p>금융 시장에서 개인의 행동 차이는 단순히 정보의 우위나 지적 능력의 차이가 아닌, <code>개인의 경험과 가치관</code>에서 비롯된다. 우리는 각자의 경험을 바탕으로 나름의 합리적인 의사결정을 내린다. 따라서 겉보기에 비합리적으로 보이는 행동도 개인의 맥락에서는 충분히 이해될 수 있다. 돈 문제에 있어서 누구나 미친짓을 한다. 거의 모두가 이 게임이 처음이기 때문이다. 하지만 실제로 미친사람은 없다. 누구나 자신만의 경험에 근거해서 합리적으로 보이는 의사결정을 내릴 뿐이다</p>
</section>
<section id="운과-리스크의-역할" class="level2">
<h2 class="anchored" data-anchor-id="운과-리스크의-역할">2. 운과 리스크의 역할</h2>
<p>금융 시장에서의 결과는 우리의 행동만으로 결정되지 않는다. <code>운의 영향력을 인정하고, 리스크를 적절히 관리</code>하는 것이 중요하다. 이를 위해 우리는 다음과 같은 질문들을 스스로에게 던져야 한다</p>
<ul>
<li>추가적인 수익이 정말 필요한가?</li>
<li>타인과의 비교가 판단을 흐리고 있지는 않은가?</li>
<li>’충분함’의 기준은 무엇인가?</li>
<li>돈보다 우선시해야 할 가치는 무엇인가?</li>
</ul>
<p>어느 정도가 충분한지 깨닫고 리스크를 멈출줄 알아야 한다</p>
</section>
<section id="지속가능한-투자의-원칙" class="level2">
<h2 class="anchored" data-anchor-id="지속가능한-투자의-원칙">3. 지속가능한 투자의 원칙</h2>
<p>일회성 수익보다는 지속가능한 수익이 더 가치있다. 투자에는 두 가지 다른 기술이 필요하다</p>
<ol type="1">
<li><strong>수익 창출</strong>: 리스크 감수, 낙관적 사고, 적극적 태도</li>
<li><strong>자산 보존</strong>: 신중함, 위험 관리, 절제</li>
</ol>
<p>최고의 수익률은 일회성이어서 반복할 수 없는 경향이 있다. 꽤 괜찮은 수익률을 오랫동안 반복할 수 있는게 훌륭한 투자다. 성공적인 투자자는 대중이 비이성적일 때도 침착함을 유지할 수 있는 사람이다.</p>
</section>
<section id="돈과-시간의-관계" class="level2">
<h2 class="anchored" data-anchor-id="돈과-시간의-관계">4. 돈과 시간의 관계</h2>
<p>돈의 진정한 가치는 그것이 우리에게 주는 <code>시간의 자유</code>에 있다. 돈이 주는 가장 큰 배당금은 시간이다 단순히 부자(rich)가 되는 것과 진정한 부(wealthy)를 이루는 것은 다르다. 진정한 부자들은 겉으로 보이는 치장(rich)에 돈을 쓰기 보다는 부를 축적(wealthy)하여 자유를 얻는다.</p>
</section>
<section id="금융시장의-불변요소와-가변요소" class="level2">
<h2 class="anchored" data-anchor-id="금융시장의-불변요소와-가변요소">5. 금융시장의 불변요소와 가변요소</h2>
<p>금융 시장에서 인간의 기본적인 행동 패턴은 크게 변하지 않는다. 탐욕, 공포, 스트레스 상황에서의 반응 등은 시대가 바뀌어도 유사하다. 반면, 시장 트렌드, 산업 구조, 투자 방식 등은 끊임없이 진화한다.</p>
</section>
<section id="리스크-관리의-중요성" class="level2">
<h2 class="anchored" data-anchor-id="리스크-관리의-중요성">6. 리스크 관리의 중요성</h2>
<ul>
<li>파산 위험이 있는 리스크는 절대 감수하지 않는다</li>
<li>계획이 실패했을 때를 대비한 백업 플랜이 필수적이다</li>
<li>시장의 변동성은 피해야 할 벌금이 아닌, <code>수수료</code>로 인식해야 한다</li>
</ul>
</section>
<section id="현실적인-목표-설정" class="level2">
<h2 class="anchored" data-anchor-id="현실적인-목표-설정">7. 현실적인 목표 설정</h2>
<ul>
<li><p>이상적인 목표와 현실적인 스트레스 상황은 큰 차이가 있다</p></li>
<li><p>과거의 비현실적 목표는 과감히 버려야 한다</p>
<p>내가 지금과 다른 사람일 때 세웠던 목표는 생명 유지 장치를 달고 시간을 질질 끌 게 아니라 가차 없이 버리는 편이 낫다</p></li>
</ul>
</section>
<section id="시장의-본질-이해" class="level2">
<h2 class="anchored" data-anchor-id="시장의-본질-이해">8. 시장의 본질 이해</h2>
<ul>
<li>극단적 상황은 오래 지속되지 않는다</li>
<li>투자 성공의 대가를 이해하고 지불할 준비가 필요하다</li>
<li>시장을 완벽히 통제할 수 있다는 환상을 버려야 한다</li>
</ul>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>금융</category>
  <category>독서</category>
  <guid>https://cryscham123.github.io/posts/00_inboxes/notes/00.html</guid>
  <pubDate>Wed, 01 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>데이터 전처리</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/03.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="데이터-전처리의-의미" class="level2">
<h2 class="anchored" data-anchor-id="데이터-전처리의-의미">데이터 전처리의 의미</h2>
<ol type="1">
<li>데이터 클리닝</li>
<li>데이터 통합</li>
<li>데이터 변환</li>
<li>데이터 축소</li>
<li>불균형 데이터 처리</li>
<li>데이터 분할</li>
</ol>
</section>
<section id="이상치-확인-및-정제" class="level2">
<h2 class="anchored" data-anchor-id="이상치-확인-및-정제">이상치 확인 및 정제</h2>
<section id="이상치-확인" class="level3">
<h3 class="anchored" data-anchor-id="이상치-확인">이상치 확인</h3>
<div id="01929d48" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_wine</span>
<span id="cb1-4"></span>
<span id="cb1-5">wine_load <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_wine()</span>
<span id="cb1-6">wine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(wine_load.data, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>wine_load.feature_names)</span>
<span id="cb1-7">wine[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> wine_load.target</span>
<span id="cb1-8">wine[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> wine[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>({<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class_0'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class_1'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class_2'</span>})</span>
<span id="cb1-9"></span>
<span id="cb1-10">plt.boxplot(wine[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'color_intensity'</span>], whis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>)</span>
<span id="cb1-11">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Boxplot of color_intensity'</span>)</span>
<span id="cb1-12">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/03_files/figure-html/cell-2-output-1.png" width="566" height="431" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="909ba309" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> outliers_iqr(dt, col):</span>
<span id="cb2-4">    q1, q3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.percentile(dt[col], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>])</span>
<span id="cb2-5">    iqr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> q3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> q1</span>
<span id="cb2-6">    lower_bound <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> q1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (iqr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>)</span>
<span id="cb2-7">    upper_bound <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> q3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (iqr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>)</span>
<span id="cb2-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> dt[(dt[col] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> lower_bound) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> (dt[col] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> upper_bound)]</span>
<span id="cb2-9"></span>
<span id="cb2-10">outliers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outliers_iqr(wine, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'color_intensity'</span>)</span>
<span id="cb2-11">outliers</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">alcohol</th>
<th data-quarto-table-cell-role="th">malic_acid</th>
<th data-quarto-table-cell-role="th">ash</th>
<th data-quarto-table-cell-role="th">alcalinity_of_ash</th>
<th data-quarto-table-cell-role="th">magnesium</th>
<th data-quarto-table-cell-role="th">total_phenols</th>
<th data-quarto-table-cell-role="th">flavanoids</th>
<th data-quarto-table-cell-role="th">nonflavanoid_phenols</th>
<th data-quarto-table-cell-role="th">proanthocyanins</th>
<th data-quarto-table-cell-role="th">color_intensity</th>
<th data-quarto-table-cell-role="th">hue</th>
<th data-quarto-table-cell-role="th">od280/od315_of_diluted_wines</th>
<th data-quarto-table-cell-role="th">proline</th>
<th data-quarto-table-cell-role="th">class</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">151</td>
<td>12.79</td>
<td>2.67</td>
<td>2.48</td>
<td>22.0</td>
<td>112.0</td>
<td>1.48</td>
<td>1.36</td>
<td>0.24</td>
<td>1.26</td>
<td>10.80</td>
<td>0.48</td>
<td>1.47</td>
<td>480.0</td>
<td>class_2</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">158</td>
<td>14.34</td>
<td>1.68</td>
<td>2.70</td>
<td>25.0</td>
<td>98.0</td>
<td>2.80</td>
<td>1.31</td>
<td>0.53</td>
<td>2.70</td>
<td>13.00</td>
<td>0.57</td>
<td>1.96</td>
<td>660.0</td>
<td>class_2</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">159</td>
<td>13.48</td>
<td>1.67</td>
<td>2.64</td>
<td>22.5</td>
<td>89.0</td>
<td>2.60</td>
<td>1.10</td>
<td>0.52</td>
<td>2.29</td>
<td>11.75</td>
<td>0.57</td>
<td>1.78</td>
<td>620.0</td>
<td>class_2</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">166</td>
<td>13.45</td>
<td>3.70</td>
<td>2.60</td>
<td>23.0</td>
<td>111.0</td>
<td>1.70</td>
<td>0.92</td>
<td>0.43</td>
<td>1.46</td>
<td>10.68</td>
<td>0.85</td>
<td>1.56</td>
<td>695.0</td>
<td>class_2</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="이상치-정제" class="level3">
<h3 class="anchored" data-anchor-id="이상치-정제">이상치 정제</h3>
<ol type="1">
<li>이상치 제거</li>
</ol>
<div id="d6992a40" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">drop_outliers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> wine.drop(index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>outliers.index)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original:"</span>, wine.shape)</span>
<span id="cb3-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Drop outliers:"</span>, drop_outliers.shape)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Original: (178, 14)
Drop outliers: (174, 14)</code></pre>
</div>
</div>
<ol start="2" type="1">
<li>이상치 대체</li>
</ol>
<p>이상치를 NULL로 만든 후, 결측치와 함께 대체</p>
<div id="d8867ce3" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">wine.loc[outliers.index, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'color_intensity'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.NaN</span>
<span id="cb5-2"></span>
<span id="cb5-3">wine[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'color_intensity'</span>].fillna(wine[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'color_intensity'</span>].mean(), inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-4">wine.loc[outliers.index, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'color_intensity'</span>]</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_9135/3568685677.py:3: FutureWarning:

A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>151    4.908678
158    4.908678
159    4.908678
166    4.908678
Name: color_intensity, dtype: float64</code></pre>
</div>
</div>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>데이터 분석</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/03.html</guid>
  <pubDate>Wed, 01 Jan 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Integer Programming</title>
  <link>https://cryscham123.github.io/posts/01_projects/OR_예습/notes/2.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<p>all or nothing problem에서 사용<br>
ex) knapsack problem → 아이템을 0.8개 넣을 수 없다</p>
<section id="requirements-on-selecting-variables" class="level2">
<h2 class="anchored" data-anchor-id="requirements-on-selecting-variables">Requirements on selecting variables</h2>
<ol type="1">
<li><p><strong>At Least</strong></p>
<p>at least <code>one</code> of variables among items 1, 3, 4:</p>
<p><img src="https://latex.codecogs.com/png.latex?x_1%20+%20x_3%20+%20x_4%20%E2%89%A5%201"></p></li>
<li><p><strong>At Most</strong></p>
<p>at most <code>two</code> of variables among items 1, 3, 4:</p>
<p><img src="https://latex.codecogs.com/png.latex?x_1%20+%20x_3%20+%20x_4%20%E2%89%A4%202"></p></li>
<li><p><strong>Or</strong></p>
<p>select variable 1 or 2:</p>
<p><img src="https://latex.codecogs.com/png.latex?x_1%20+%20x_2%20%E2%89%A5%201"></p>
<p>select 2 otherwise item 3 and 4 together:</p>
<p><img src="https://latex.codecogs.com/png.latex?2x_2%20+%20x_3%20+%20x_4%20%E2%89%A5%202"></p></li>
<li><p><strong>If-else</strong></p>
<p>if variable 1 is selected, then variable 2 is also selected:</p>
<p><img src="https://latex.codecogs.com/png.latex?x_1%20%E2%89%A4%20x_2"></p>
<p>if variable 1 is selected, do not select item 3 and 4:</p>
<p><img src="https://latex.codecogs.com/png.latex?2(1%20-%20x_1)%20%E2%89%A5%20x_3%20+%20x_4"></p></li>
</ol>
</section>
<section id="at-leastmost-some-constraints" class="level2">
<h2 class="anchored" data-anchor-id="at-leastmost-some-constraints">At least/most some constraints</h2>
<p>constraints를 유연하게 선택하는 방법</p>
<p><img src="https://latex.codecogs.com/png.latex?g_1(x)%20%E2%89%A4%20b_1">과 <img src="https://latex.codecogs.com/png.latex?g_2(x)%20%E2%89%A5%20b_2">를 둘 다 만족하는 경우를 표현하려면 union으로 표현할 수 있다.</p>
<p>이는 linear program에 적합하지 않기 때문에 variable로 표현한다.</p>
<p><img src="https://latex.codecogs.com/png.latex?z%20=%20%5Cbegin%7Bcases%7D%0A0%20&amp;%20%5Ctext%7Bif%20%7D%20g_1(x)%20%E2%89%A4%20b_1%20%5C%5C%0A1%20&amp;%20%5Ctext%7Bif%20%7D%20g_2(x)%20%E2%89%A4%20b_2%0A%5Cend%7Bcases%7D"></p>
<p>이는 아래의 수식으로 표현할 수 있다</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign%7D%0A&amp;g_1(x)%20-%20b_1%20%E2%89%A4%20M_1z%20%5C%5C%0A&amp;g_2(x)%20-%20b_2%20%E2%89%A4%20M_2(1%20-%20z)%0A%5Cend%7Balign%7D"></p>
<p>이때<img src="https://latex.codecogs.com/png.latex?M_1">과 <img src="https://latex.codecogs.com/png.latex?M_2">는 충분히 큰 상수이다.</p>
</section>
<section id="일반적인-예시" class="level2">
<h2 class="anchored" data-anchor-id="일반적인-예시">일반적인 예시</h2>
<p>Facility location problem</p>
<ol type="1">
<li>where to open convenience stores?</li>
<li>where to build warehouses or distribution centers?</li>
<li>where to build factories?</li>
<li>where to build power stations, fire stations, or police stations?</li>
</ol>
<p>→ where to locate scarce resource?</p>
<p>demoand nodes potential locations</p>
<ol type="1">
<li>set covering problem</li>
<li>maximum covering problem</li>
<li>fixed charge location problem</li>
</ol>
<section id="machine-scheduling-problem" class="level3">
<h3 class="anchored" data-anchor-id="machine-scheduling-problem">machine scheduling problem</h3>
<section id="production-mode" class="level4">
<h4 class="anchored" data-anchor-id="production-mode">production mode</h4>
<ol type="1">
<li>single machine serial production</li>
<li>multiple parallel machines</li>
<li>flow shop scheduling: all jobs must follow the same sequence</li>
<li>job shop scheduling: each job has its own sequence</li>
</ol>
</section>
<section id="job-splitting" class="level4">
<h4 class="anchored" data-anchor-id="job-splitting">job splitting</h4>
<ul>
<li>preemptive problem: 특정 작업을 중단하고 시급한 다른 작업을 수행한 후, 다시 돌아올 수 있음</li>
<li>non-preemptive problem</li>
</ul>
</section>
<section id="performance-measurement" class="level4">
<h4 class="anchored" data-anchor-id="performance-measurement">performance measurement</h4>
<ul>
<li>Makespan: 모든 작업이 끝나는 시간</li>
<li>total completion time</li>
<li>number of delayed jobs</li>
<li>total lateness: completion time이 due time보다 앞서는 경우 negative lateness</li>
<li>total tardiness: completion time이 due time보다 뒤에 있는 경우에만 completion time - due time, 그 외 0</li>
</ul>


</section>
</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>Operational Research</category>
  <category>1차</category>
  <guid>https://cryscham123.github.io/posts/01_projects/OR_예습/notes/2.html</guid>
  <pubDate>Mon, 30 Dec 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>EDA와 시각화</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="edaexploratory-data-analysis" class="level2">
<h2 class="anchored" data-anchor-id="edaexploratory-data-analysis">EDA(Exploratory Data Analysis)</h2>
<p>: 데이터의 특징과 데이터에 내재된 관계를 알아내기 위해 그래프와 통계적 분석 방법을 활용하여 탐구하는 것</p>
<section id="주제" class="level3">
<h3 class="anchored" data-anchor-id="주제">주제</h3>
<ol type="1">
<li>저항성 강조: 부분적 변동(이상치 등)에 대한 민감성 확인</li>
<li>잔차 계산</li>
<li>자료변수의 재표현: 변수를 적당한 척도로 바꾸는 것</li>
<li>그래프를 통한 현시성</li>
</ol>
</section>
</section>
<section id="막대-그래프" class="level2">
<h2 class="anchored" data-anchor-id="막대-그래프">막대 그래프</h2>
<p><code>범주형 데이터</code>를 요약하고 시각적으로 비교하는 데 활용</p>
<div id="c2b59b2e" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_wine</span>
<span id="cb1-4"></span>
<span id="cb1-5">wine_load <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_wine()</span>
<span id="cb1-6">wine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(wine_load.data, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>wine_load.feature_names)</span>
<span id="cb1-7">wine_load</span>
<span id="cb1-8">wine[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Class'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> wine_load.target</span>
<span id="cb1-9">wine[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Class'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> wine[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Class'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>({<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class_0'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class_1'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class_2'</span>})</span>
<span id="cb1-10"></span>
<span id="cb1-11">wine_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> wine[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Class'</span>].value_counts()</span>
<span id="cb1-12">wine_type</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>Class
class_1    71
class_0    59
class_2    48
Name: count, dtype: int64</code></pre>
</div>
</div>
<div id="efbbda62" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 수직 막대</span></span>
<span id="cb3-2">plt.bar(wine_type.index, wine_type.values, width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, align <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>)</span>
<span id="cb3-3">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02_files/figure-html/cell-3-output-1.png" width="566" height="411" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="4d73a7de" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 수평 막대</span></span>
<span id="cb4-2">plt.barh(wine_type.index, wine_type.values, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, align <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>)</span>
<span id="cb4-3">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02_files/figure-html/cell-4-output-1.png" width="598" height="411" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>각 범주의 값의 갯수 <code>차이가 극단적</code>인지 확인한다. 극단적일 경우, 전처리 과정에서 <code>업/다운 샘플링 등을 통해 갯수가 유사해지도록 조정</code>해야한다.</p>
</section>
<section id="히스토그램" class="level2">
<h2 class="anchored" data-anchor-id="히스토그램">히스토그램</h2>
<p><code>연속형 데이터</code>의 분포를 확인하는 데 활용</p>
<div id="0c6072c3" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Wine alcohol histogram'</span>)</span>
<span id="cb5-2">plt.hist(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alcohol'</span>, bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>), color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'purple'</span>, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>wine)</span>
<span id="cb5-3">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02_files/figure-html/cell-5-output-1.png" width="566" height="431" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="box-plot" class="level2">
<h2 class="anchored" data-anchor-id="box-plot">box plot</h2>
<p><code>수치형 변수</code>의 분포를 확인하는 그래프</p>
<div id="74012273" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_iris</span>
<span id="cb6-2"></span>
<span id="cb6-3">iris_load <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_iris()</span>
<span id="cb6-4">iris <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(iris_load.data, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>iris_load.feature_names)</span>
<span id="cb6-5">iris[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iris_load.target</span>
<span id="cb6-6">iris[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iris[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>({<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'setosa'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'versicolor'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'virginica'</span>})</span>
<span id="cb6-7"></span>
<span id="cb6-8">plt.boxplot(iris.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span>))</span>
<span id="cb6-9">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02_files/figure-html/cell-6-output-1.png" width="558" height="411" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="2a754627" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb7-2"></span>
<span id="cb7-3">sns.boxplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"class"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sepal width (cm)"</span>, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>iris)</span>
<span id="cb7-4">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02_files/figure-html/cell-7-output-1.png" width="589" height="432" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="산점도" class="level2">
<h2 class="anchored" data-anchor-id="산점도">산점도</h2>
<p>두 개의 <code>수치형 변수</code>의 <code>분포와 관계</code>를 확인하는 그래프</p>
<div id="21cc12c3" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'iris scatter'</span>)</span>
<span id="cb8-2">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sepal length (cm)'</span>)</span>
<span id="cb8-3">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sepal width (cm)'</span>)</span>
<span id="cb8-4"></span>
<span id="cb8-5">plt.scatter(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sepal length (cm)'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sepal width (cm)'</span>, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>iris, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb8-6">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02_files/figure-html/cell-8-output-1.png" width="589" height="449" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="b4c420da" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">sns.scatterplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sepal length (cm)'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sepal width (cm)'</span>, hue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span>, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>iris, style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span>)</span>
<span id="cb9-2">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02_files/figure-html/cell-9-output-1.png" width="589" height="432" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="선그래프" class="level2">
<h2 class="anchored" data-anchor-id="선그래프">선그래프</h2>
<section id="수평-수직-선" class="level3">
<h3 class="anchored" data-anchor-id="수평-수직-선">수평 / 수직 선</h3>
<div id="92fc340a" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">plt.hlines(y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, xmin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, xmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, linestyles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'solid'</span>)</span>
<span id="cb10-2">plt.vlines(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, ymin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, ymax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, linestyles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dashed'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02_files/figure-html/cell-10-output-1.png" width="590" height="411" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="함수식" class="level3">
<h3 class="anchored" data-anchor-id="함수식">함수식</h3>
<div id="ab158c5c" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> linear_func(x):</span>
<span id="cb11-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb11-3"></span>
<span id="cb11-4">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iris[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sepal length (cm)'</span>]</span>
<span id="cb11-5">plt.plot(X, linear_func(X), c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)</span>
<span id="cb11-6">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02_files/figure-html/cell-11-output-1.png" width="566" height="411" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="회귀선" class="level3">
<h3 class="anchored" data-anchor-id="회귀선">회귀선</h3>
<div id="120ba4fb" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb12-2"></span>
<span id="cb12-3">X, Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iris[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sepal length (cm)'</span>], iris[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sepal width (cm)'</span>]</span>
<span id="cb12-4">plt.scatter(X, Y, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb12-5">a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.polyfit(X, Y, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb12-6">plt.plot(X, a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b, c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)</span>
<span id="cb12-7">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02_files/figure-html/cell-12-output-1.png" width="571" height="413" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>2차 이상의 그래프는 X값에 대하여 정렬해야 한다.</p>
<div id="a6b45637" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">iris2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iris.sort_values(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sepal length (cm)'</span>)</span>
<span id="cb13-2">X, Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iris2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sepal length (cm)'</span>], iris2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'petal length (cm)'</span>]</span>
<span id="cb13-3">b2, b1, b0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.polyfit(X, Y, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb13-4">plt.scatter(X, Y, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb13-5">plt.plot(X, b0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>X<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)</span>
<span id="cb13-6">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02_files/figure-html/cell-13-output-1.png" width="558" height="411" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="꺾은선" class="level3">
<h3 class="anchored" data-anchor-id="꺾은선">꺾은선</h3>
<div id="8442e067" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">plt.plot(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sepal length (cm)'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'petal length (cm)'</span>, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>iris2)</span>
<span id="cb14-2">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02_files/figure-html/cell-14-output-1.png" width="558" height="411" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="상관관계-시각화" class="level2">
<h2 class="anchored" data-anchor-id="상관관계-시각화">상관관계 시각화</h2>
<section id="산점도-행렬" class="level3">
<h3 class="anchored" data-anchor-id="산점도-행렬">산점도 행렬</h3>
<div id="88a9f86c" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pandas.plotting <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> scatter_matrix</span>
<span id="cb15-2"></span>
<span id="cb15-3">scatter_matrix(iris, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>), diagonal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hist'</span>)</span>
<span id="cb15-4">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02_files/figure-html/cell-15-output-1.png" width="649" height="655" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="1850077a" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">sns.pairplot(iris, diag_kind<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'auto'</span>, hue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span>)</span>
<span id="cb16-2">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02_files/figure-html/cell-16-output-1.png" width="1069" height="947" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="상관계수-행렬-그래프" class="level3">
<h3 class="anchored" data-anchor-id="상관계수-행렬-그래프">상관계수 행렬 그래프</h3>
<div id="fa11b83b" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">iris_corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iris.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span>).corr(method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pearson'</span>)</span>
<span id="cb17-2">sns.heatmap(iris_corr, xticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>iris_corr.columns, yticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>iris_corr.columns, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RdBu_r"</span>, annot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02_files/figure-html/cell-17-output-1.png" width="648" height="520" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="pandas-profiling" class="level2">
<h2 class="anchored" data-anchor-id="pandas-profiling">Pandas Profiling</h2>
<div id="ee0ff106" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from pandas_profiling import ProfileReport</span></span>
<span id="cb18-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ProfileReport(iris)</span></span></code></pre></div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>데이터 분석</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/02.html</guid>
  <pubDate>Sun, 29 Dec 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>PARA Blog 제작</title>
  <link>https://cryscham123.github.io/posts/04_archives/para_blog/notes/0.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>유튜브에서 ‘제2의 두뇌’ 관련 영상을 보고 이 구조로 제 학습 블로그에 적용하면 좋겠다는 생각이 들었습니다. <a href="https://quarto.org/">Quarto</a>로 만들어진 제 블로그에 이 구조를 적용하는 것이 생각보다 쉽지 않긴 했지만, 나름 해볼만 했습니다.</p>
<p>사실 이 글을 작성하는 시점에는 이미 블로그 리뉴얼이 어느 정도 완료된 상태입니다. 코드가 최적화되지 않아 따로 제작 과정을 상세히 공유하지는 않으려 합니다만, <a href="https://github.com/cryscham123/cryscham123.github.io">제 GitHub 레포</a>에서 전체 코드를 확인하실 수 있습니다. 이전 블로그는 <a href="https://cryscham123.framer.website/">여기</a>에서 확인할 수 있습니다.</p>
</section>
<section id="이후-목표" class="level2">
<h2 class="anchored" data-anchor-id="이후-목표">이후 목표</h2>
<p>블로그를 완성하고 보니 Quarto의 필요성에 대해 다시 한번 생각해보게 되었습니다. 데이터 분석을 공부하는 입장에서 Quarto는 분명 대체 불가능한 장점들이 있지만, 웹사이트 구조를 구축하는 데에는 일정 부분 한계가 있어 보입니다.</p>
<p>Document를 읽어보던 중 <a href="https://quarto.org/docs/output-formats/hugo.html">Quarto와 Hugo를 통합하는 방법</a>이 있다는 것을 알게 되었습니다. 이를 통해 Hugo로 블로그의 기본 구조를 만들고, R과 Python 코드 실행 환경으로 Quarto를 활용하는 방안을 고려하고 있습니다.</p>
<p>이번이 jekyll, framer 블로그에 이어서 세번째로 만드는 블로그입니다. 저는 웹 개발보다는 다른 분야에 집중하고 싶기 때문에, 다음 리뉴얼을 마지막으로 블로그 구조 개선을 마무리해보려 합니다.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>블로그</category>
  <guid>https://cryscham123.github.io/posts/04_archives/para_blog/notes/0.html</guid>
  <pubDate>Wed, 25 Dec 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Linear Programming</title>
  <link>https://cryscham123.github.io/posts/01_projects/OR_예습/notes/1.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="terminology" class="level2">
<h2 class="anchored" data-anchor-id="terminology">Terminology</h2>
<ul>
<li>process of <code>fomulating and solving</code> linear programs</li>
<li><code>mathematical program</code> with some special properties
<ol type="1">
<li>objective function</li>
<li>constraints (<img src="https://latex.codecogs.com/png.latex?b_1,%20b_2,%20...,%20b_m">)</li>
<li>decision variables (<img src="https://latex.codecogs.com/png.latex?x_1,%20x_2,%20...,%20x_n,%20x_i%20%E2%88%88%20%E2%84%9D">)<br>
→ also expressed as a <img src="https://latex.codecogs.com/png.latex?x"> that means vector of <img src="https://latex.codecogs.com/png.latex?n"> variables</li>
</ol></li>
</ul>
<section id="constraints" class="level3">
<h3 class="anchored" data-anchor-id="constraints">constraints</h3>
<ul>
<li><p>Sign constraints: single variable</p>
<ul>
<li>nonnegative: <img src="https://latex.codecogs.com/png.latex?x_i%20%E2%89%A5%200"></li>
<li>nonpositive: <img src="https://latex.codecogs.com/png.latex?x_i%20%E2%89%A4%200"></li>
<li>unrestricted in sign or free: no sign constraints</li>
</ul></li>
<li><p>Functional constraints: other cases</p></li>
<li><p>equality constraints: <img src="https://latex.codecogs.com/png.latex?a_1x_1%20+%20a_2x_2%20+%20...%20+%20a_nx_n%20=%20b"></p></li>
<li><p>inequality constraints: <img src="https://latex.codecogs.com/png.latex?a_1x_1%20+%20a_2x_2%20+%20...%20+%20a_nx_n%20%E2%89%A4%20b"></p></li>
<li><p>binding constraints (or active constraints)<br>
no matter <img src="https://latex.codecogs.com/png.latex?g(x)"> is equality or not, if <img src="https://latex.codecogs.com/png.latex?g(a)%20=%20b,%20a"> is binding</p></li>
<li><p>strict constraints: <img src="https://latex.codecogs.com/png.latex?a_1x_1%20+%20a_2x_2%20+%20...%20+%20a_nx_n%20%3C%20b"></p></li>
<li><p>weak constraints: <img src="https://latex.codecogs.com/png.latex?a_1x_1%20+%20a_2x_2%20+%20...%20+%20a_nx_n%20%E2%89%A4%20b"></p>
<p>→ practical mathematical program’s inequalities are <code>all weak</code></p></li>
</ul>
</section>
<section id="solution" class="level3">
<h3 class="anchored" data-anchor-id="solution">solution</h3>
<ul>
<li>feasible solution: satisfies all constraints
<ul>
<li>feasible region: set of all feasible solutions</li>
</ul></li>
<li>optimal solution: maximizes or minimizes the objective function<br>
there may be <code>multiple</code> or <code>no</code> optimal solutions</li>
</ul>
</section>
</section>
<section id="three-types-of-lps" class="level2">
<h2 class="anchored" data-anchor-id="three-types-of-lps">Three types of LPs</h2>
<ol type="1">
<li>Infeasible</li>
<li>Unbounded: unbounded feasible region <code>does not imply</code> an unbounded LP</li>
<li>Finitely optimal
<ul>
<li>Unique optimal solutions</li>
<li>Multiple optimal solutions</li>
</ul></li>
</ol>
<blockquote class="blockquote">
<p>Parameter: we know. <img src="https://latex.codecogs.com/png.latex?C_1,%20C_2,%20..."><br>
Variables: do not know. <img src="https://latex.codecogs.com/png.latex?x_1,%20x_2,%20..."></p>
</blockquote>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>Operational Research</category>
  <category>1차</category>
  <guid>https://cryscham123.github.io/posts/01_projects/OR_예습/notes/1.html</guid>
  <pubDate>Sun, 22 Dec 2024 15:00:00 GMT</pubDate>
</item>
</channel>
</rss>
