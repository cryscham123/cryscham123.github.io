<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>김형훈의 학습 블로그</title>
<link>https://cryscham123.github.io/posts/01_projects/bs_3_1/</link>
<atom:link href="https://cryscham123.github.io/posts/01_projects/bs_3_1/index.xml" rel="self" type="application/rss+xml"/>
<description>3학년 1학기 학부 할 일 총 정리</description>
<image>
<url>https://cryscham123.github.io/profile.jpg</url>
<title>김형훈의 학습 블로그</title>
<link>https://cryscham123.github.io/posts/01_projects/bs_3_1/</link>
</image>
<generator>quarto-1.5.56</generator>
<lastBuildDate>Tue, 29 Apr 2025 15:00:00 GMT</lastBuildDate>
<item>
  <title>프로젝트 관리</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/09.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="프로젝트-vs-프로세스" class="level2">
<h2 class="anchored" data-anchor-id="프로젝트-vs-프로세스">프로젝트 vs 프로세스</h2>
<ul>
<li>프로젝트: 일회성, 하나의 흐름단위</li>
<li>프로세스: 지속적, 여러 흐름 단위</li>
</ul>
</section>
<section id="주경로-기법critical-path-method-cpm" class="level2">
<h2 class="anchored" data-anchor-id="주경로-기법critical-path-method-cpm">주경로 기법(Critical Path Method, CPM)</h2>
<ul>
<li>프로젝트 완료 시간 계산</li>
<li>종속성 path(가장 짧은 시간) 중 가장 긴 path가 critial path
<ul>
<li>이 path의 활동이 지연되면 프로젝트 전체가 지연됨</li>
<li>프로세스 흐름도에서 개별작업의 처리능력이 중요했던것과 달리 프로젝트 종료 시간이 중요.</li>
</ul></li>
</ul>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>생산시스템관리</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/09.html</guid>
  <pubDate>Tue, 29 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>association rule mining</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/14.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<p>거래 데이터 내에서 항목(item) 간의 흥미로운 관계, 즉 “어떤 항목이 발생하면 다른 항목도 같이 발생할 가능성이 높다”는 규칙(예: {기저귀} → {맥주})을 찾는 기법이다.</p>
<p>이는 인과관계가 아닌 동시 발생 경향성을 의미한다.</p>
<ul>
<li><strong>지지도(Support):</strong> 전체 거래 중 특정 항목 집합이 포함된 거래의 비율.</li>
<li><strong>신뢰도(Confidence):</strong> 항목 X를 포함하는 거래 중에서 항목 Y도 함께 포함하는 거래의 비율.</li>
</ul>
<section id="유형" class="level2">
<h2 class="anchored" data-anchor-id="유형">유형</h2>
<ul>
<li>불리언 / 양적 연관 규칙</li>
<li>단일/다차원</li>
<li>단일/다중 수준</li>
</ul>
</section>
<section id="빈번-패턴-마이닝" class="level2">
<h2 class="anchored" data-anchor-id="빈번-패턴-마이닝">빈번 패턴 마이닝</h2>
<ul>
<li><p>데이터 집합에서 자주 발생하는 패턴을 찾는 과정</p></li>
<li><p>연관 규칙 학습 뿐만 아니라 다양한 데이터 마이닝 기법의 기초가 됨</p></li>
<li><p>빈발 패턴: 패턴의 거래 수가 최소 지지도를 넘는 것</p>
<ul>
<li>빈발 패턴의 하위 집합은 빈발 패턴</li>
</ul></li>
<li><p>max frequent: 직속 상위 집합들 모두가 빈번 집합이 아닌 빈번 집합</p></li>
</ul>
</section>
<section id="apirori" class="level2">
<h2 class="anchored" data-anchor-id="apirori">Apirori</h2>
<ul>
<li>후보 생성 → 검사 → 가지치기</li>
<li>frequent itemsets을 찾는 알고리즘
<ul>
<li>monotone property → 가지치기</li>
</ul></li>
</ul>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>data mining</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/14.html</guid>
  <pubDate>Sun, 27 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>프로세스 성과에 미치는 변동성의 영향: 산술 손실</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/08.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<ul>
<li><p>범위는 대략 16까지</p></li>
<li><p>고객이 대기하다가 포기하는 경우를 고려</p></li>
</ul>
<section id="example-food-truck" class="level2">
<h2 class="anchored" data-anchor-id="example-food-truck">example: Food Truck</h2>
<ul>
<li>변동(동일한 확률 가정)
<ul>
<li><strong>수요</strong></li>
<li><strong>공급할 수 있는 양</strong></li>
</ul></li>
<li>수요와 공급이 <strong>동시</strong>에 발생하지 않는 경우로 인해 평균 흐름률이 실제랑 다름.
<ul>
<li><strong>변동성이 흐름률에 영향을 미침</strong></li>
<li>buffer가 있으면 흐름률 높일 수 있음
<ul>
<li>buffer가 없다면?</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="example-병원-외상-센터" class="level2">
<h2 class="anchored" data-anchor-id="example-병원-외상-센터">example: 병원 외상 센터</h2>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/img/2025-04-28-18-55-18.png" class="img-fluid"></p>
<ul>
<li>대기해야 할 상황이 있으면 다른 병원으로 이동
<ul>
<li>diversion 상태, loss(service를 못 받음)</li>
</ul></li>
</ul>
<section id="diversion-상태-확률" class="level3">
<h3 class="anchored" data-anchor-id="diversion-상태-확률">Diversion 상태 확률</h3>
<ul>
<li><p>D &lt; C 가정하지 않음</p></li>
<li><p>도착 간격은 지수분포 가정 (processing time 분포는 가정 안함)</p></li>
<li><p>대기하지 않고 바로 이탈한다고 가정</p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?P_m">: <strong>내재활용률</strong>과 <strong>자원의 수</strong>에 의해 결정됨</p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?r%20=%20um%20=%20%5Cfrac%7Bp%7D%7Ba%7D">, 해야하는 일의 양을 의미</p>
<ul>
<li>단위: Erlang</li>
</ul></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/img/2025-04-28-19-01-52.png" class="img-fluid figure-img"></p>
<figcaption>Erlang Loss Table</figcaption>
</figure>
</div>
<ul>
<li>들어온 인원: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7Ba%7D(1%20-%20P_m(r))"></li>
<li>안 들어온 인원: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7Ba%7DP_m(r)"></li>
</ul>
</section>
</section>
<section id="erlang-loss-table" class="level2">
<h2 class="anchored" data-anchor-id="erlang-loss-table">Erlang Loss Table</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/img/2025-05-01-19-57-26.png" class="img-fluid figure-img"></p>
<figcaption>얼랑 솔실 공식<sup>1</sup></figcaption>
</figure>
</div>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/img/2025-05-01-20-09-03.png" class="img-fluid"></p>
</section>
<section id="buffer의-역할" class="level2">
<h2 class="anchored" data-anchor-id="buffer의-역할">buffer의 역할</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/img/2025-05-01-20-10-25.png" class="img-fluid figure-img"></p>
<figcaption>변동성으로 인해 capacity가 낮아지는 이유</figcaption>
</figure>
</div>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/img/2025-05-01-20-19-03.png" class="img-fluid"></p>
<ul>
<li>변동성이 없다면 cycle time은 1/capacity</li>
<li>변동성이 있다면 cycle time은 늘어남. (시뮬레이션으로 계산)</li>
<li>버퍼가 있으면 1/capacity로 점점 줄어듦.</li>
<li>cell layout을 사용하면 cycle time을 제일 많이 줄일 수 있음.</li>
</ul>


</section>


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a><div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">각주</h2>

<ol>
<li id="fn1"><p>diversion 확률, 꽉 차있을 확률, 도착한 환자가 서비스 받을 확률, 다른 병원으로 갈 확률 시험에 나온다.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>생산시스템관리</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/08.html</guid>
  <pubDate>Sun, 27 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/computer/01.pdf</link>
  <description><![CDATA[ undefined ]]></description>
  <category>보고서</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/computer/01.pdf</guid>
  <pubDate>Sat, 26 Apr 2025 02:25:15 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/05.pdf</link>
  <description><![CDATA[ undefined ]]></description>
  <category>보고서</category>
  <category>데이터 마이닝</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/05.pdf</guid>
  <pubDate>Thu, 24 Apr 2025 23:58:19 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/07.pdf</link>
  <description><![CDATA[ undefined ]]></description>
  <category>보고서</category>
  <category>OR</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/07.pdf</guid>
  <pubDate>Sat, 19 Apr 2025 03:06:02 GMT</pubDate>
</item>
<item>
  <title>쌍대이론과 민감도 분석 (part 6)</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/05.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="쌍대이론의-본질" class="level2">
<h2 class="anchored" data-anchor-id="쌍대이론의-본질">쌍대이론의 본질</h2>
<ul>
<li>모든 선형계획 문제는 쌍대문제를 가진다:
<ul>
<li>원문제(Primal): 예를 들어 이익 최대화.</li>
<li>쌍대문제(Dual): 자원비용 최소화.</li>
</ul></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/img/2025-04-19-11-51-58.png" class="img-fluid figure-img"></p>
<figcaption>원 문제와 쌍대 문제의 관계</figcaption>
</figure>
</div>
<section id="원-쌍대-관계의-성질" class="level3">
<h3 class="anchored" data-anchor-id="원-쌍대-관계의-성질">원-쌍대 관계의 성질</h3>
<ul>
<li>원문제의 최적해가 존재하면 쌍대문제의 최적해도 존재하며, 두 목적함수값은 같다.</li>
<li>원문제의 해로부터 쌍대해를 읽을 수 있고, 그 역도 성립한다.</li>
<li>쌍대해는 자원의 경제적 가치(잠재가격, shadow price)를 의미한다</li>
</ul>
</section>
</section>
<section id="원-쌍대-관계와-상보기저해" class="level2">
<h2 class="anchored" data-anchor-id="원-쌍대-관계와-상보기저해">원-쌍대 관계와 상보기저해</h2>
<section id="상보해complementary-solutions" class="level3">
<h3 class="anchored" data-anchor-id="상보해complementary-solutions">상보해(Complementary Solutions)</h3>
<ul>
<li>원문제의 기저해와 쌍대문제의 기저해는 서로 직접적으로 대응한다.</li>
<li>최적해에서는 원문제와 쌍대문제의 목적함수값이 같다.</li>
</ul>
</section>
<section id="상보여유성" class="level3">
<h3 class="anchored" data-anchor-id="상보여유성">상보여유성</h3>
<ul>
<li>원문제의 기저변수가 0이 아니면, 대응 쌍대변수는 0이고, 그 반대도 성립한다.</li>
<li>이 속성은 심플렉스 방법의 반복과정에서 두 문제의 해가 어떻게 연동되는지 설명한다.</li>
</ul>
</section>
</section>
<section id="다른-원문제-형태의-쌍대문제" class="level2">
<h2 class="anchored" data-anchor-id="다른-원문제-형태의-쌍대문제">다른 원문제 형태의 쌍대문제</h2>
<ul>
<li>비표준형(등식제약식, 변수의 음수 허용 등)에서도 쌍대문제는 항상 존재
<ul>
<li>등식제약식은 쌍대에서 해당 쌍대변수의 부호제약을 제거(음수 허용)한다.</li>
<li>변수의 음수 허용은 쌍대에서 등식제약식으로 나타난다.</li>
</ul></li>
</ul>
<section id="sobsensible-odd-bizarre-법칙" class="level3">
<h3 class="anchored" data-anchor-id="sobsensible-odd-bizarre-법칙">SOB(Sensible-Odd-Bizarre) 법칙</h3>
<ul>
<li>원문제의 제약식 및 변수의 형태(≤, =, ≥, 비음, 무제약 등)에 따라 쌍대문제의 대응 형태를 쉽게 결정하는 규칙.</li>
<li>대칭성: 쌍대문제의 쌍대는 원문제이므로, 두 문제의 관계는 완전히 대칭적이다.</li>
</ul>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>OR</category>
  <category>학부 정리</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/05.html</guid>
  <pubDate>Fri, 18 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Simplex Method (part 5)</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/04.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<ul>
<li>심플렉스 방법의 기하학적·대수적 원리, 행렬형 알고리즘, 그리고 그 실용적 응용(민감도 분석 등)을 체계적으로 설명</li>
<li>심플렉스 방법은 선형계획 문제에서 최적해를 꼭짓점 가능해(CPF)에서 찾으며, 행렬 연산을 통해 컴퓨터로 효율적으로 구현할 수 있다.</li>
</ul>
</section>
<section id="simplex-방법의-기초" class="level2">
<h2 class="anchored" data-anchor-id="simplex-방법의-기초">Simplex 방법의 기초</h2>
<section id="꼭짓점-가능해와-제약식-경계" class="level3">
<h3 class="anchored" data-anchor-id="꼭짓점-가능해와-제약식-경계">꼭짓점 가능해와 제약식 경계</h3>
<ul>
<li>선형계획 문제의 해는 <strong>가능해 영역(feasible region)</strong>의 경계에 존재한다.</li>
<li>이 제약식들을 등호(=)로 바꾼 제약식 경계식을 만들 수 있다.
<ul>
<li>함수 제약식
<ul>
<li>≤: slack variable</li>
<li>=: artificial variable</li>
<li>≥: surplus variable, artificial variable</li>
</ul></li>
<li>비음 제약식
<ul>
<li>non-restricted: <img src="https://latex.codecogs.com/png.latex?x_i%20=%20x_i%5E%7B+%7D%20-%20x_i%5E%7B-%7D"></li>
<li>≤ 0: <img src="https://latex.codecogs.com/png.latex?x_i%20=%20-x_i%5E%7B+%7D"></li>
</ul></li>
</ul></li>
<li>이 경계식들은 2차원에서는 선, 3차원에서는 평면, n차원에서는 <strong>초평면(hyperplane)</strong>을 형성한다.</li>
</ul>
</section>
<section id="꼭짓점-가능해의-세-가지-주요-속성" class="level3">
<h3 class="anchored" data-anchor-id="꼭짓점-가능해의-세-가지-주요-속성">꼭짓점 가능해의 세 가지 주요 속성</h3>
<ol type="1">
<li>최적해의 위치
<ul>
<li>최적해가 유일하면, 그것은 꼭짓점 가능해이다.</li>
<li>최적해가 여러 개라면, 그 중 적어도 두 개는 인접 꼭짓점 가능해이다.</li>
<li>즉, 최적해는 항상 꼭짓점 가능해(혹은 그 선분)에 존재한다.</li>
</ul></li>
<li>유한성
<ul>
<li>꼭짓점 가능해의 개수는 유한합니다.</li>
<li>m+n개의 제약식 중 n개를 선택하는 조합의 수는 유한하므로, 이론적으로 모든 꼭짓점 가능해를 열거해 비교할 수도 있습니다. 하지만 실제로는 심플렉스 방법이 훨씬 적은 수만 탐색한다.</li>
</ul></li>
<li>최적성의 충분조건
<ul>
<li>인접 꼭짓점 중 더 좋은 해가 없으면, 현재 해가 최적해임이 보장된다.</li>
</ul></li>
</ol>
</section>
<section id="심플렉스-방법의-핵심-알고리즘-구조" class="level3">
<h3 class="anchored" data-anchor-id="심플렉스-방법의-핵심-알고리즘-구조">심플렉스 방법의 핵심 알고리즘 구조</h3>
<p>심플렉스 방법은 다음과 같은 반복 구조를 가진다</p>
<ol type="1">
<li>초기 꼭짓점 가능해(기저해) 선택</li>
<li>인접 꼭짓점으로 이동(목적함수 값이 개선되는 방향)</li>
<li>더 이상 개선이 불가능하면 종료, 그 해가 최적해임을 보장</li>
</ol>
</section>
</section>
<section id="행렬형의-simplex" class="level2">
<h2 class="anchored" data-anchor-id="행렬형의-simplex">행렬형의 Simplex</h2>
<section id="행렬형-심플렉스-방법의-기본-구조" class="level3">
<h3 class="anchored" data-anchor-id="행렬형-심플렉스-방법의-기본-구조">행렬형 심플렉스 방법의 기본 구조</h3>
<p>표준형 선형계획 문제를 다음과 같이 쓸 수 있다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Ctext%7BMaximize%7D%20%5Cquad%20&amp;Z=c%5ETx%20%5C%5C%0A%5Ctext%7BSubject%20to%7D%20%5Cquad%20&amp;Ax=b,%20x%E2%89%A50%20%5C%5C%0A%5Cend%7Baligned%7D%0A"></p>
<ul>
<li>여기서 A는 m×n 행렬, x는 n차원 변수 벡터, b는 m차원 상수 벡터, c는 n차원 계수 벡터이다.</li>
<li><strong>여유변수(slack variable)</strong>등을 도입해 모든 제약식을 등식으로 바꾼다.</li>
</ul>
</section>
<section id="행렬-연산을-활용한-반복-과정" class="level3">
<h3 class="anchored" data-anchor-id="행렬-연산을-활용한-반복-과정">행렬 연산을 활용한 반복 과정</h3>
<ul>
<li>(제일 처음 단계의 경우 3, 4단계 먼저 진행)</li>
</ul>
<ol type="1">
<li>진입기저변수(Entering Variable) 선택</li>
<li>탈락기저변수(Leaving Variable) 선택
<ul>
<li>최소비율법(minimum ratio test) 사용</li>
</ul></li>
<li>새로운 기저 가능해 결정
<ul>
<li>기저변수 식별</li>
<li>기저행렬(Basic Matrix, B): m개의 기저변수에 대해 m×m 행렬 <img src="https://latex.codecogs.com/png.latex?B">와 <img src="https://latex.codecogs.com/png.latex?B%5E%7B-1%7D">를 만든다. <sup>1</sup></li>
<li>기저해(Basic Solution) 계산: <img src="https://latex.codecogs.com/png.latex?x_B=B%5E%7B-1%7Db"></li>
<li>목적함수 값 계산: <img src="https://latex.codecogs.com/png.latex?Z=c_B%5ETB%5E%7B%E2%88%921%7Db"></li>
</ul></li>
<li>최적화 검사
<ul>
<li>비기저변수의 계수(감소계수, reduced cost)를 계산
<ul>
<li>계산식: <img src="https://latex.codecogs.com/png.latex?c_B%5ETB%5E%7B%E2%88%921%7Da_n%20-%20c_n"></li>
<li>slack 변수: <img src="https://latex.codecogs.com/png.latex?c_B%5ETB%5E%7B-1%7D"></li>
</ul></li>
<li>최적일 경우 종료</li>
</ul></li>
</ol>


</section>
</section>


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a><div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">각주</h2>

<ol>
<li id="fn1"><p><a href="https://ko.wikipedia.org/wiki/%EA%B0%80%EC%97%AD%ED%96%89%EB%A0%AC">역행렬 구하는 법</a>. 2차원 말고는 그냥 그 방식으로 풀자.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>OR</category>
  <category>학부 정리</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/04.html</guid>
  <pubDate>Thu, 17 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>ANOVA</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/statistics/03.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="여러-모집단의-평균-비교" class="level2">
<h2 class="anchored" data-anchor-id="여러-모집단의-평균-비교">여러 모집단의 평균 비교</h2>
<ul>
<li>여러 모집단에 대해 2개씩 비교를 하면 α가 커짐</li>
<li><img src="https://latex.codecogs.com/png.latex?t(n_1%20+%20n_2%20-%202)%5E2%20=%20F(1,%20n_1%20+%20n_2%20-2)"></li>
</ul>
</section>
<section id="완전-확률화-계획법" class="level2">
<h2 class="anchored" data-anchor-id="완전-확률화-계획법">완전 확률화 계획법</h2>
<ul>
<li>실험계획법</li>
<li>일원 분산분석이 공정한 결과를 내기 위한 실험 조건</li>
</ul>
</section>
<section id="일원-분산-분석" class="level2">
<h2 class="anchored" data-anchor-id="일원-분산-분석">일원 분산 분석</h2>
<ul>
<li>정규성, 독립성, 등분산성
<ul>
<li>→ 오차의 독, 정, 불편성, 등분산성</li>
<li>오차(표본 - 잔차): 관심 없는 다른 모든 요인에 의해 발생하는 오차</li>
<li>효과: <img src="https://latex.codecogs.com/png.latex?%CF%84_i:%20%CE%BC_i%20-%20%CE%BC"></li>
</ul></li>
<li><img src="https://latex.codecogs.com/png.latex?Y_%7Bij%7D%20=%20%CE%BC%20+%20%CF%84_i%20+%20%CE%B5_%7Bij%7D"></li>
<li><img src="https://latex.codecogs.com/png.latex?Y_%7Bij%7D%20-%20%5Cbar%7BY%7D%20=%20(%5Cbar%7BY_i%7D%20-%20%5Cbar%7BY%7D)%20+%20(Y_%7Bij%7D%20-%20%5Cbar%7BY_i%7D)"></li>
</ul>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률과 통계</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/statistics/03.html</guid>
  <pubDate>Mon, 14 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>classification with trees</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/13.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<p>gini 지수가 낮을수록, misclassification error가 낮을수록, entropy가 낮을수록 Information gain이 높을수록, gain ratio가 클수록 순도가 높고 좋다. 최댓값은 0.5. entropy는 최댓값 1.</p>
<p>과적합 pruning 할 때 misclassification error를 기준으로 한다.</p>
<p>의사결정 트리는 데이터 마이닝에서 가장 널리 사용되는 분류 기법 중 하나로, 데이터의 패턴을 트리 구조로 표현하여 예측 모델을 구축한다.</p>
<section id="what-is-data-minig" class="level2">
<h2 class="anchored" data-anchor-id="what-is-data-minig">What is Data minig</h2>
<ul>
<li>데이터 마이닝은 대량의 데이터에서 암시적이고 이전에 알려지지 않았던 잠재적으로 유용한 지식이나 패턴을 추출하는 과정입니다.</li>
</ul>
<section id="종류" class="level3">
<h3 class="anchored" data-anchor-id="종류">종류</h3>
<ul>
<li>지도 학습<sup>1</sup>: 주어진 학습 데이터를 이용하여 목표 속성의 값을 예측하는 모델을 생성하는 과정으로, 입력(속성)과 출력(정답)이 모두 주어진 데이터를 바탕으로 학습</li>
<li>비지도 학습</li>
</ul>
</section>
</section>
<section id="분류" class="level2">
<h2 class="anchored" data-anchor-id="분류">분류</h2>
<ul>
<li>목표
<ul>
<li>새로운 데이터에 대해서도 정확한 예측이 가능한 일반화된 모델을 만드는 것</li>
<li>이를 위해 과거 데이터를 학습용과 테스트용으로 나누어 모델의 성능을 검증</li>
</ul></li>
</ul>
</section>
<section id="의사결정-트리의-구조와-원리" class="level2">
<h2 class="anchored" data-anchor-id="의사결정-트리의-구조와-원리">의사결정 트리의 구조와 원리</h2>
<ul>
<li><p>의사결정 트리는 노드와 가지로 구성된 계층적 구조로, 각 노드는 특성(attribute)을 나타내며 가지는 테스트 결과를 표현.</p></li>
<li><p>잎 노드는 클래스 레이블이나 클래스 분포를 나타냄</p></li>
<li><p>의사결정 트리 구축은 주로 탐욕적 전략(Greedy strategy)을 사용하며, 각 단계에서 가장 좋은 분할 기준을 선택함.</p></li>
<li><p>대표적인 의사결정 트리 알고리즘으로는 CART, ID3, C4.5, SLIQ, SPRINT 등이 있다.</p></li>
</ul>
<section id="노드-불순도-측정-방법" class="level3">
<h3 class="anchored" data-anchor-id="노드-불순도-측정-방법">노드 불순도 측정 방법</h3>
<p>의사결정 트리에서 최적의 분할을 결정하기 위해 다양한 불순도 측정 방법이 사용됩니다:</p>
<ol type="1">
<li><p><strong>Gini Index</strong>: 노드의 불순도를 측정하는 방법으로, 1-∑[p(j|t)]²로 계산됩니다. 값이 0에 가까울수록 순수한 노드를 의미합니다.</p></li>
<li><p><strong>Entropy(엔트로피)</strong>: 노드의 동질성을 측정하는 방법으로, -∑p(j|t)log₂p(j|t)로 계산됩니다. 0일 때 완전히 동질적인 노드를 의미합니다.</p></li>
<li><p><strong>Information Gain(정보 이득)</strong>: 분할 전후의 엔트로피 차이로, 분할로 인해 얻어지는 불확실성 감소량을 의미합니다. 높은 정보 이득은 해당 속성이 데이터를 잘 나누는 것을 의미합니다.</p></li>
<li><p><strong>Gain Ratio(이득 비율)</strong>: 정보 이득을 분할의 내재 정보량(Split Information)으로 나눈 값으로, 분기가 많은 속성에 대한 편향을 줄이기 위해 고안되었습니다.</p></li>
</ol>
</section>
<section id="트리-분할-기준" class="level3">
<h3 class="anchored" data-anchor-id="트리-분할-기준">트리 분할 기준</h3>
<p>트리 분할 시 고려해야 할 주요 이슈는 다음과 같습니다: - 데이터 분할 방법 선택 - 속성의 테스트 조건 명시 - 최고의 분할 정의 - 트리 분기 종료 시점 결정</p>
<p>최적의 분할은 불순도를 최소화하는 방향으로 이루어지며, CART는 Gini 기반 분할을, ID3와 C4.5는 Information Gain 기반 분할을 주로 사용합니다.</p>
</section>
<section id="모델-평가-기준" class="level3">
<h3 class="anchored" data-anchor-id="모델-평가-기준">모델 평가 기준</h3>
<p>의사결정 트리 모델의 평가는 다음과 같은 기준으로 이루어집니다: - 테스트 세트에서의 정확도(%) - 오류율 - 혼동 행렬(Confusion Matrix) - 속도와 확장성 - 노이즈와 결측값 처리 능력</p>
</section>
</section>
<section id="결론" class="level2">
<h2 class="anchored" data-anchor-id="결론">결론</h2>
<p>의사결정 트리는 직관적이고 이해하기 쉬운 분류 모델을 제공하지만, 과적합(overfitting)이나 데이터 단편화와 같은 문제가 발생할 수 있습니다. 이를 해결하기 위해 C4.5와 같은 알고리즘은 Gain Ratio를 도입하여 분기가 많은 속성에 대한 편향을 줄이는 방법을 제시했습니다.</p>
<p>의사결정 트리의 성공적인 구축을 위해서는 적절한 불순도 측정 방법 선택, 가지치기(pruning), 그리고 다양한 속성 선택 기준의 이해가 필요합니다. 이러한 방법들을 통해 보다 정확하고 일반화된 모델을 구축할 수 있습니다.</p>


</section>


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a><div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">각주</h2>

<ol>
<li id="fn1"><p>규칙 기반 시스템 != 연관 규칙 학습↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>data mining</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/13.html</guid>
  <pubDate>Sun, 13 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Dataminig 1차 발표 ppt</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/12.html</link>
  <description><![CDATA[ 




<iframe src="dataminig_presentation.pdf" width="100%" height="600px" allowfullscreen="">
</iframe>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>data mining</category>
  <category>보고서</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/12.html</guid>
  <pubDate>Sat, 12 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/09.pdf</link>
  <description><![CDATA[ undefined ]]></description>
  <category>보고서</category>
  <category>OR</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/09.pdf</guid>
  <pubDate>Thu, 10 Apr 2025 09:49:46 GMT</pubDate>
</item>
<item>
  <title>Homework - 2</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/11.html</link>
  <description><![CDATA[ 




<div id="64feb5e7" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> warnings</span>
<span id="cb1-3"></span>
<span id="cb1-4">warnings.filterwarnings(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ignore'</span>)</span>
<span id="cb1-5"></span>
<span id="cb1-6">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./_data/class/FFvote.csv"</span>, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'utf-8'</span>)</span>
<span id="cb1-7">dataset.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Unnamed: 0</th>
<th data-quarto-table-cell-role="th">gender_female</th>
<th data-quarto-table-cell-role="th">gender_male</th>
<th data-quarto-table-cell-role="th">region_Chuncheung</th>
<th data-quarto-table-cell-role="th">region_Honam</th>
<th data-quarto-table-cell-role="th">region_Sudo</th>
<th data-quarto-table-cell-role="th">region_Youngnam</th>
<th data-quarto-table-cell-role="th">region_others</th>
<th data-quarto-table-cell-role="th">edu</th>
<th data-quarto-table-cell-role="th">income</th>
<th data-quarto-table-cell-role="th">age</th>
<th data-quarto-table-cell-role="th">score_gov</th>
<th data-quarto-table-cell-role="th">score_progress</th>
<th data-quarto-table-cell-role="th">score_intention</th>
<th data-quarto-table-cell-role="th">vote</th>
<th data-quarto-table-cell-role="th">parties</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>1.0</td>
<td>0.666667</td>
<td>0.666667</td>
<td>0.25</td>
<td>0.25</td>
<td>0.75</td>
<td>1</td>
<td>2</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>0.5</td>
<td>0.666667</td>
<td>0.666667</td>
<td>0.25</td>
<td>0.75</td>
<td>0.50</td>
<td>0</td>
<td>3</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0.0</td>
<td>0.333333</td>
<td>1.000000</td>
<td>0.00</td>
<td>0.50</td>
<td>0.45</td>
<td>1</td>
<td>4</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>3</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0.5</td>
<td>0.000000</td>
<td>0.666667</td>
<td>1.00</td>
<td>0.75</td>
<td>0.40</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>4</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0.0</td>
<td>0.333333</td>
<td>1.000000</td>
<td>0.75</td>
<td>0.50</td>
<td>0.35</td>
<td>1</td>
<td>1</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="50fd98ac" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset.loc[:, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gender_female'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'score_intention'</span>].values</span>
<span id="cb2-2">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vote'</span>].values</span></code></pre></div>
</div>
<p>어떻게 하면 scaling을 간단하게 처리할 수 있을까 고민하던 중 <a href="https://scikit-learn.org/stable/modules/compose.html#pipeline-chaining-estimators">sklearn pipeline 문서</a>의 Safety 부분을 참고해서 작성해봤습니다.</p>
<div id="1127f4ac" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KFold</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cross_val_score</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.neighbors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KNeighborsClassifier</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StandardScaler</span>
<span id="cb3-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.pipeline <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> make_pipeline</span>
<span id="cb3-6"></span>
<span id="cb3-7">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_pipeline(</span>
<span id="cb3-8">      StandardScaler(),</span>
<span id="cb3-9">      KNeighborsClassifier(n_neighbors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb3-10">)</span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>):</span>
<span id="cb3-13">      kf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> KFold(n_splits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>k, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb3-14">      accuracies <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cross_val_score(pipeline, X, y, cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>kf, scoring<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accuracy'</span>)</span>
<span id="cb3-15">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Accuracy for K=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>k<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">round</span>(accuracies.mean(), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Accuracy for K=3: 0.71
Accuracy for K=4: 0.71
Accuracy for K=5: 0.72</code></pre>
</div>
</div>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>data mining</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/11.html</guid>
  <pubDate>Thu, 10 Apr 2025 00:54:37 GMT</pubDate>
</item>
<item>
  <title>프로세스 성과에 미치는 변동성의 영향: 대기시간 문제</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/07.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">Intro</h2>
<ul>
<li>지금까지는 변동성을 고려하지 않았지만 프로세스 성과 평가에 중요한 영향을 미친다.</li>
<li>변동성이 대기시간에 미치는 영향을 살펴본다.</li>
</ul>
</section>
<section id="example" class="level2">
<h2 class="anchored" data-anchor-id="example">Example</h2>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/img/2025-04-20-12-44-59.png" class="img-fluid"></p>
<ul>
<li>변동성
<ul>
<li>불규칙한 도착 간격</li>
<li>서비스 시간의 변동성</li>
<li>영향: 재고, 대기시간, 산출 손실</li>
</ul></li>
<li>IU가 100 이하여도 대기가 발생할 수 있음</li>
</ul>
</section>
<section id="변동성의-원인" class="level2">
<h2 class="anchored" data-anchor-id="변동성의-원인">변동성의 원인</h2>
<ol type="1">
<li>흐름단위의 input (<img src="https://latex.codecogs.com/png.latex?CV_a">)
<ul>
<li>random arrival</li>
<li>incoming quality</li>
<li>product mix</li>
</ul></li>
<li>processing time의 변동성 (<img src="https://latex.codecogs.com/png.latex?CV_p">)
<ul>
<li>그냥 내재적인 변동성</li>
<li>숙련도 (일을 못해서 오래걸림)</li>
<li>품질 (재작업)</li>
</ul></li>
<li>자원의 무작위적 가용성
<ul>
<li>자원 고장</li>
<li>작업자 출근 안함</li>
<li>setup time</li>
</ul></li>
<li>복수의 흐름단위가 무작위적 경로결정
<ul>
<li>경로의 변동성</li>
</ul></li>
</ol>
<ul>
<li>변동성의 측정: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%ED%91%9C%EC%A4%80%ED%8E%B8%EC%B0%A8%7D%7B%ED%8F%89%EA%B7%A0%7D"></li>
</ul>
</section>
<section id="대기시간-예측-단일-자원" class="level2">
<h2 class="anchored" data-anchor-id="대기시간-예측-단일-자원">대기시간 예측 (단일 자원)</h2>
<section id="가정" class="level3">
<h3 class="anchored" data-anchor-id="가정">가정</h3>
<ol type="1">
<li>내재활용률은 100% 미만
<ul>
<li>if D &gt; C, 대기 - 처리능력 부족 (+ 변동성)</li>
<li>if D &lt; C, 대기 - 변동성</li>
</ul></li>
<li>안정적 도착: 평균 고객 수가 시점에 의존하지 않고, 길이에만 의존함
<ul>
<li>만약 프로세스가 안정적이지 않다면 더 짧은 시간간격으로 나누어 접근</li>
</ul></li>
<li>지수분포를 따르는 도착간격
<ul>
<li><img src="https://latex.codecogs.com/png.latex?CV_a%20=%201"></li>
<li>비기억 특성</li>
</ul></li>
</ol>
</section>
<section id="변수" class="level3">
<h3 class="anchored" data-anchor-id="변수">변수</h3>
<ul>
<li>a: 평균 도착 간격 (줄 기준)</li>
<li>p: 평균 서비스 시간</li>
<li><img src="https://latex.codecogs.com/png.latex?CV_a">: 도착간격의 변동계수</li>
<li><img src="https://latex.codecogs.com/png.latex?CV_p">: 서비스 시간의 변동계수</li>
<li><img src="https://latex.codecogs.com/png.latex?T_q">: 대기 시간</li>
<li><img src="https://latex.codecogs.com/png.latex?I_q">: 대기열의 재고</li>
<li><img src="https://latex.codecogs.com/png.latex?I_p">: 서비스 중 재고</li>
</ul>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/img/2025-04-20-13-18-55.png" class="img-fluid"></p>
</section>
<section id="공식" class="level3">
<h3 class="anchored" data-anchor-id="공식">공식</h3>
<ul>
<li>capacity: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7Bp%7D"></li>
<li>flow rate = demand(수요 제약적 상황을 가정하니까): <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7Ba%7D"></li>
<li>utilization: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bp%7D%7Ba%7D"></li>
<li>T: <img src="https://latex.codecogs.com/png.latex?T_q"> + p</li>
<li><img src="https://latex.codecogs.com/png.latex?I_p">: (1 - u) * 0 + u * 1 = u</li>
<li>I = <img src="https://latex.codecogs.com/png.latex?I_q"> + <img src="https://latex.codecogs.com/png.latex?I_p"> = <img src="https://latex.codecogs.com/png.latex?I_q"> + utilization</li>
<li><img src="https://latex.codecogs.com/png.latex?T_q%20=%20p%20*%20%5Cfrac%7Bu%7D%7B1-u%7D%20*%20%5Cfrac%7BCV_a%5E2%20+%20CV_p%5E2%7D%7B2%7D">
<ul>
<li>도착 간격이 지수분포를 따르지 않는 경우 근사치만을 제공</li>
</ul></li>
<li><img src="https://latex.codecogs.com/png.latex?I_q%20=%20%5Cfrac%7B1%7D%7Ba%7D%20*%20T_q%20=%20%5Cfrac%7BT_q%7D%7Ba%7D"></li>
</ul>
</section>
</section>
<section id="대기시간-예측-복수-자원" class="level2">
<h2 class="anchored" data-anchor-id="대기시간-예측-복수-자원">대기시간 예측 (복수 자원)</h2>
<ul>
<li>capacity: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bm%7D%7Bp%7D"></li>
<li>flow rate: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bp%7D%7Bam%7D"></li>
<li><img src="https://latex.codecogs.com/png.latex?I%20=%20I_q%20+%20I_p%20=%20I_q%20+%20mu"></li>
<li><img src="https://latex.codecogs.com/png.latex?T_q%20=%20%5Cfrac%7Bp%7D%7Bm%7D%20*%20%5Cfrac%7Bu%5E%7B%5Csqrt%7B2(m+1)%7D%20-%201%7D%7D%7B1-u%7D%20*%20%5Cfrac%7BCV_a%5E2%20+%20CV_p%5E2%7D%7B2%7D">
<ul>
<li>근사치만을 제공</li>
</ul></li>
<li>service level: <img src="https://latex.codecogs.com/png.latex?P(T_q%20%E2%89%A4%20TWT)"></li>
</ul>
</section>
<section id="풀링" class="level2">
<h2 class="anchored" data-anchor-id="풀링">풀링</h2>
<ul>
<li>대기할 수 있는 방법은 여러가지가 있다</li>
<li>대기시간을 줄일 수 있는 방법에 사람을 많이 뽑는것 외에 다른 고려 요소</li>
</ul>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/img/2025-04-20-14-17-46.png" class="img-fluid"></p>
<section id="풀링의-효과" class="level3">
<h3 class="anchored" data-anchor-id="풀링의-효과">풀링의 효과</h3>
<ul>
<li><p>풀링되는 시스템이 서로 완전히 독립</p></li>
<li><p>다양한 input을 처리할 수 있어야 함.</p></li>
<li><p>→ 대기시간, 대기 인원 감소</p></li>
</ul>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>생산시스템관리</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/07.html</guid>
  <pubDate>Tue, 08 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/08.pdf</link>
  <description><![CDATA[ undefined ]]></description>
  <category>보고서</category>
  <category>OR</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/08.pdf</guid>
  <pubDate>Sun, 06 Apr 2025 14:06:38 GMT</pubDate>
</item>
<item>
  <title>Simplex 표 계산</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/01.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<ul>
<li>노가다 계산 지옥에 지쳐 simplex 표를 계산하는 코드를 작성해보았다.</li>
</ul>
<section id="general" class="level2">
<h2 class="anchored" data-anchor-id="general">General</h2>
<div id="21c35c75" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fractions <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Fraction</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tabulate <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tabulate</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert all elements to Fraction</span></span>
<span id="cb1-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> to_fraction(array):</span>
<span id="cb1-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [Fraction(x).limit_denominator() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(x, (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> x <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> array]</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 초기 설정</span></span>
<span id="cb1-10">obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb1-11">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb1-12">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>],</span>
<span id="cb1-13">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>],</span>
<span id="cb1-14">]</span>
<span id="cb1-15">basic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x5, x6</span></span>
<span id="cb1-16">non_basic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x1, x2, x3, x4</span></span>
<span id="cb1-17"></span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 초기 배열을 분수로 변환</span></span>
<span id="cb1-20">obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> to_fraction(obj)</span>
<span id="cb1-21">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [to_fraction(row) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> A]</span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> print_table():</span>
<span id="cb1-24">    headers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RHS"</span>]</span>
<span id="cb1-25">    table <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> obj]]</span>
<span id="cb1-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(A)):</span>
<span id="cb1-27">        row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>basic[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> A[i]]</span>
<span id="cb1-28">        table.append(row)</span>
<span id="cb1-29">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Current Simplex Tableau:"</span>)</span>
<span id="cb1-30">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tabulate(table, headers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>headers, tablefmt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grid"</span>))</span>
<span id="cb1-31"></span>
<span id="cb1-32"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> simplex():</span>
<span id="cb1-33">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">global</span> obj, A, basic, non_basic</span>
<span id="cb1-34">    </span>
<span id="cb1-35">    iteration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb1-37">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Iteration </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>iteration<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-38">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb1-39">        print_table()</span>
<span id="cb1-40"></span>
<span id="cb1-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 음의 계수 찾기 (entering variable)</span></span>
<span id="cb1-42">        min_rc_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb1-43">        min_rc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Fraction(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-44">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># RHS 제외</span></span>
<span id="cb1-45">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> obj[j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> min_rc:</span>
<span id="cb1-46">                min_rc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obj[j]</span>
<span id="cb1-47">                min_rc_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> j</span>
<span id="cb1-48">        </span>
<span id="cb1-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 종료 조건: 음수 계수가 없으면 최적</span></span>
<span id="cb1-50">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> min_rc_idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> min_rc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb1-51">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Optimal solution reached."</span>)</span>
<span id="cb1-52">            solution <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>: Fraction(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)}</span>
<span id="cb1-53">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, var_idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(basic):</span>
<span id="cb1-54">                solution[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>var_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A[i][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-55">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Optimal Solution:"</span>)</span>
<span id="cb1-56">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> var, val <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> solution.items():</span>
<span id="cb1-57">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>var<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>val<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-58">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Objective Value = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>obj[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-59">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb1-60"></span>
<span id="cb1-61">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pivot 열 선택 및 ratio 계산</span></span>
<span id="cb1-62">        ratios <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-63">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(A)):</span>
<span id="cb1-64">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> A[i][min_rc_idx] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb1-65">                ratios.append((A[i][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> A[i][min_rc_idx], i))</span>
<span id="cb1-66">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb1-67">                ratios.append((<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inf'</span>), i))</span>
<span id="cb1-68">        </span>
<span id="cb1-69">        min_ratio, pivot_row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(ratios)</span>
<span id="cb1-70">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> min_ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inf'</span>):</span>
<span id="cb1-71">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unbounded solution detected."</span>)</span>
<span id="cb1-72">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb1-73"></span>
<span id="cb1-74">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Entering variable: x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>min_rc_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-75">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Leaving variable: x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>basic[pivot_row] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-76"></span>
<span id="cb1-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pivot 연산</span></span>
<span id="cb1-78">        pivot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A[pivot_row][min_rc_idx]</span>
<span id="cb1-79">        A[pivot_row] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> pivot <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> A[pivot_row]]</span>
<span id="cb1-80">        </span>
<span id="cb1-81">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다른 행 업데이트</span></span>
<span id="cb1-82">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(A)):</span>
<span id="cb1-83">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> pivot_row:</span>
<span id="cb1-84">                factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A[i][min_rc_idx]</span>
<span id="cb1-85">                A[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [A[i][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> A[pivot_row][j] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj))]</span>
<span id="cb1-86">        </span>
<span id="cb1-87">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 목적함수 업데이트</span></span>
<span id="cb1-88">        factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obj[min_rc_idx]</span>
<span id="cb1-89">        obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [obj[j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> A[pivot_row][j] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj))]</span>
<span id="cb1-90">        </span>
<span id="cb1-91">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기본 변수 업데이트</span></span>
<span id="cb1-92">        leaving_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> basic[pivot_row]</span>
<span id="cb1-93">        basic[pivot_row] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min_rc_idx</span>
<span id="cb1-94">        non_basic[non_basic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> min_rc_idx] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> leaving_var</span>
<span id="cb1-95">        </span>
<span id="cb1-96">        iteration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-97"></span>
<span id="cb1-98">simplex()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Iteration 1
============================================================

Current Simplex Tableau:
+----+-----+------+------+------+------+-------+
|    |   Z |   x1 |   x2 |   x3 |   x4 |   RHS |
+====+=====+======+======+======+======+=======+
| Z  |   1 |   -6 |   -8 |    0 |    0 |     0 |
+----+-----+------+------+------+------+-------+
| x3 |   0 |    5 |    2 |    1 |    0 |    20 |
+----+-----+------+------+------+------+-------+
| x4 |   0 |    1 |    2 |    0 |    1 |    10 |
+----+-----+------+------+------+------+-------+
Entering variable: x2
Leaving variable: x4

Iteration 2
============================================================

Current Simplex Tableau:
+----+-----+------+------+------+------+-------+
|    |   Z | x1   |   x2 |   x3 | x4   |   RHS |
+====+=====+======+======+======+======+=======+
| Z  |   1 | -2   |    0 |    0 | 4    |    40 |
+----+-----+------+------+------+------+-------+
| x3 |   0 | 4    |    0 |    1 | -1   |    10 |
+----+-----+------+------+------+------+-------+
| x2 |   0 | 1/2  |    1 |    0 | 1/2  |     5 |
+----+-----+------+------+------+------+-------+
Entering variable: x1
Leaving variable: x3

Iteration 3
============================================================

Current Simplex Tableau:
+----+-----+------+------+------+------+-------+
|    |   Z |   x1 |   x2 | x3   | x4   | RHS   |
+====+=====+======+======+======+======+=======+
| Z  |   1 |    0 |    0 | 1/2  | 7/2  | 45    |
+----+-----+------+------+------+------+-------+
| x1 |   0 |    1 |    0 | 1/4  | -1/4 | 5/2   |
+----+-----+------+------+------+------+-------+
| x2 |   0 |    0 |    1 | -1/8 | 5/8  | 15/4  |
+----+-----+------+------+------+------+-------+
Optimal solution reached.
Optimal Solution:
x1 = 5/2
x2 = 15/4
x3 = 0
x4 = 0
Objective Value = 45</code></pre>
</div>
</div>
</section>
<section id="big-m-method" class="level2">
<h2 class="anchored" data-anchor-id="big-m-method">Big M Method</h2>
<div id="24d64ea9" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fractions <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Fraction</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tabulate <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tabulate</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sympy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> symbols, simplify, oo</span>
<span id="cb3-5"></span>
<span id="cb3-6">M <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> symbols(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'M'</span>)</span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 초기 설정</span></span>
<span id="cb3-9">obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, M, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, M, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb3-10">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb3-11">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>],</span>
<span id="cb3-12">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>],</span>
<span id="cb3-13">]</span>
<span id="cb3-14">basic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x5, x6</span></span>
<span id="cb3-15">non_basic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x1, x2, x3, x4</span></span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> to_fraction(array):</span>
<span id="cb3-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [Fraction(x).limit_denominator() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(x, (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> x <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> array]</span>
<span id="cb3-19"></span>
<span id="cb3-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 초기 배열을 분수로 변환</span></span>
<span id="cb3-21">obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> to_fraction(obj)</span>
<span id="cb3-22">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [to_fraction(row) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> A]</span>
<span id="cb3-23"></span>
<span id="cb3-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> print_table():</span>
<span id="cb3-25">    headers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RHS"</span>]</span>
<span id="cb3-26">    table <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> obj]]</span>
<span id="cb3-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(A)):</span>
<span id="cb3-28">        row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>basic[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> A[i]]</span>
<span id="cb3-29">        table.append(row)</span>
<span id="cb3-30">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Current Simplex Tableau:"</span>)</span>
<span id="cb3-31">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tabulate(table, headers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>headers, tablefmt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grid"</span>))</span>
<span id="cb3-32"></span>
<span id="cb3-33"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> adjust_obj_for_big_m():</span>
<span id="cb3-34">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">global</span> obj</span>
<span id="cb3-35">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Adjusting Objective Function for Big M Method"</span>)</span>
<span id="cb3-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(basic)):</span>
<span id="cb3-37">        basic_var_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> basic[i]</span>
<span id="cb3-38">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> obj[basic_var_idx] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 인공변수일 경우(M이 포함된 경우)</span></span>
<span id="cb3-39">            factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obj[basic_var_idx]</span>
<span id="cb3-40">            obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [simplify(obj[j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> A[i][j]) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj))]</span>
<span id="cb3-41"></span>
<span id="cb3-42"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> simplex():</span>
<span id="cb3-43">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">global</span> obj, A, basic, non_basic</span>
<span id="cb3-44">    </span>
<span id="cb3-45">    adjust_obj_for_big_m()</span>
<span id="cb3-46">    print_table()</span>
<span id="cb3-47">    </span>
<span id="cb3-48">    iteration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb3-50">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Iteration </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>iteration<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-51">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb3-52">        print_table()</span>
<span id="cb3-53"></span>
<span id="cb3-54">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 음의 계수 찾기 (entering variable)</span></span>
<span id="cb3-55">        eval_obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [x.evalf(subs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{M: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span>}) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x.has(M) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> obj[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb3-56">        min_rc_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> j: eval_obj[j])</span>
<span id="cb3-57">        </span>
<span id="cb3-58">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> eval_obj[min_rc_idx] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb3-59">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Optimal solution reached."</span>)</span>
<span id="cb3-60">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최적 해 출력</span></span>
<span id="cb3-61">            solution <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)}</span>
<span id="cb3-62">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, var_idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(basic):</span>
<span id="cb3-63">                solution[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>var_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A[i][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb3-64">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Optimal Solution:"</span>)</span>
<span id="cb3-65">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> var, val <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> solution.items():</span>
<span id="cb3-66">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>var<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>val<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-67">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Objective Value = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>obj[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-68">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb3-69"></span>
<span id="cb3-70">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pivot 열 선택 및 ratio 계산</span></span>
<span id="cb3-71">        ratios <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb3-72">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(A)):</span>
<span id="cb3-73">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> A[i][min_rc_idx] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb3-74">                ratios.append((A[i][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> A[i][min_rc_idx], i))</span>
<span id="cb3-75">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb3-76">                ratios.append((oo, i))</span>
<span id="cb3-77">        </span>
<span id="cb3-78">        min_ratio, pivot_row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(ratios)</span>
<span id="cb3-79">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> min_ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> oo:</span>
<span id="cb3-80">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unbounded solution detected."</span>)</span>
<span id="cb3-81">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb3-82"></span>
<span id="cb3-83">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Entering variable: x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>min_rc_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-84">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Leaving variable: x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>basic[pivot_row] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-85"></span>
<span id="cb3-86">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pivot 연산</span></span>
<span id="cb3-87">        pivot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A[pivot_row][min_rc_idx]</span>
<span id="cb3-88">        A[pivot_row] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [simplify(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> pivot) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> A[pivot_row]]</span>
<span id="cb3-89">        </span>
<span id="cb3-90">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다른 행 업데이트</span></span>
<span id="cb3-91">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(A)):</span>
<span id="cb3-92">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> pivot_row:</span>
<span id="cb3-93">                factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A[i][min_rc_idx]</span>
<span id="cb3-94">                A[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [simplify(A[i][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> A[pivot_row][j]) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj))]</span>
<span id="cb3-95">        </span>
<span id="cb3-96">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 목적함수 업데이트</span></span>
<span id="cb3-97">        factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obj[min_rc_idx]</span>
<span id="cb3-98">        obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [simplify(obj[j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> A[pivot_row][j]) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj))]</span>
<span id="cb3-99">        </span>
<span id="cb3-100">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기본 변수 업데이트</span></span>
<span id="cb3-101">        leaving_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> basic[pivot_row]</span>
<span id="cb3-102">        basic[pivot_row] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min_rc_idx</span>
<span id="cb3-103">        non_basic[non_basic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> min_rc_idx] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> leaving_var</span>
<span id="cb3-104">        </span>
<span id="cb3-105">        iteration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-106"></span>
<span id="cb3-107">simplex()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Adjusting Objective Function for Big M Method

Current Simplex Tableau:
+----+-----+----------+----------+------+------+------+------+-------+
|    |   Z | x1       | x2       | x3   |   x4 | x5   |   x6 | RHS   |
+====+=====+==========+==========+======+======+======+======+=======+
| Z  |   1 | 20 - 7*M | 10 - 3*M | M    |    0 | M    |    0 | -14*M |
+----+-----+----------+----------+------+------+------+------+-------+
| x4 |   0 | 5        | 1        | -1   |    1 | 0    |    0 | 6     |
+----+-----+----------+----------+------+------+------+------+-------+
| x6 |   0 | 2        | 2        | 0    |    0 | -1   |    1 | 8     |
+----+-----+----------+----------+------+------+------+------+-------+

Iteration 1
============================================================

Current Simplex Tableau:
+----+-----+----------+----------+------+------+------+------+-------+
|    |   Z | x1       | x2       | x3   |   x4 | x5   |   x6 | RHS   |
+====+=====+==========+==========+======+======+======+======+=======+
| Z  |   1 | 20 - 7*M | 10 - 3*M | M    |    0 | M    |    0 | -14*M |
+----+-----+----------+----------+------+------+------+------+-------+
| x4 |   0 | 5        | 1        | -1   |    1 | 0    |    0 | 6     |
+----+-----+----------+----------+------+------+------+------+-------+
| x6 |   0 | 2        | 2        | 0    |    0 | -1   |    1 | 8     |
+----+-----+----------+----------+------+------+------+------+-------+
Entering variable: x1
Leaving variable: x4

Iteration 2
============================================================

Current Simplex Tableau:
+----+-----+------+-----------+-----------+-----------+------+------+--------------+
|    |   Z |   x1 | x2        | x3        | x4        | x5   |   x6 | RHS          |
+====+=====+======+===========+===========+===========+======+======+==============+
| Z  |   1 |    0 | 6 - 8*M/5 | 4 - 2*M/5 | 7*M/5 - 4 | M    |    0 | -28*M/5 - 24 |
+----+-----+------+-----------+-----------+-----------+------+------+--------------+
| x1 |   0 |    1 | 1/5       | -1/5      | 1/5       | 0    |    0 | 6/5          |
+----+-----+------+-----------+-----------+-----------+------+------+--------------+
| x6 |   0 |    0 | 8/5       | 2/5       | -2/5      | -1   |    1 | 28/5         |
+----+-----+------+-----------+-----------+-----------+------+------+--------------+
Entering variable: x2
Leaving variable: x6

Iteration 3
============================================================

Current Simplex Tableau:
+----+-----+------+------+------+---------+------+----------+-------+
|    |   Z |   x1 |   x2 | x3   | x4      | x5   | x6       | RHS   |
+====+=====+======+======+======+=========+======+==========+=======+
| Z  |   1 |    0 |    0 | 5/2  | M - 5/2 | 15/4 | M - 15/4 | -45   |
+----+-----+------+------+------+---------+------+----------+-------+
| x1 |   0 |    1 |    0 | -1/4 | 1/4     | 1/8  | -1/8     | 1/2   |
+----+-----+------+------+------+---------+------+----------+-------+
| x2 |   0 |    0 |    1 | 1/4  | -1/4    | -5/8 | 5/8      | 7/2   |
+----+-----+------+------+------+---------+------+----------+-------+
Optimal solution reached.
Optimal Solution:
x1 = 1/2
x2 = 7/2
x3 = 0
x4 = 0
x5 = 0
x6 = 0
Objective Value = -45</code></pre>
</div>
</div>
</section>
<section id="grubi" class="level2">
<h2 class="anchored" data-anchor-id="grubi">Grubi</h2>
<div id="cbaeb8fc" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> gurobipy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb5-2"></span>
<span id="cb5-3">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Model(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ex4.4-6"</span>)</span>
<span id="cb5-4">model.setParam(GRB.Param.OutputFlag, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-5"></span>
<span id="cb5-6">x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.addVar(vtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>GRB.CONTINUOUS, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x1"</span>)</span>
<span id="cb5-7">x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.addVar(vtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>GRB.CONTINUOUS, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x2"</span>)</span>
<span id="cb5-8"></span>
<span id="cb5-9">model.setObjective(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x2, GRB.MAXIMIZE)</span>
<span id="cb5-10"></span>
<span id="cb5-11">model.addConstr(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb5-12">model.addConstr(x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb5-13"></span>
<span id="cb5-14">model.optimize()</span>
<span id="cb5-15"></span>
<span id="cb5-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> var <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> model.getVars():</span>
<span id="cb5-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>var<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>varName<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>var<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb5-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Obj: "</span>, model.objVal)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Restricted license - for non-production use only - expires 2026-11-23
x1: 2.5
x2: 3.75
Obj:  45.0</code></pre>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>OR</category>
  <category>학부 정리</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/01.html</guid>
  <pubDate>Wed, 02 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>시험 범위</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/00.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<ul>
<li>2주차
<ul>
<li>순서, 시간복잡도 Big O 계산하는거. python code 5줄 이내로 간단한거로 나옴.</li>
<li>재귀 알고리즘 간단한 소스코드, 결과 물어봄</li>
</ul></li>
<li>3~5주차
<ul>
<li>연결리스트
<ul>
<li>이중 연결리스트: 객관식</li>
<li>원형: 시간복잡도, method 일부분? 전체 빈칸?</li>
</ul></li>
</ul></li>
</ul>
<section id="single-linked-list" class="level2">
<h2 class="anchored" data-anchor-id="single-linked-list">single linked list</h2>
<ul>
<li>안 나오지만 그냥 외우셈</li>
</ul>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-46-31.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-46-38.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-46-46.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-47-11.png" class="img-fluid"></p>
</section>
<section id="doubly-linked-list" class="level2">
<h2 class="anchored" data-anchor-id="doubly-linked-list">doubly linked list</h2>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-47-57.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-48-04.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-48-10.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-48-22.png" class="img-fluid"></p>
</section>
<section id="circular-linked-list" class="level2">
<h2 class="anchored" data-anchor-id="circular-linked-list">circular linked list</h2>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-48-50.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-48-56.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-49-05.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-49-32.png" class="img-fluid"></p>
<ul>
<li>5~6주차
<ul>
<li>stack
<ul>
<li>t자 철로 출력</li>
<li>stack을 이용하는 응용</li>
<li>stack을 이용하지 않는 중위 -&gt; 후위, 전위 표기</li>
</ul></li>
</ul></li>
<li>7주차
<ul>
<li>원형 queue</li>
</ul></li>
</ul>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-28-11.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-28-20.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-35-14.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-35-22.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-35-48.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-36-55.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-37-07.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-37-14.png" class="img-fluid"></p>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/img/2025-04-20-19-37-23.png" class="img-fluid"></p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>Data Structure</category>
  <category>학부 정리</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/dsa/00.html</guid>
  <pubDate>Wed, 02 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Transformation</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/10.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<ol type="1">
<li>concat</li>
</ol>
<ul>
<li>axis=0 row</li>
<li>axis=1 column</li>
</ul>
<ol start="2" type="1">
<li>to_csv</li>
</ol>
<section id="train-test-split" class="level2">
<h2 class="anchored" data-anchor-id="train-test-split">train test split</h2>
<ol type="1">
<li>Hold out method: sub sampling</li>
</ol>
<ul>
<li>validation data set: 하이퍼파라미터를 튜닝</li>
<li>층화추출법: stratified sampling</li>
</ul>
<ol type="1">
<li>resampling method: Hold out을 여러번 반복. variance 극복 bias 극복 x
<ol type="1">
<li>cross validation</li>
</ol>
<ul>
<li>k-fold</li>
<li>leave-one-out:</li>
</ul>
<ol type="1">
<li>bootstrap</li>
</ol></li>
</ol>
</section>
<section id="data의-특성" class="level2">
<h2 class="anchored" data-anchor-id="data의-특성">data의 특성</h2>
<p>volume - Data size big - Data size small(long data) velocity variety veracity(정확성) value</p>
<div id="e5249bf7" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LeaveOneOut</span>
<span id="cb1-3">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]])</span>
<span id="cb1-4">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span>])</span>
<span id="cb1-5">loo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LeaveOneOut()</span>
<span id="cb1-6">loo.get_n_splits(X)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>3</code></pre>
</div>
</div>
<div id="fd598cd2" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KFold</span>
<span id="cb3-2"></span>
<span id="cb3-3">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">39</span>]])</span>
<span id="cb3-4">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb3-5">kf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> KFold(n_splits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7">kf.get_n_splits(X)</span>
<span id="cb3-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> train_index, test_index <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> kf.split(X):</span>
<span id="cb3-9">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRAIN:"</span>, train_index, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TEST:"</span>, test_index)</span>
<span id="cb3-10">    X_train, X_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> X[train_index], X[test_index]</span>
<span id="cb3-11">    y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y[train_index], y[test_index]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>TRAIN: [2 3 4 5] TEST: [0 1]
TRAIN: [0 1 4 5] TEST: [2 3]
TRAIN: [0 1 2 3] TEST: [4 5]</code></pre>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>data mining</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/10.html</guid>
  <pubDate>Tue, 01 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>배치 생산 및 경제적 주문량 모형</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/06.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="setup과-생산주기" class="level2">
<h2 class="anchored" data-anchor-id="setup과-생산주기">setup과 생산주기</h2>
<ul>
<li>setup: 기계를 준비하는데 필요한 것
<ul>
<li>정확히 하나의 제품을 만드는 경우에도 setup이 필요함</li>
<li>생산하는 양에 관계없이 setup 시간이 일정함</li>
<li>sequence dependent setup: 순서에 따라 setup 시간이 달라짐</li>
</ul></li>
<li>생산주기(production cycle): setup + 생산의 과정을 반복
<ul>
<li>setup은 아무것도 못하고 시간을 버림</li>
</ul></li>
</ul>
</section>
<section id="배치-생산과정" class="level2">
<h2 class="anchored" data-anchor-id="배치-생산과정">배치 생산과정</h2>
<ul>
<li>batch<sup>1</sup>: 부품 집합을 흐름 단위로 사용</li>
<li>생산 주기: batch size만큼 생산하는 주기</li>
<li>처리능력: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bbatch%20size%7D%7Bsetup%20time%20+%20(batch%20size%20*%20processing%20time%20per%20unit)%7D">
<ul>
<li>batch size가 무한히 커질수록 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7Bp%7D">로 수렴</li>
<li>setuptime이 0이여도 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7Bp%7D"></li>
</ul></li>
</ul>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/img/2025-04-19-15-43-20.png" class="img-fluid"></p>
<ul>
<li>batch는 클 수록 좋은가?
<ul>
<li>batch size가 커질수록 처리능력이 증가하지만 재고가 많아짐</li>
<li>→ 처리능력 제약적 상황에서 bottleneck의 batch size를 늘리고, 수요 제약적 상황에서 non-bottleneck의 batch size를 줄이는게 좋음</li>
<li>→ <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7BB%7D%7BS%20+%20Bp%7D%20=%20R%20%E2%86%92%20B%20=%20%5Cfrac%7BSR%7D%7B1%20-%20Rp%7D"></li>
<li>R보다 크면 쓸데없이 제고가 쌓이고, 작으면 capacity가 낮아짐</li>
</ul></li>
<li>S가 늘어나면 Batch size를 키우고, 낮아지면 Batch size를 줄여도 됨</li>
<li>p가 늘어나면 Batch size를 키우고, 낮아지면 Batch size를 줄여도 됨</li>
</ul>
</section>
<section id="경제적-주문량-모형" class="level2">
<h2 class="anchored" data-anchor-id="경제적-주문량-모형">경제적 주문량 모형</h2>
<ul>
<li>외부 공급자에게 부품을 주문하여 생산 및 배송이 이루어지는 경우</li>
<li>단위시간당 발생하는 비용이 적을수록 좋다</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/img/2025-04-19-15-57-29.png" class="img-fluid figure-img"></p>
<figcaption>재고량 패턴(재고가 0이 되었을 때 정확히 도착하도록 주문할 수 있다고 가정)</figcaption>
</figure>
</div>
<ul>
<li>Q: 한 번에 주문하는 양</li>
<li>R: 수요(기울기)</li>
<li>주문 주기: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7BQ%7D%7BR%7D"></li>
<li>평균 재고량: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7BQ%7D%7B2%7D"></li>
</ul>
<ol type="1">
<li>구매비용(purchase cost / variable cost): 단위 시간 당 구매비용은 Q에 영향을 받지 않음</li>
<li>단위 재고 비용(h)
<ul>
<li>단위 시간 당 발생하는 재고 비용: <img src="https://latex.codecogs.com/png.latex?h%5Cfrac%7BQ%7D%7B2%7D"></li>
</ul></li>
<li>셋업(주문) 비용 (Fixed cost) (k): 주문량과 무관
<ul>
<li>단위 시간 당 발생하는 셋업 비용: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bk%7D%7B%5Cfrac%7BQ%7D%7BR%7D%7D"></li>
</ul></li>
</ol>
<ul>
<li><p>목적 함수: <img src="https://latex.codecogs.com/png.latex?C(Q)%20=%20%5Cfrac%7BKR%7D%7BQ%7D%20+%20%5Cfrac%7BhQ%7D%7B2%7D"></p></li>
<li><p>경제적 주문량(EOQ): <img src="https://latex.codecogs.com/png.latex?Q%5E*%20=%20%5Csqrt%7B%5Cfrac%7B2KR%7D%7Bh%7D%7D"></p>
<ul>
<li>K: 주문비용</li>
<li>R: 수요량</li>
<li>h: 단위 재고비용</li>
</ul></li>
<li><p>EOQ만큼 주문할 때 단위 시간당 비용</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?C(Q%5E*)%20=%20%5Csqrt%7B2KhR%7D"></li>
</ul></li>
<li><p>단위당 비용 = <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7BC(Q%5E*)%7D%7BR%7D%20=%20%5Csqrt%7B%5Cfrac%7B2Kh%7D%7BR%7D%7D"></p></li>
<li><p>수요가 증가함에 따라 EOQ는 늘어나는데 단위 당 비용은 감소</p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7BC(Q)%7D%7BC(Q%5E*)%7D%20=%20%5Cfrac%7B1%7D%7B2%7D(%5Cfrac%7BQ%5E*%7D%7BQ%7D%20+%20%5Cfrac%7BQ%7D%7BQ%5E*%7D)"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B%EC%A3%BC%EB%AC%B8%20%EC%A3%BC%EA%B8%B0%7D%20%E2%89%A0%20%EC%9E%AC%EA%B3%A0%20%ED%9A%8C%EC%A0%84%EC%9C%A8"></p>
<ul>
<li>주문 주기는 Q개가 다 없어지는 시간</li>
<li>회전율은 Q/2개의 재고가 다 없어지는 시간</li>
</ul></li>
</ul>
</section>
<section id="buffer-or-suffer" class="level2">
<h2 class="anchored" data-anchor-id="buffer-or-suffer">buffer or suffer</h2>
<ul>
<li>buffer 제고가 없으면 처리능력이 떨어질 수 있다.</li>
</ul>


</section>


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a><div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">각주</h2>

<ol>
<li id="fn1"><p>batch 1개는 부품 집합 1 단위 의미↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>생산시스템관리</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/06.html</guid>
  <pubDate>Tue, 01 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Homework</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/09.html</link>
  <description><![CDATA[ 




<div id="5c6c0723" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> warnings</span>
<span id="cb1-5"></span>
<span id="cb1-6">warnings.filterwarnings(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ignore'</span>)</span>
<span id="cb1-7"></span>
<span id="cb1-8">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_data/class/carprices.csv"</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10">dataset</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Car Model</th>
<th data-quarto-table-cell-role="th">Mileage</th>
<th data-quarto-table-cell-role="th">Sell Price($)</th>
<th data-quarto-table-cell-role="th">Age(yrs)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>BMW X5</td>
<td>69000</td>
<td>18000</td>
<td>6</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>BMW X5</td>
<td>35000</td>
<td>34000</td>
<td>3</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>BMW X5</td>
<td>57000</td>
<td>26100</td>
<td>5</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>BMW X5</td>
<td>22500</td>
<td>40000</td>
<td>2</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>BMW X5</td>
<td>46000</td>
<td>31500</td>
<td>4</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>Audi A5</td>
<td>59000</td>
<td>29400</td>
<td>5</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>Audi A5</td>
<td>52000</td>
<td>32000</td>
<td>5</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>Audi A5</td>
<td>72000</td>
<td>19300</td>
<td>6</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>Audi A5</td>
<td>91000</td>
<td>12000</td>
<td>8</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>Mercedez Benz C class</td>
<td>67000</td>
<td>22000</td>
<td>6</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>Mercedez Benz C class</td>
<td>83000</td>
<td>20000</td>
<td>7</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>Mercedez Benz C class</td>
<td>79000</td>
<td>21000</td>
<td>7</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">12</td>
<td>Mercedez Benz C class</td>
<td>59000</td>
<td>33000</td>
<td>5</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>scatter plot을 이용해 선형성을 확인하겠습니다.</p>
<p>연속형 변수인 <strong>Mileage</strong>와 <strong>Sell Price($)</strong>에 대해 확인하겠습니다.</p>
<div id="66c9b208" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb2-2"></span>
<span id="cb2-3">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].scatter(dataset.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], dataset.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb2-4">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mileage"</span>)</span>
<span id="cb2-5">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sell Price($)"</span>)</span>
<span id="cb2-6">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mileage vs Sell Price($)"</span>)</span>
<span id="cb2-7"></span>
<span id="cb2-8">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].scatter(dataset.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], dataset.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb2-9">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Age(yrs)"</span>)</span>
<span id="cb2-10">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Price($)"</span>)</span>
<span id="cb2-11">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Age(yrs) vs Price($)"</span>)</span>
<span id="cb2-12"></span>
<span id="cb2-13">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/09_files/figure-html/cell-3-output-1.png" width="982" height="449" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>선형성이 보입니다.<br>
두 변수 모두 linear regression을 적용할 수 있어 보입니다.</p>
<div id="902dce37" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sell Price($)'</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).values</span>
<span id="cb3-2">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].values</span></code></pre></div>
</div>
<p>독립 변수와 종속 변수를 저장해줍니다.</p>
<div id="25682816" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.compose <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ColumnTransformer</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> OneHotEncoder</span>
<span id="cb4-3"></span>
<span id="cb4-4">ct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ColumnTransformer(transformers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'encoder'</span>, OneHotEncoder(), [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])], remainder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'passthrough'</span>)</span>
<span id="cb4-5">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(ct.fit_transform(x))</span></code></pre></div>
</div>
<p>범주형 변수 <strong>Car Model</strong>에 대해 <strong>one hot encoding</strong>을 적용하였습니다.</p>
<div id="3567fea8" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb5-2"></span>
<span id="cb5-3">X_train, X_test, y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(x, y, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)</span>
<span id="cb5-4">X_train</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>array([[0.0, 1.0, 0.0, 46000, 4],
       [1.0, 0.0, 0.0, 91000, 8],
       [0.0, 0.0, 1.0, 59000, 5],
       [0.0, 1.0, 0.0, 35000, 3],
       [0.0, 1.0, 0.0, 22500, 2],
       [0.0, 0.0, 1.0, 67000, 6],
       [1.0, 0.0, 0.0, 52000, 5],
       [0.0, 0.0, 1.0, 79000, 7],
       [1.0, 0.0, 0.0, 72000, 6],
       [0.0, 1.0, 0.0, 57000, 5]], dtype=object)</code></pre>
</div>
</div>
<div id="e0465df1" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StandardScaler</span>
<span id="cb7-2"></span>
<span id="cb7-3">sc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StandardScaler()</span>
<span id="cb7-4">X_train[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sc.fit_transform(X_train[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:])</span>
<span id="cb7-5">X_test[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sc.transform(X_test[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:])</span>
<span id="cb7-6">X_train</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>array([[0.0, 1.0, 0.0, -0.6199306919491117, -0.6470588235294114],
       [1.0, 0.0, 0.0, 1.695163178400268, 1.7058823529411762],
       [0.0, 0.0, 1.0, 0.048874203929598015, -0.05882352941176448],
       [0.0, 1.0, 0.0, -1.1858425269234045, -1.2352941176470584],
       [0.0, 1.0, 0.0, -1.82892415757601, -1.8235294117647052],
       [0.0, 0.0, 1.0, 0.46044644754726555, 0.5294117647058825],
       [1.0, 0.0, 0.0, -0.31125150923586103, -0.05882352941176448],
       [0.0, 0.0, 1.0, 1.0778048129737667, 1.1176470588235294],
       [1.0, 0.0, 0.0, 0.7176790998083077, 0.5294117647058825],
       [0.0, 1.0, 0.0, -0.05401885697481886, -0.05882352941176448]],
      dtype=object)</code></pre>
</div>
</div>
<p>train set과 test set을 나눈 뒤 연속형 변수에 대해 feature scailing을 진행해줍니다.</p>
<div id="38a3376c" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LinearRegression</span>
<span id="cb9-2"></span>
<span id="cb9-3">regressor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LinearRegression()</span>
<span id="cb9-4">regressor.fit(X_train, y_train)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<style>#sk-container-id-1 {
  /* Definition of color scheme common for light and dark mode */
  --sklearn-color-text: black;
  --sklearn-color-line: gray;
  /* Definition of color scheme for unfitted estimators */
  --sklearn-color-unfitted-level-0: #fff5e6;
  --sklearn-color-unfitted-level-1: #f6e4d2;
  --sklearn-color-unfitted-level-2: #ffe0b3;
  --sklearn-color-unfitted-level-3: chocolate;
  /* Definition of color scheme for fitted estimators */
  --sklearn-color-fitted-level-0: #f0f8ff;
  --sklearn-color-fitted-level-1: #d4ebff;
  --sklearn-color-fitted-level-2: #b3dbfd;
  --sklearn-color-fitted-level-3: cornflowerblue;

  /* Specific color for light theme */
  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));
  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));
  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));
  --sklearn-color-icon: #696969;

  @media (prefers-color-scheme: dark) {
    /* Redefinition of color scheme for dark theme */
    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));
    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));
    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));
    --sklearn-color-icon: #878787;
  }
}

#sk-container-id-1 {
  color: var(--sklearn-color-text);
}

#sk-container-id-1 pre {
  padding: 0;
}

#sk-container-id-1 input.sk-hidden--visually {
  border: 0;
  clip: rect(1px 1px 1px 1px);
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

#sk-container-id-1 div.sk-dashed-wrapped {
  border: 1px dashed var(--sklearn-color-line);
  margin: 0 0.4em 0.5em 0.4em;
  box-sizing: border-box;
  padding-bottom: 0.4em;
  background-color: var(--sklearn-color-background);
}

#sk-container-id-1 div.sk-container {
  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`
     but bootstrap.min.css set `[hidden] { display: none !important; }`
     so we also need the `!important` here to be able to override the
     default hidden behavior on the sphinx rendered scikit-learn.org.
     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */
  display: inline-block !important;
  position: relative;
}

#sk-container-id-1 div.sk-text-repr-fallback {
  display: none;
}

div.sk-parallel-item,
div.sk-serial,
div.sk-item {
  /* draw centered vertical line to link estimators */
  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));
  background-size: 2px 100%;
  background-repeat: no-repeat;
  background-position: center center;
}

/* Parallel-specific style estimator block */

#sk-container-id-1 div.sk-parallel-item::after {
  content: "";
  width: 100%;
  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);
  flex-grow: 1;
}

#sk-container-id-1 div.sk-parallel {
  display: flex;
  align-items: stretch;
  justify-content: center;
  background-color: var(--sklearn-color-background);
  position: relative;
}

#sk-container-id-1 div.sk-parallel-item {
  display: flex;
  flex-direction: column;
}

#sk-container-id-1 div.sk-parallel-item:first-child::after {
  align-self: flex-end;
  width: 50%;
}

#sk-container-id-1 div.sk-parallel-item:last-child::after {
  align-self: flex-start;
  width: 50%;
}

#sk-container-id-1 div.sk-parallel-item:only-child::after {
  width: 0;
}

/* Serial-specific style estimator block */

#sk-container-id-1 div.sk-serial {
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: var(--sklearn-color-background);
  padding-right: 1em;
  padding-left: 1em;
}


/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is
clickable and can be expanded/collapsed.
- Pipeline and ColumnTransformer use this feature and define the default style
- Estimators will overwrite some part of the style using the `sk-estimator` class
*/

/* Pipeline and ColumnTransformer style (default) */

#sk-container-id-1 div.sk-toggleable {
  /* Default theme specific background. It is overwritten whether we have a
  specific estimator or a Pipeline/ColumnTransformer */
  background-color: var(--sklearn-color-background);
}

/* Toggleable label */
#sk-container-id-1 label.sk-toggleable__label {
  cursor: pointer;
  display: block;
  width: 100%;
  margin-bottom: 0;
  padding: 0.5em;
  box-sizing: border-box;
  text-align: center;
}

#sk-container-id-1 label.sk-toggleable__label-arrow:before {
  /* Arrow on the left of the label */
  content: "▸";
  float: left;
  margin-right: 0.25em;
  color: var(--sklearn-color-icon);
}

#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {
  color: var(--sklearn-color-text);
}

/* Toggleable content - dropdown */

#sk-container-id-1 div.sk-toggleable__content {
  max-height: 0;
  max-width: 0;
  overflow: hidden;
  text-align: left;
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-0);
}

#sk-container-id-1 div.sk-toggleable__content.fitted {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-0);
}

#sk-container-id-1 div.sk-toggleable__content pre {
  margin: 0.2em;
  border-radius: 0.25em;
  color: var(--sklearn-color-text);
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-0);
}

#sk-container-id-1 div.sk-toggleable__content.fitted pre {
  /* unfitted */
  background-color: var(--sklearn-color-fitted-level-0);
}

#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {
  /* Expand drop-down */
  max-height: 200px;
  max-width: 100%;
  overflow: auto;
}

#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {
  content: "▾";
}

/* Pipeline/ColumnTransformer-specific style */

#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {
  color: var(--sklearn-color-text);
  background-color: var(--sklearn-color-unfitted-level-2);
}

#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {
  background-color: var(--sklearn-color-fitted-level-2);
}

/* Estimator-specific style */

/* Colorize estimator box */
#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-2);
}

#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-2);
}

#sk-container-id-1 div.sk-label label.sk-toggleable__label,
#sk-container-id-1 div.sk-label label {
  /* The background is the default theme color */
  color: var(--sklearn-color-text-on-default-background);
}

/* On hover, darken the color of the background */
#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {
  color: var(--sklearn-color-text);
  background-color: var(--sklearn-color-unfitted-level-2);
}

/* Label box, darken color on hover, fitted */
#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {
  color: var(--sklearn-color-text);
  background-color: var(--sklearn-color-fitted-level-2);
}

/* Estimator label */

#sk-container-id-1 div.sk-label label {
  font-family: monospace;
  font-weight: bold;
  display: inline-block;
  line-height: 1.2em;
}

#sk-container-id-1 div.sk-label-container {
  text-align: center;
}

/* Estimator-specific */
#sk-container-id-1 div.sk-estimator {
  font-family: monospace;
  border: 1px dotted var(--sklearn-color-border-box);
  border-radius: 0.25em;
  box-sizing: border-box;
  margin-bottom: 0.5em;
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-0);
}

#sk-container-id-1 div.sk-estimator.fitted {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-0);
}

/* on hover */
#sk-container-id-1 div.sk-estimator:hover {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-2);
}

#sk-container-id-1 div.sk-estimator.fitted:hover {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-2);
}

/* Specification for estimator info (e.g. "i" and "?") */

/* Common style for "i" and "?" */

.sk-estimator-doc-link,
a:link.sk-estimator-doc-link,
a:visited.sk-estimator-doc-link {
  float: right;
  font-size: smaller;
  line-height: 1em;
  font-family: monospace;
  background-color: var(--sklearn-color-background);
  border-radius: 1em;
  height: 1em;
  width: 1em;
  text-decoration: none !important;
  margin-left: 1ex;
  /* unfitted */
  border: var(--sklearn-color-unfitted-level-1) 1pt solid;
  color: var(--sklearn-color-unfitted-level-1);
}

.sk-estimator-doc-link.fitted,
a:link.sk-estimator-doc-link.fitted,
a:visited.sk-estimator-doc-link.fitted {
  /* fitted */
  border: var(--sklearn-color-fitted-level-1) 1pt solid;
  color: var(--sklearn-color-fitted-level-1);
}

/* On hover */
div.sk-estimator:hover .sk-estimator-doc-link:hover,
.sk-estimator-doc-link:hover,
div.sk-label-container:hover .sk-estimator-doc-link:hover,
.sk-estimator-doc-link:hover {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-3);
  color: var(--sklearn-color-background);
  text-decoration: none;
}

div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,
.sk-estimator-doc-link.fitted:hover,
div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,
.sk-estimator-doc-link.fitted:hover {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-3);
  color: var(--sklearn-color-background);
  text-decoration: none;
}

/* Span, style for the box shown on hovering the info icon */
.sk-estimator-doc-link span {
  display: none;
  z-index: 9999;
  position: relative;
  font-weight: normal;
  right: .2ex;
  padding: .5ex;
  margin: .5ex;
  width: min-content;
  min-width: 20ex;
  max-width: 50ex;
  color: var(--sklearn-color-text);
  box-shadow: 2pt 2pt 4pt #999;
  /* unfitted */
  background: var(--sklearn-color-unfitted-level-0);
  border: .5pt solid var(--sklearn-color-unfitted-level-3);
}

.sk-estimator-doc-link.fitted span {
  /* fitted */
  background: var(--sklearn-color-fitted-level-0);
  border: var(--sklearn-color-fitted-level-3);
}

.sk-estimator-doc-link:hover span {
  display: block;
}

/* "?"-specific style due to the `<a>` HTML tag */

#sk-container-id-1 a.estimator_doc_link {
  float: right;
  font-size: 1rem;
  line-height: 1em;
  font-family: monospace;
  background-color: var(--sklearn-color-background);
  border-radius: 1rem;
  height: 1rem;
  width: 1rem;
  text-decoration: none;
  /* unfitted */
  color: var(--sklearn-color-unfitted-level-1);
  border: var(--sklearn-color-unfitted-level-1) 1pt solid;
}

#sk-container-id-1 a.estimator_doc_link.fitted {
  /* fitted */
  border: var(--sklearn-color-fitted-level-1) 1pt solid;
  color: var(--sklearn-color-fitted-level-1);
}

/* On hover */
#sk-container-id-1 a.estimator_doc_link:hover {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-3);
  color: var(--sklearn-color-background);
  text-decoration: none;
}

#sk-container-id-1 a.estimator_doc_link.fitted:hover {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-3);
}
</a></style><div id="sk-container-id-1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br>On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden=""><div class="sk-item"><div class="sk-estimator fitted sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-1" type="checkbox" checked=""><label for="sk-estimator-id-1" class="sk-toggleable__label fitted sk-toggleable__label-arrow fitted">&nbsp;&nbsp;LinearRegression<a class="sk-estimator-doc-link fitted" rel="noreferrer" target="_blank" href="https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html">?<span>Documentation for LinearRegression</span></a><span class="sk-estimator-doc-link fitted">i<span>Fitted</span></span></label><div class="sk-toggleable__content fitted"><pre>LinearRegression()</pre></div> </div></div></div></div>
</div>
</div>
<p>모델을 학습시킵니다.</p>
<section id="section" class="level2">
<h2 class="anchored" data-anchor-id="section">1</h2>
<div id="12b4baf0" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ct.transform([[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mercedez Benz C class'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]])</span>
<span id="cb10-2">target[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sc.transform(target[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:])</span>
<span id="cb10-3">y_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> regressor.predict(target)</span>
<span id="cb10-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(y_pred)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[36216.12684278]</code></pre>
</div>
</div>
</section>
<section id="section-1" class="level2">
<h2 class="anchored" data-anchor-id="section-1">2</h2>
<div id="61989431" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ct.transform([[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'BMW X5'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">86000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]])</span>
<span id="cb12-2">target[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sc.transform(target[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:])</span>
<span id="cb12-3">y_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> regressor.predict(target)</span>
<span id="cb12-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(y_pred)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[11152.07829935]</code></pre>
</div>
</div>
</section>
<section id="section-2" class="level2">
<h2 class="anchored" data-anchor-id="section-2">3</h2>
<div id="76cd0041" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(regressor.score(X_test, y_test))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0.8409834346492212</code></pre>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>data mining</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/09.html</guid>
  <pubDate>Mon, 31 Mar 2025 11:45:37 GMT</pubDate>
</item>
</channel>
</rss>
