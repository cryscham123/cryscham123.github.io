<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>김형훈의 학습 블로그</title>
<link>https://cryscham123.github.io/posts/01_projects/adp_실기/</link>
<atom:link href="https://cryscham123.github.io/posts/01_projects/adp_실기/index.xml" rel="self" type="application/rss+xml"/>
<description>ADP 실기를 준비해 봅시다.</description>
<image>
<url>https://cryscham123.github.io/profile.jpg</url>
<title>김형훈의 학습 블로그</title>
<link>https://cryscham123.github.io/posts/01_projects/adp_실기/</link>
</image>
<generator>quarto-1.5.56</generator>
<lastBuildDate>Sat, 26 Jul 2025 15:00:00 GMT</lastBuildDate>
<item>
  <title>분류 - 산탄데르 고객 만족 예측</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/machine_learning/03.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="preprocessing" class="level2">
<h2 class="anchored" data-anchor-id="preprocessing">Preprocessing</h2>
<div id="fef19543" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> warnings</span>
<span id="cb1-6"></span>
<span id="cb1-7">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font.family'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Noto Sans KR'</span></span>
<span id="cb1-8">warnings.filterwarnings(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ignore'</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/santander/train.csv'</span>, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'latin-1'</span>)</span>
<span id="cb1-11">df.info()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 76020 entries, 0 to 76019
Columns: 371 entries, ID to TARGET
dtypes: float64(111), int64(260)
memory usage: 215.2 MB</code></pre>
</div>
</div>
<div id="2499ce24" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">df.describe()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">ID</th>
<th data-quarto-table-cell-role="th">var3</th>
<th data-quarto-table-cell-role="th">var15</th>
<th data-quarto-table-cell-role="th">imp_ent_var16_ult1</th>
<th data-quarto-table-cell-role="th">imp_op_var39_comer_ult1</th>
<th data-quarto-table-cell-role="th">imp_op_var39_comer_ult3</th>
<th data-quarto-table-cell-role="th">imp_op_var40_comer_ult1</th>
<th data-quarto-table-cell-role="th">imp_op_var40_comer_ult3</th>
<th data-quarto-table-cell-role="th">imp_op_var40_efect_ult1</th>
<th data-quarto-table-cell-role="th">imp_op_var40_efect_ult3</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">saldo_medio_var33_hace2</th>
<th data-quarto-table-cell-role="th">saldo_medio_var33_hace3</th>
<th data-quarto-table-cell-role="th">saldo_medio_var33_ult1</th>
<th data-quarto-table-cell-role="th">saldo_medio_var33_ult3</th>
<th data-quarto-table-cell-role="th">saldo_medio_var44_hace2</th>
<th data-quarto-table-cell-role="th">saldo_medio_var44_hace3</th>
<th data-quarto-table-cell-role="th">saldo_medio_var44_ult1</th>
<th data-quarto-table-cell-role="th">saldo_medio_var44_ult3</th>
<th data-quarto-table-cell-role="th">var38</th>
<th data-quarto-table-cell-role="th">TARGET</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">count</td>
<td>76020.000000</td>
<td>76020.000000</td>
<td>76020.000000</td>
<td>76020.000000</td>
<td>76020.000000</td>
<td>76020.000000</td>
<td>76020.000000</td>
<td>76020.000000</td>
<td>76020.000000</td>
<td>76020.000000</td>
<td>...</td>
<td>76020.000000</td>
<td>76020.000000</td>
<td>76020.000000</td>
<td>76020.000000</td>
<td>76020.000000</td>
<td>76020.000000</td>
<td>76020.000000</td>
<td>76020.000000</td>
<td>7.602000e+04</td>
<td>76020.000000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">mean</td>
<td>75964.050723</td>
<td>-1523.199277</td>
<td>33.212865</td>
<td>86.208265</td>
<td>72.363067</td>
<td>119.529632</td>
<td>3.559130</td>
<td>6.472698</td>
<td>0.412946</td>
<td>0.567352</td>
<td>...</td>
<td>7.935824</td>
<td>1.365146</td>
<td>12.215580</td>
<td>8.784074</td>
<td>31.505324</td>
<td>1.858575</td>
<td>76.026165</td>
<td>56.614351</td>
<td>1.172358e+05</td>
<td>0.039569</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">std</td>
<td>43781.947379</td>
<td>39033.462364</td>
<td>12.956486</td>
<td>1614.757313</td>
<td>339.315831</td>
<td>546.266294</td>
<td>93.155749</td>
<td>153.737066</td>
<td>30.604864</td>
<td>36.513513</td>
<td>...</td>
<td>455.887218</td>
<td>113.959637</td>
<td>783.207399</td>
<td>538.439211</td>
<td>2013.125393</td>
<td>147.786584</td>
<td>4040.337842</td>
<td>2852.579397</td>
<td>1.826646e+05</td>
<td>0.194945</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">min</td>
<td>1.000000</td>
<td>-999999.000000</td>
<td>5.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>...</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>5.163750e+03</td>
<td>0.000000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">25%</td>
<td>38104.750000</td>
<td>2.000000</td>
<td>23.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>...</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>6.787061e+04</td>
<td>0.000000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">50%</td>
<td>76043.000000</td>
<td>2.000000</td>
<td>28.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>...</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>1.064092e+05</td>
<td>0.000000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">75%</td>
<td>113748.750000</td>
<td>2.000000</td>
<td>40.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>...</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>1.187563e+05</td>
<td>0.000000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">max</td>
<td>151838.000000</td>
<td>238.000000</td>
<td>105.000000</td>
<td>210000.000000</td>
<td>12888.030000</td>
<td>21024.810000</td>
<td>8237.820000</td>
<td>11073.570000</td>
<td>6600.000000</td>
<td>6600.000000</td>
<td>...</td>
<td>50003.880000</td>
<td>20385.720000</td>
<td>138831.630000</td>
<td>91778.730000</td>
<td>438329.220000</td>
<td>24650.010000</td>
<td>681462.900000</td>
<td>397884.300000</td>
<td>2.203474e+07</td>
<td>1.000000</td>
</tr>
</tbody>
</table>

<p>8 rows × 371 columns</p>
</div>
</div>
</div>
<div id="47e854ec" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'var3'</span>].replace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999999</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-2">df.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ID'</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-3"></span>
<span id="cb4-4">X_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.iloc[:, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb4-5">labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.iloc[:, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</div>
<div id="e610d9a9" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb5-2"></span>
<span id="cb5-3">X_train, X_test, y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X_features, labels, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)</span></code></pre></div>
</div>
<ul>
<li>train, test의 label의 비율이 동일한게 좋은걸까</li>
</ul>
</section>
<section id="xgboost" class="level2">
<h2 class="anchored" data-anchor-id="xgboost">XGBoost</h2>
<div id="5ab0cb4c" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">X_tr, X_val, y_tr, y_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X_train, y_train, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span></code></pre></div>
</div>
<div id="3d462bb0" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> xgboost <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> XGBClassifier</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> roc_auc_score</span>
<span id="cb7-3"></span>
<span id="cb7-4">evals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(X_tr, y_tr), (X_val, y_val)]</span>
<span id="cb7-5">xgb_clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> XGBClassifier(n_estimators<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>, </span>
<span id="cb7-6">                    learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, </span>
<span id="cb7-7">                    early_stopping_rounds<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb7-8">                    eval_metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'auc'</span>])</span>
<span id="cb7-9">xgb_clf.fit(X_tr, y_tr, eval_set<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>evals, verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb7-10">xgb_roc_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> roc_auc_score(y_test, xgb_clf.predict_proba(X_test)[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb7-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>xgb_roc_score<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0.830</code></pre>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>머신 러닝</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/machine_learning/03.html</guid>
  <pubDate>Sat, 26 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>분류 - 앙상블</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/machine_learning/02.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="voting" class="level2">
<h2 class="anchored" data-anchor-id="voting">voting</h2>
<ul>
<li>서로 다른 알고리즘이 결합. 분류에서는 voting<sup>1</sup>으로 결정</li>
</ul>
<section id="example" class="level3">
<h3 class="anchored" data-anchor-id="example">Example</h3>
<div id="676b41f6" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.ensemble <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> VotingClassifier</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LogisticRegression</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.neighbors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KNeighborsClassifier</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_breast_cancer</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> accuracy_score</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> warnings</span>
<span id="cb1-10"></span>
<span id="cb1-11">warnings.filterwarnings(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ignore'</span>)</span>
<span id="cb1-12"></span>
<span id="cb1-13">cancer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_breast_cancer()</span>
<span id="cb1-14"></span>
<span id="cb1-15">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(cancer.data, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cancer.feature_names)</span>
<span id="cb1-16">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">mean radius</th>
<th data-quarto-table-cell-role="th">mean texture</th>
<th data-quarto-table-cell-role="th">mean perimeter</th>
<th data-quarto-table-cell-role="th">mean area</th>
<th data-quarto-table-cell-role="th">mean smoothness</th>
<th data-quarto-table-cell-role="th">mean compactness</th>
<th data-quarto-table-cell-role="th">mean concavity</th>
<th data-quarto-table-cell-role="th">mean concave points</th>
<th data-quarto-table-cell-role="th">mean symmetry</th>
<th data-quarto-table-cell-role="th">mean fractal dimension</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">worst radius</th>
<th data-quarto-table-cell-role="th">worst texture</th>
<th data-quarto-table-cell-role="th">worst perimeter</th>
<th data-quarto-table-cell-role="th">worst area</th>
<th data-quarto-table-cell-role="th">worst smoothness</th>
<th data-quarto-table-cell-role="th">worst compactness</th>
<th data-quarto-table-cell-role="th">worst concavity</th>
<th data-quarto-table-cell-role="th">worst concave points</th>
<th data-quarto-table-cell-role="th">worst symmetry</th>
<th data-quarto-table-cell-role="th">worst fractal dimension</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>17.99</td>
<td>10.38</td>
<td>122.80</td>
<td>1001.0</td>
<td>0.11840</td>
<td>0.27760</td>
<td>0.30010</td>
<td>0.14710</td>
<td>0.2419</td>
<td>0.07871</td>
<td>...</td>
<td>25.380</td>
<td>17.33</td>
<td>184.60</td>
<td>2019.0</td>
<td>0.16220</td>
<td>0.66560</td>
<td>0.7119</td>
<td>0.2654</td>
<td>0.4601</td>
<td>0.11890</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>20.57</td>
<td>17.77</td>
<td>132.90</td>
<td>1326.0</td>
<td>0.08474</td>
<td>0.07864</td>
<td>0.08690</td>
<td>0.07017</td>
<td>0.1812</td>
<td>0.05667</td>
<td>...</td>
<td>24.990</td>
<td>23.41</td>
<td>158.80</td>
<td>1956.0</td>
<td>0.12380</td>
<td>0.18660</td>
<td>0.2416</td>
<td>0.1860</td>
<td>0.2750</td>
<td>0.08902</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>19.69</td>
<td>21.25</td>
<td>130.00</td>
<td>1203.0</td>
<td>0.10960</td>
<td>0.15990</td>
<td>0.19740</td>
<td>0.12790</td>
<td>0.2069</td>
<td>0.05999</td>
<td>...</td>
<td>23.570</td>
<td>25.53</td>
<td>152.50</td>
<td>1709.0</td>
<td>0.14440</td>
<td>0.42450</td>
<td>0.4504</td>
<td>0.2430</td>
<td>0.3613</td>
<td>0.08758</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>11.42</td>
<td>20.38</td>
<td>77.58</td>
<td>386.1</td>
<td>0.14250</td>
<td>0.28390</td>
<td>0.24140</td>
<td>0.10520</td>
<td>0.2597</td>
<td>0.09744</td>
<td>...</td>
<td>14.910</td>
<td>26.50</td>
<td>98.87</td>
<td>567.7</td>
<td>0.20980</td>
<td>0.86630</td>
<td>0.6869</td>
<td>0.2575</td>
<td>0.6638</td>
<td>0.17300</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>20.29</td>
<td>14.34</td>
<td>135.10</td>
<td>1297.0</td>
<td>0.10030</td>
<td>0.13280</td>
<td>0.19800</td>
<td>0.10430</td>
<td>0.1809</td>
<td>0.05883</td>
<td>...</td>
<td>22.540</td>
<td>16.67</td>
<td>152.20</td>
<td>1575.0</td>
<td>0.13740</td>
<td>0.20500</td>
<td>0.4000</td>
<td>0.1625</td>
<td>0.2364</td>
<td>0.07678</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">564</td>
<td>21.56</td>
<td>22.39</td>
<td>142.00</td>
<td>1479.0</td>
<td>0.11100</td>
<td>0.11590</td>
<td>0.24390</td>
<td>0.13890</td>
<td>0.1726</td>
<td>0.05623</td>
<td>...</td>
<td>25.450</td>
<td>26.40</td>
<td>166.10</td>
<td>2027.0</td>
<td>0.14100</td>
<td>0.21130</td>
<td>0.4107</td>
<td>0.2216</td>
<td>0.2060</td>
<td>0.07115</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">565</td>
<td>20.13</td>
<td>28.25</td>
<td>131.20</td>
<td>1261.0</td>
<td>0.09780</td>
<td>0.10340</td>
<td>0.14400</td>
<td>0.09791</td>
<td>0.1752</td>
<td>0.05533</td>
<td>...</td>
<td>23.690</td>
<td>38.25</td>
<td>155.00</td>
<td>1731.0</td>
<td>0.11660</td>
<td>0.19220</td>
<td>0.3215</td>
<td>0.1628</td>
<td>0.2572</td>
<td>0.06637</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">566</td>
<td>16.60</td>
<td>28.08</td>
<td>108.30</td>
<td>858.1</td>
<td>0.08455</td>
<td>0.10230</td>
<td>0.09251</td>
<td>0.05302</td>
<td>0.1590</td>
<td>0.05648</td>
<td>...</td>
<td>18.980</td>
<td>34.12</td>
<td>126.70</td>
<td>1124.0</td>
<td>0.11390</td>
<td>0.30940</td>
<td>0.3403</td>
<td>0.1418</td>
<td>0.2218</td>
<td>0.07820</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">567</td>
<td>20.60</td>
<td>29.33</td>
<td>140.10</td>
<td>1265.0</td>
<td>0.11780</td>
<td>0.27700</td>
<td>0.35140</td>
<td>0.15200</td>
<td>0.2397</td>
<td>0.07016</td>
<td>...</td>
<td>25.740</td>
<td>39.42</td>
<td>184.60</td>
<td>1821.0</td>
<td>0.16500</td>
<td>0.86810</td>
<td>0.9387</td>
<td>0.2650</td>
<td>0.4087</td>
<td>0.12400</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">568</td>
<td>7.76</td>
<td>24.54</td>
<td>47.92</td>
<td>181.0</td>
<td>0.05263</td>
<td>0.04362</td>
<td>0.00000</td>
<td>0.00000</td>
<td>0.1587</td>
<td>0.05884</td>
<td>...</td>
<td>9.456</td>
<td>30.37</td>
<td>59.16</td>
<td>268.6</td>
<td>0.08996</td>
<td>0.06444</td>
<td>0.0000</td>
<td>0.0000</td>
<td>0.2871</td>
<td>0.07039</td>
</tr>
</tbody>
</table>

<p>569 rows × 30 columns</p>
</div>
</div>
</div>
<div id="73591d13" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">lr_clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LogisticRegression(solver<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'liblinear'</span>)</span>
<span id="cb2-2">knn_clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> KNeighborsClassifier(n_neighbors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb2-3"></span>
<span id="cb2-4">vo_clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> VotingClassifier(estimators<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'LR'</span>, lr_clf), (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'KNN'</span>, knn_clf)],</span>
<span id="cb2-5">                          voting<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'soft'</span>)</span>
<span id="cb2-6">X_train, X_test, y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(cancer.data, cancer.target, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)</span>
<span id="cb2-7">vo_clf.fit(X_train, y_train)</span>
<span id="cb2-8">pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vo_clf.predict(X_test)</span>
<span id="cb2-9">accuracy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy_score(y_test, pred)</span>
<span id="cb2-10">accuracy</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="24">
<pre><code>0.9210526315789473</code></pre>
</div>
</div>
<div id="9d408271" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> classifier <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [lr_clf, knn_clf]:</span>
<span id="cb4-2">    classifier.fit(X_train, y_train)</span>
<span id="cb4-3">    pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> classifier.predict(X_test)</span>
<span id="cb4-4">    class_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> classifier.__class__.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span></span>
<span id="cb4-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>class_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> 정확도: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>accuracy_score(y_test, pred)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>LogisticRegression 정확도: 0.9298
KNeighborsClassifier 정확도: 0.9211</code></pre>
</div>
</div>
<ul>
<li>반드시 voting이 제일 좋은 모델을 선택하는 것보다 좋은건 아님</li>
</ul>
</section>
</section>
<section id="bagging" class="level2">
<h2 class="anchored" data-anchor-id="bagging">bagging</h2>
<ul>
<li>같은 유형의 알고리즘의 분류기가 boostrap 해가서 예측. random forest가 대표적. 분류에서는 voting<sup>2</sup>으로 결정</li>
</ul>
<section id="randomforest" class="level3">
<h3 class="anchored" data-anchor-id="randomforest">RandomForest</h3>
<div id="86ae3c9a" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.ensemble <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> RandomForestClassifier</span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_new_feature_name_df(old):</span>
<span id="cb6-4">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>old.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'column_name'</span>).cumcount(), columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dup_cnt'</span>])</span>
<span id="cb6-5">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.reset_index()</span>
<span id="cb6-6">    new_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.merge(old.reset_index(), df, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'outer'</span>)</span>
<span id="cb6-7">    new_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'column_name'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'column_name'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dup_cnt'</span>]].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-8">    new_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_df.drop([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'index'</span>], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> new_df</span>
<span id="cb6-10"></span>
<span id="cb6-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_human_dataset():</span>
<span id="cb6-12">    feature_name_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/human_activity/features.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\s+'</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'column_index'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'column_name'</span>])</span>
<span id="cb6-13">    new_feature_name_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_new_feature_name_df(feature_name_df)</span>
<span id="cb6-14">    feature_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_feature_name_df.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].values.tolist()</span>
<span id="cb6-15"></span>
<span id="cb6-16">    X_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/human_activity/train/X_train.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\s+'</span>, names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>feature_name)</span>
<span id="cb6-17">    X_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/human_activity/test/X_test.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\s+'</span>, names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>feature_name)</span>
<span id="cb6-18"></span>
<span id="cb6-19">    y_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/human_activity/train/y_train.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\s+'</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'action'</span>])</span>
<span id="cb6-20">    y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/human_activity/test/y_test.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\s+'</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'action'</span>])</span>
<span id="cb6-21"></span>
<span id="cb6-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> X_train, X_test, y_train, y_test</span>
<span id="cb6-23"></span>
<span id="cb6-24">X_train, X_test, y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_human_dataset()</span></code></pre></div>
</div>
<div id="879b9f9b" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">rf_clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RandomForestClassifier(max_depth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb7-2">rf_clf.fit(X_train, y_train)</span>
<span id="cb7-3">pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rf_clf.predict(X_test)</span>
<span id="cb7-4">accuracy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy_score(y_test, pred)</span>
<span id="cb7-5">accuracy</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="27">
<pre><code>0.9178825924669155</code></pre>
</div>
</div>
</section>
</section>
<section id="boosting" class="level2">
<h2 class="anchored" data-anchor-id="boosting">boosting</h2>
<section id="gbm" class="level3">
<h3 class="anchored" data-anchor-id="gbm">GBM</h3>
<div id="7d4d016f" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from sklearn.ensemble import GradientBoostingClassifier</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># import time</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># X_train, X_test, y_train, y_test = get_human_dataset()</span></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># start_time = time.time()</span></span>
<span id="cb9-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gb_clf = GradientBoostingClassifier()</span></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gb_clf.fit(X_train, y_train)</span></span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gb_pred = gb_clf.predict(X_test)</span></span>
<span id="cb9-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gb_accuracy = accuracy_score(y_test, gb_pred)</span></span>
<span id="cb9-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb9-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># end_time = time.time()</span></span>
<span id="cb9-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb9-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(f'{gb_accuracy:.3f}, {end_time - start_time}초')</span></span></code></pre></div>
</div>
<p>0.939, 701.6343066692352초</p>
<ul>
<li>아주 오래 걸림.</li>
</ul>
</section>
<section id="xgboost" class="level3">
<h3 class="anchored" data-anchor-id="xgboost">XGBoost</h3>
<ul>
<li><p>결손값을 자체 처리할 수 있다.</p></li>
<li><p>조기 종료 기능이 있다.</p></li>
<li><p>자체적으로 교차 검증, 성능 평가, 피처 중요도 시각화 기능이 있다.</p></li>
<li><p>python xgboost</p></li>
</ul>
<div id="a5e0c29a" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> xgboost <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> xgb</span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> xgboost <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plot_importance</span>
<span id="cb10-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb10-4"></span>
<span id="cb10-5">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_breast_cancer()</span>
<span id="cb10-6"></span>
<span id="cb10-7">X_train, X_test, y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(dataset.data, dataset.target, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)</span>
<span id="cb10-8">X_tr, X_val, y_tr, y_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X_train, y_train, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span></code></pre></div>
</div>
<div id="b61f8977" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">dtr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xgb.DMatrix(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>X_tr, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y_tr)</span>
<span id="cb11-2">dval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xgb.DMatrix(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>X_val, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y_val)</span>
<span id="cb11-3">dtest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xgb.DMatrix(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>X_test, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y_test)</span></code></pre></div>
</div>
<div id="fe3df619" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb12-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max_depth'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb12-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'eta'</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>,</span>
<span id="cb12-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'objective'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'binary:logistic'</span>,</span>
<span id="cb12-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'eval_metric'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logloss'</span></span>
<span id="cb12-6">}</span>
<span id="cb12-7">num_rounds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span></span></code></pre></div>
</div>
<div id="08be87e7" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">eval_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(dtr, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'train'</span>), (dval, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'eval'</span>)]</span>
<span id="cb13-2"></span>
<span id="cb13-3">xgb_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xgb.train(params<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>params, dtrain<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dtr, num_boost_round<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_rounds, early_stopping_rounds<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, evals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>eval_list)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[0] train-logloss:0.61277   eval-logloss:0.58601
[1] train-logloss:0.57664   eval-logloss:0.55582
[2] train-logloss:0.54304   eval-logloss:0.52806
[3] train-logloss:0.51255   eval-logloss:0.50298
[4] train-logloss:0.48471   eval-logloss:0.47989
[5] train-logloss:0.45884   eval-logloss:0.45674
[6] train-logloss:0.43517   eval-logloss:0.43736
[7] train-logloss:0.41363   eval-logloss:0.42013
[8] train-logloss:0.39341   eval-logloss:0.40354
[9] train-logloss:0.37494   eval-logloss:0.38841
[10]    train-logloss:0.35744   eval-logloss:0.37480
[11]    train-logloss:0.34054   eval-logloss:0.35955
[12]    train-logloss:0.32442   eval-logloss:0.34527
[13]    train-logloss:0.30963   eval-logloss:0.32976
[14]    train-logloss:0.29638   eval-logloss:0.32018
[15]    train-logloss:0.28306   eval-logloss:0.30855
[16]    train-logloss:0.27060   eval-logloss:0.29773
[17]    train-logloss:0.25894   eval-logloss:0.28763
[18]    train-logloss:0.24842   eval-logloss:0.27760
[19]    train-logloss:0.23861   eval-logloss:0.27116
[20]    train-logloss:0.22890   eval-logloss:0.26281
[21]    train-logloss:0.21995   eval-logloss:0.25627
[22]    train-logloss:0.21183   eval-logloss:0.25092
[23]    train-logloss:0.20363   eval-logloss:0.24393
[24]    train-logloss:0.19606   eval-logloss:0.23852
[25]    train-logloss:0.18881   eval-logloss:0.23108
[26]    train-logloss:0.18165   eval-logloss:0.22460
[27]    train-logloss:0.17502   eval-logloss:0.21895
[28]    train-logloss:0.16889   eval-logloss:0.21248
[29]    train-logloss:0.16323   eval-logloss:0.20904
[30]    train-logloss:0.15760   eval-logloss:0.20456
[31]    train-logloss:0.15228   eval-logloss:0.20042
[32]    train-logloss:0.14728   eval-logloss:0.19496
[33]    train-logloss:0.14254   eval-logloss:0.19157
[34]    train-logloss:0.13775   eval-logloss:0.18653
[35]    train-logloss:0.13340   eval-logloss:0.18317
[36]    train-logloss:0.12934   eval-logloss:0.17926
[37]    train-logloss:0.12562   eval-logloss:0.17500
[38]    train-logloss:0.12162   eval-logloss:0.17143
[39]    train-logloss:0.11812   eval-logloss:0.16801
[40]    train-logloss:0.11493   eval-logloss:0.16522
[41]    train-logloss:0.11171   eval-logloss:0.16259
[42]    train-logloss:0.10874   eval-logloss:0.16035
[43]    train-logloss:0.10593   eval-logloss:0.15740
[44]    train-logloss:0.10316   eval-logloss:0.15462
[45]    train-logloss:0.10017   eval-logloss:0.15140
[46]    train-logloss:0.09748   eval-logloss:0.14985
[47]    train-logloss:0.09515   eval-logloss:0.14732
[48]    train-logloss:0.09280   eval-logloss:0.14613
[49]    train-logloss:0.09039   eval-logloss:0.14424
[50]    train-logloss:0.08814   eval-logloss:0.14301
[51]    train-logloss:0.08583   eval-logloss:0.14055
[52]    train-logloss:0.08369   eval-logloss:0.13767
[53]    train-logloss:0.08167   eval-logloss:0.13494
[54]    train-logloss:0.07971   eval-logloss:0.13295
[55]    train-logloss:0.07782   eval-logloss:0.13025
[56]    train-logloss:0.07603   eval-logloss:0.12777
[57]    train-logloss:0.07431   eval-logloss:0.12528
[58]    train-logloss:0.07265   eval-logloss:0.12285
[59]    train-logloss:0.07107   eval-logloss:0.12062
[60]    train-logloss:0.06952   eval-logloss:0.11986
[61]    train-logloss:0.06804   eval-logloss:0.11877
[62]    train-logloss:0.06626   eval-logloss:0.11728
[63]    train-logloss:0.06490   eval-logloss:0.11527
[64]    train-logloss:0.06361   eval-logloss:0.11325
[65]    train-logloss:0.06205   eval-logloss:0.11093
[66]    train-logloss:0.06085   eval-logloss:0.10911
[67]    train-logloss:0.05957   eval-logloss:0.10839
[68]    train-logloss:0.05846   eval-logloss:0.10659
[69]    train-logloss:0.05701   eval-logloss:0.10541
[70]    train-logloss:0.05598   eval-logloss:0.10382
[71]    train-logloss:0.05487   eval-logloss:0.10325
[72]    train-logloss:0.05390   eval-logloss:0.10238
[73]    train-logloss:0.05262   eval-logloss:0.10137
[74]    train-logloss:0.05173   eval-logloss:0.09989
[75]    train-logloss:0.05078   eval-logloss:0.09905
[76]    train-logloss:0.04998   eval-logloss:0.09774
[77]    train-logloss:0.04902   eval-logloss:0.09725
[78]    train-logloss:0.04813   eval-logloss:0.09723
[79]    train-logloss:0.04728   eval-logloss:0.09558
[80]    train-logloss:0.04655   eval-logloss:0.09499
[81]    train-logloss:0.04558   eval-logloss:0.09360
[82]    train-logloss:0.04481   eval-logloss:0.09289
[83]    train-logloss:0.04411   eval-logloss:0.09233
[84]    train-logloss:0.04323   eval-logloss:0.09104
[85]    train-logloss:0.04244   eval-logloss:0.09051
[86]    train-logloss:0.04163   eval-logloss:0.08929
[87]    train-logloss:0.04105   eval-logloss:0.08824
[88]    train-logloss:0.04029   eval-logloss:0.08709
[89]    train-logloss:0.03970   eval-logloss:0.08667
[90]    train-logloss:0.03908   eval-logloss:0.08651
[91]    train-logloss:0.03840   eval-logloss:0.08554
[92]    train-logloss:0.03790   eval-logloss:0.08459
[93]    train-logloss:0.03717   eval-logloss:0.08382
[94]    train-logloss:0.03655   eval-logloss:0.08279
[95]    train-logloss:0.03609   eval-logloss:0.08246
[96]    train-logloss:0.03551   eval-logloss:0.08162
[97]    train-logloss:0.03503   eval-logloss:0.08062
[98]    train-logloss:0.03438   eval-logloss:0.07993
[99]    train-logloss:0.03390   eval-logloss:0.07963
[100]   train-logloss:0.03329   eval-logloss:0.07899
[101]   train-logloss:0.03284   eval-logloss:0.07873
[102]   train-logloss:0.03245   eval-logloss:0.07871
[103]   train-logloss:0.03202   eval-logloss:0.07846
[104]   train-logloss:0.03158   eval-logloss:0.07822
[105]   train-logloss:0.03122   eval-logloss:0.07799
[106]   train-logloss:0.03076   eval-logloss:0.07690
[107]   train-logloss:0.03032   eval-logloss:0.07710
[108]   train-logloss:0.02993   eval-logloss:0.07759
[109]   train-logloss:0.02950   eval-logloss:0.07750
[110]   train-logloss:0.02908   eval-logloss:0.07647
[111]   train-logloss:0.02867   eval-logloss:0.07550
[112]   train-logloss:0.02831   eval-logloss:0.07529
[113]   train-logloss:0.02787   eval-logloss:0.07401
[114]   train-logloss:0.02750   eval-logloss:0.07395
[115]   train-logloss:0.02712   eval-logloss:0.07300
[116]   train-logloss:0.02674   eval-logloss:0.07235
[117]   train-logloss:0.02635   eval-logloss:0.07196
[118]   train-logloss:0.02599   eval-logloss:0.07107
[119]   train-logloss:0.02565   eval-logloss:0.07043
[120]   train-logloss:0.02536   eval-logloss:0.07095
[121]   train-logloss:0.02505   eval-logloss:0.07092
[122]   train-logloss:0.02473   eval-logloss:0.07007
[123]   train-logloss:0.02444   eval-logloss:0.07007
[124]   train-logloss:0.02418   eval-logloss:0.07058
[125]   train-logloss:0.02393   eval-logloss:0.07069
[126]   train-logloss:0.02363   eval-logloss:0.07066
[127]   train-logloss:0.02333   eval-logloss:0.06986
[128]   train-logloss:0.02305   eval-logloss:0.06984
[129]   train-logloss:0.02277   eval-logloss:0.06906
[130]   train-logloss:0.02252   eval-logloss:0.06911
[131]   train-logloss:0.02224   eval-logloss:0.06825
[132]   train-logloss:0.02198   eval-logloss:0.06751
[133]   train-logloss:0.02175   eval-logloss:0.06699
[134]   train-logloss:0.02155   eval-logloss:0.06748
[135]   train-logloss:0.02138   eval-logloss:0.06752
[136]   train-logloss:0.02114   eval-logloss:0.06747
[137]   train-logloss:0.02096   eval-logloss:0.06682
[138]   train-logloss:0.02075   eval-logloss:0.06686
[139]   train-logloss:0.02057   eval-logloss:0.06663
[140]   train-logloss:0.02032   eval-logloss:0.06654
[141]   train-logloss:0.02013   eval-logloss:0.06599
[142]   train-logloss:0.01995   eval-logloss:0.06647
[143]   train-logloss:0.01972   eval-logloss:0.06640
[144]   train-logloss:0.01950   eval-logloss:0.06636
[145]   train-logloss:0.01925   eval-logloss:0.06568
[146]   train-logloss:0.01910   eval-logloss:0.06597
[147]   train-logloss:0.01891   eval-logloss:0.06518
[148]   train-logloss:0.01876   eval-logloss:0.06547
[149]   train-logloss:0.01854   eval-logloss:0.06481
[150]   train-logloss:0.01838   eval-logloss:0.06530
[151]   train-logloss:0.01824   eval-logloss:0.06490
[152]   train-logloss:0.01806   eval-logloss:0.06506
[153]   train-logloss:0.01789   eval-logloss:0.06519
[154]   train-logloss:0.01771   eval-logloss:0.06496
[155]   train-logloss:0.01762   eval-logloss:0.06516
[156]   train-logloss:0.01742   eval-logloss:0.06457
[157]   train-logloss:0.01729   eval-logloss:0.06484
[158]   train-logloss:0.01716   eval-logloss:0.06408
[159]   train-logloss:0.01698   eval-logloss:0.06389
[160]   train-logloss:0.01679   eval-logloss:0.06333
[161]   train-logloss:0.01671   eval-logloss:0.06355
[162]   train-logloss:0.01657   eval-logloss:0.06357
[163]   train-logloss:0.01645   eval-logloss:0.06321
[164]   train-logloss:0.01631   eval-logloss:0.06317
[165]   train-logloss:0.01621   eval-logloss:0.06322
[166]   train-logloss:0.01604   eval-logloss:0.06270
[167]   train-logloss:0.01594   eval-logloss:0.06232
[168]   train-logloss:0.01587   eval-logloss:0.06253
[169]   train-logloss:0.01572   eval-logloss:0.06206
[170]   train-logloss:0.01564   eval-logloss:0.06167
[171]   train-logloss:0.01554   eval-logloss:0.06097
[172]   train-logloss:0.01547   eval-logloss:0.06117
[173]   train-logloss:0.01534   eval-logloss:0.06110
[174]   train-logloss:0.01526   eval-logloss:0.06115
[175]   train-logloss:0.01516   eval-logloss:0.06047
[176]   train-logloss:0.01502   eval-logloss:0.06018
[177]   train-logloss:0.01493   eval-logloss:0.06022
[178]   train-logloss:0.01482   eval-logloss:0.06012
[179]   train-logloss:0.01475   eval-logloss:0.05975
[180]   train-logloss:0.01468   eval-logloss:0.05968
[181]   train-logloss:0.01461   eval-logloss:0.05988
[182]   train-logloss:0.01454   eval-logloss:0.05952
[183]   train-logloss:0.01447   eval-logloss:0.05945
[184]   train-logloss:0.01437   eval-logloss:0.05952
[185]   train-logloss:0.01428   eval-logloss:0.05933
[186]   train-logloss:0.01420   eval-logloss:0.05926
[187]   train-logloss:0.01410   eval-logloss:0.05917
[188]   train-logloss:0.01404   eval-logloss:0.05883
[189]   train-logloss:0.01397   eval-logloss:0.05843
[190]   train-logloss:0.01389   eval-logloss:0.05825
[191]   train-logloss:0.01382   eval-logloss:0.05821
[192]   train-logloss:0.01372   eval-logloss:0.05829
[193]   train-logloss:0.01364   eval-logloss:0.05811
[194]   train-logloss:0.01358   eval-logloss:0.05808
[195]   train-logloss:0.01352   eval-logloss:0.05823
[196]   train-logloss:0.01346   eval-logloss:0.05829
[197]   train-logloss:0.01340   eval-logloss:0.05823
[198]   train-logloss:0.01331   eval-logloss:0.05832
[199]   train-logloss:0.01324   eval-logloss:0.05813
[200]   train-logloss:0.01317   eval-logloss:0.05811
[201]   train-logloss:0.01312   eval-logloss:0.05769
[202]   train-logloss:0.01305   eval-logloss:0.05754
[203]   train-logloss:0.01296   eval-logloss:0.05764
[204]   train-logloss:0.01289   eval-logloss:0.05749
[205]   train-logloss:0.01284   eval-logloss:0.05756
[206]   train-logloss:0.01279   eval-logloss:0.05772
[207]   train-logloss:0.01273   eval-logloss:0.05768
[208]   train-logloss:0.01268   eval-logloss:0.05783
[209]   train-logloss:0.01263   eval-logloss:0.05752
[210]   train-logloss:0.01258   eval-logloss:0.05711
[211]   train-logloss:0.01251   eval-logloss:0.05697
[212]   train-logloss:0.01243   eval-logloss:0.05662
[213]   train-logloss:0.01237   eval-logloss:0.05671
[214]   train-logloss:0.01231   eval-logloss:0.05659
[215]   train-logloss:0.01226   eval-logloss:0.05629
[216]   train-logloss:0.01219   eval-logloss:0.05595
[217]   train-logloss:0.01214   eval-logloss:0.05591
[218]   train-logloss:0.01208   eval-logloss:0.05580
[219]   train-logloss:0.01201   eval-logloss:0.05606
[220]   train-logloss:0.01196   eval-logloss:0.05592
[221]   train-logloss:0.01190   eval-logloss:0.05601
[222]   train-logloss:0.01185   eval-logloss:0.05608
[223]   train-logloss:0.01181   eval-logloss:0.05569
[224]   train-logloss:0.01176   eval-logloss:0.05559
[225]   train-logloss:0.01169   eval-logloss:0.05585
[226]   train-logloss:0.01164   eval-logloss:0.05576
[227]   train-logloss:0.01158   eval-logloss:0.05549
[228]   train-logloss:0.01153   eval-logloss:0.05521
[229]   train-logloss:0.01149   eval-logloss:0.05509
[230]   train-logloss:0.01145   eval-logloss:0.05493
[231]   train-logloss:0.01140   eval-logloss:0.05507
[232]   train-logloss:0.01136   eval-logloss:0.05469
[233]   train-logloss:0.01132   eval-logloss:0.05500
[234]   train-logloss:0.01128   eval-logloss:0.05474
[235]   train-logloss:0.01124   eval-logloss:0.05472
[236]   train-logloss:0.01120   eval-logloss:0.05490
[237]   train-logloss:0.01115   eval-logloss:0.05503
[238]   train-logloss:0.01111   eval-logloss:0.05516
[239]   train-logloss:0.01107   eval-logloss:0.05524
[240]   train-logloss:0.01103   eval-logloss:0.05537
[241]   train-logloss:0.01099   eval-logloss:0.05536
[242]   train-logloss:0.01096   eval-logloss:0.05568
[243]   train-logloss:0.01090   eval-logloss:0.05543
[244]   train-logloss:0.01087   eval-logloss:0.05556
[245]   train-logloss:0.01083   eval-logloss:0.05519
[246]   train-logloss:0.01081   eval-logloss:0.05537
[247]   train-logloss:0.01077   eval-logloss:0.05536
[248]   train-logloss:0.01072   eval-logloss:0.05549
[249]   train-logloss:0.01068   eval-logloss:0.05562
[250]   train-logloss:0.01064   eval-logloss:0.05537
[251]   train-logloss:0.01061   eval-logloss:0.05555
[252]   train-logloss:0.01058   eval-logloss:0.05568
[253]   train-logloss:0.01054   eval-logloss:0.05532
[254]   train-logloss:0.01051   eval-logloss:0.05508
[255]   train-logloss:0.01049   eval-logloss:0.05525
[256]   train-logloss:0.01045   eval-logloss:0.05524
[257]   train-logloss:0.01042   eval-logloss:0.05537
[258]   train-logloss:0.01037   eval-logloss:0.05554
[259]   train-logloss:0.01033   eval-logloss:0.05563
[260]   train-logloss:0.01030   eval-logloss:0.05528
[261]   train-logloss:0.01028   eval-logloss:0.05546
[262]   train-logloss:0.01025   eval-logloss:0.05559
[263]   train-logloss:0.01022   eval-logloss:0.05558
[264]   train-logloss:0.01017   eval-logloss:0.05576
[265]   train-logloss:0.01014   eval-logloss:0.05593
[266]   train-logloss:0.01011   eval-logloss:0.05558
[267]   train-logloss:0.01008   eval-logloss:0.05571
[268]   train-logloss:0.01005   eval-logloss:0.05584
[269]   train-logloss:0.01002   eval-logloss:0.05561
[270]   train-logloss:0.00998   eval-logloss:0.05560
[271]   train-logloss:0.00997   eval-logloss:0.05577
[272]   train-logloss:0.00992   eval-logloss:0.05574
[273]   train-logloss:0.00989   eval-logloss:0.05540
[274]   train-logloss:0.00987   eval-logloss:0.05557
[275]   train-logloss:0.00984   eval-logloss:0.05570
[276]   train-logloss:0.00981   eval-logloss:0.05547
[277]   train-logloss:0.00978   eval-logloss:0.05546
[278]   train-logloss:0.00973   eval-logloss:0.05543
[279]   train-logloss:0.00970   eval-logloss:0.05556
[280]   train-logloss:0.00969   eval-logloss:0.05562
[281]   train-logloss:0.00966   eval-logloss:0.05528</code></pre>
</div>
</div>
<div id="8b810501" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">pred_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xgb_model.predict(dtest)</span>
<span id="cb15-2">preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pred_probs]</span></code></pre></div>
</div>
<ul>
<li>sklearn xgboost</li>
</ul>
<div id="82293978" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> xgboost <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> XGBClassifier</span>
<span id="cb16-2"></span>
<span id="cb16-3">evals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(X_tr, y_tr), (X_val, y_val)]</span>
<span id="cb16-4">xgb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> XGBClassifier(n_estimators<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>, </span>
<span id="cb16-5">                    learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, </span>
<span id="cb16-6">                    max_depth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, </span>
<span id="cb16-7">                    early_stopping_rounds<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb16-8">                    eval_metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logloss'</span>])</span>
<span id="cb16-9">xgb.fit(X_tr, y_tr, eval_set<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>evals)</span>
<span id="cb16-10">preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xgb.predict(X_test)</span>
<span id="cb16-11">pred_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xgb.predict_proba(X_test)[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[0] validation_0-logloss:0.61277    validation_1-logloss:0.58601
[1] validation_0-logloss:0.57664    validation_1-logloss:0.55582
[2] validation_0-logloss:0.54304    validation_1-logloss:0.52806
[3] validation_0-logloss:0.51255    validation_1-logloss:0.50298
[4] validation_0-logloss:0.48471    validation_1-logloss:0.47989
[5] validation_0-logloss:0.45884    validation_1-logloss:0.45674
[6] validation_0-logloss:0.43517    validation_1-logloss:0.43736
[7] validation_0-logloss:0.41363    validation_1-logloss:0.42013
[8] validation_0-logloss:0.39341    validation_1-logloss:0.40354
[9] validation_0-logloss:0.37494    validation_1-logloss:0.38841
[10]    validation_0-logloss:0.35744    validation_1-logloss:0.37480
[11]    validation_0-logloss:0.34054    validation_1-logloss:0.35955
[12]    validation_0-logloss:0.32442    validation_1-logloss:0.34527
[13]    validation_0-logloss:0.30963    validation_1-logloss:0.32976
[14]    validation_0-logloss:0.29638    validation_1-logloss:0.32018
[15]    validation_0-logloss:0.28306    validation_1-logloss:0.30855
[16]    validation_0-logloss:0.27060    validation_1-logloss:0.29773
[17]    validation_0-logloss:0.25894    validation_1-logloss:0.28763
[18]    validation_0-logloss:0.24842    validation_1-logloss:0.27760
[19]    validation_0-logloss:0.23861    validation_1-logloss:0.27116
[20]    validation_0-logloss:0.22890    validation_1-logloss:0.26281
[21]    validation_0-logloss:0.21995    validation_1-logloss:0.25627
[22]    validation_0-logloss:0.21183    validation_1-logloss:0.25092
[23]    validation_0-logloss:0.20363    validation_1-logloss:0.24393
[24]    validation_0-logloss:0.19606    validation_1-logloss:0.23852
[25]    validation_0-logloss:0.18881    validation_1-logloss:0.23108
[26]    validation_0-logloss:0.18165    validation_1-logloss:0.22460
[27]    validation_0-logloss:0.17502    validation_1-logloss:0.21895
[28]    validation_0-logloss:0.16889    validation_1-logloss:0.21248
[29]    validation_0-logloss:0.16323    validation_1-logloss:0.20904
[30]    validation_0-logloss:0.15760    validation_1-logloss:0.20456
[31]    validation_0-logloss:0.15228    validation_1-logloss:0.20042
[32]    validation_0-logloss:0.14728    validation_1-logloss:0.19496
[33]    validation_0-logloss:0.14254    validation_1-logloss:0.19157
[34]    validation_0-logloss:0.13775    validation_1-logloss:0.18653
[35]    validation_0-logloss:0.13340    validation_1-logloss:0.18317
[36]    validation_0-logloss:0.12934    validation_1-logloss:0.17926
[37]    validation_0-logloss:0.12562    validation_1-logloss:0.17500
[38]    validation_0-logloss:0.12162    validation_1-logloss:0.17143
[39]    validation_0-logloss:0.11812    validation_1-logloss:0.16801
[40]    validation_0-logloss:0.11493    validation_1-logloss:0.16522
[41]    validation_0-logloss:0.11171    validation_1-logloss:0.16259
[42]    validation_0-logloss:0.10874    validation_1-logloss:0.16035
[43]    validation_0-logloss:0.10593    validation_1-logloss:0.15740
[44]    validation_0-logloss:0.10316    validation_1-logloss:0.15462
[45]    validation_0-logloss:0.10017    validation_1-logloss:0.15140
[46]    validation_0-logloss:0.09748    validation_1-logloss:0.14985
[47]    validation_0-logloss:0.09515    validation_1-logloss:0.14732
[48]    validation_0-logloss:0.09280    validation_1-logloss:0.14613
[49]    validation_0-logloss:0.09039    validation_1-logloss:0.14424
[50]    validation_0-logloss:0.08814    validation_1-logloss:0.14301
[51]    validation_0-logloss:0.08583    validation_1-logloss:0.14055
[52]    validation_0-logloss:0.08369    validation_1-logloss:0.13767
[53]    validation_0-logloss:0.08167    validation_1-logloss:0.13494
[54]    validation_0-logloss:0.07971    validation_1-logloss:0.13295
[55]    validation_0-logloss:0.07782    validation_1-logloss:0.13025
[56]    validation_0-logloss:0.07603    validation_1-logloss:0.12777
[57]    validation_0-logloss:0.07431    validation_1-logloss:0.12528
[58]    validation_0-logloss:0.07265    validation_1-logloss:0.12285
[59]    validation_0-logloss:0.07107    validation_1-logloss:0.12062
[60]    validation_0-logloss:0.06952    validation_1-logloss:0.11986
[61]    validation_0-logloss:0.06804    validation_1-logloss:0.11877
[62]    validation_0-logloss:0.06626    validation_1-logloss:0.11728
[63]    validation_0-logloss:0.06490    validation_1-logloss:0.11527
[64]    validation_0-logloss:0.06361    validation_1-logloss:0.11325
[65]    validation_0-logloss:0.06205    validation_1-logloss:0.11093
[66]    validation_0-logloss:0.06085    validation_1-logloss:0.10911
[67]    validation_0-logloss:0.05957    validation_1-logloss:0.10839
[68]    validation_0-logloss:0.05846    validation_1-logloss:0.10659
[69]    validation_0-logloss:0.05701    validation_1-logloss:0.10541
[70]    validation_0-logloss:0.05598    validation_1-logloss:0.10382
[71]    validation_0-logloss:0.05487    validation_1-logloss:0.10325
[72]    validation_0-logloss:0.05390    validation_1-logloss:0.10238
[73]    validation_0-logloss:0.05262    validation_1-logloss:0.10137
[74]    validation_0-logloss:0.05173    validation_1-logloss:0.09989
[75]    validation_0-logloss:0.05078    validation_1-logloss:0.09905
[76]    validation_0-logloss:0.04998    validation_1-logloss:0.09774
[77]    validation_0-logloss:0.04902    validation_1-logloss:0.09725
[78]    validation_0-logloss:0.04813    validation_1-logloss:0.09723
[79]    validation_0-logloss:0.04728    validation_1-logloss:0.09558
[80]    validation_0-logloss:0.04655    validation_1-logloss:0.09499
[81]    validation_0-logloss:0.04558    validation_1-logloss:0.09360
[82]    validation_0-logloss:0.04481    validation_1-logloss:0.09289
[83]    validation_0-logloss:0.04411    validation_1-logloss:0.09233
[84]    validation_0-logloss:0.04323    validation_1-logloss:0.09104
[85]    validation_0-logloss:0.04244    validation_1-logloss:0.09051
[86]    validation_0-logloss:0.04163    validation_1-logloss:0.08929
[87]    validation_0-logloss:0.04105    validation_1-logloss:0.08824
[88]    validation_0-logloss:0.04029    validation_1-logloss:0.08709
[89]    validation_0-logloss:0.03970    validation_1-logloss:0.08667
[90]    validation_0-logloss:0.03908    validation_1-logloss:0.08651
[91]    validation_0-logloss:0.03840    validation_1-logloss:0.08554
[92]    validation_0-logloss:0.03790    validation_1-logloss:0.08459
[93]    validation_0-logloss:0.03717    validation_1-logloss:0.08382
[94]    validation_0-logloss:0.03655    validation_1-logloss:0.08279
[95]    validation_0-logloss:0.03609    validation_1-logloss:0.08246
[96]    validation_0-logloss:0.03551    validation_1-logloss:0.08162
[97]    validation_0-logloss:0.03503    validation_1-logloss:0.08062
[98]    validation_0-logloss:0.03438    validation_1-logloss:0.07993
[99]    validation_0-logloss:0.03390    validation_1-logloss:0.07963
[100]   validation_0-logloss:0.03329    validation_1-logloss:0.07899
[101]   validation_0-logloss:0.03284    validation_1-logloss:0.07873
[102]   validation_0-logloss:0.03245    validation_1-logloss:0.07871
[103]   validation_0-logloss:0.03202    validation_1-logloss:0.07846
[104]   validation_0-logloss:0.03158    validation_1-logloss:0.07822
[105]   validation_0-logloss:0.03122    validation_1-logloss:0.07799
[106]   validation_0-logloss:0.03076    validation_1-logloss:0.07690
[107]   validation_0-logloss:0.03032    validation_1-logloss:0.07710
[108]   validation_0-logloss:0.02993    validation_1-logloss:0.07759
[109]   validation_0-logloss:0.02950    validation_1-logloss:0.07750
[110]   validation_0-logloss:0.02908    validation_1-logloss:0.07647
[111]   validation_0-logloss:0.02867    validation_1-logloss:0.07550
[112]   validation_0-logloss:0.02831    validation_1-logloss:0.07529
[113]   validation_0-logloss:0.02787    validation_1-logloss:0.07401
[114]   validation_0-logloss:0.02750    validation_1-logloss:0.07395
[115]   validation_0-logloss:0.02712    validation_1-logloss:0.07300
[116]   validation_0-logloss:0.02674    validation_1-logloss:0.07235
[117]   validation_0-logloss:0.02635    validation_1-logloss:0.07196
[118]   validation_0-logloss:0.02599    validation_1-logloss:0.07107
[119]   validation_0-logloss:0.02565    validation_1-logloss:0.07043
[120]   validation_0-logloss:0.02536    validation_1-logloss:0.07095
[121]   validation_0-logloss:0.02505    validation_1-logloss:0.07092
[122]   validation_0-logloss:0.02473    validation_1-logloss:0.07007
[123]   validation_0-logloss:0.02444    validation_1-logloss:0.07007
[124]   validation_0-logloss:0.02418    validation_1-logloss:0.07058
[125]   validation_0-logloss:0.02393    validation_1-logloss:0.07069
[126]   validation_0-logloss:0.02363    validation_1-logloss:0.07066
[127]   validation_0-logloss:0.02333    validation_1-logloss:0.06986
[128]   validation_0-logloss:0.02305    validation_1-logloss:0.06984
[129]   validation_0-logloss:0.02277    validation_1-logloss:0.06906
[130]   validation_0-logloss:0.02252    validation_1-logloss:0.06911
[131]   validation_0-logloss:0.02224    validation_1-logloss:0.06825
[132]   validation_0-logloss:0.02198    validation_1-logloss:0.06751
[133]   validation_0-logloss:0.02175    validation_1-logloss:0.06699
[134]   validation_0-logloss:0.02155    validation_1-logloss:0.06748
[135]   validation_0-logloss:0.02138    validation_1-logloss:0.06752
[136]   validation_0-logloss:0.02114    validation_1-logloss:0.06747
[137]   validation_0-logloss:0.02096    validation_1-logloss:0.06682
[138]   validation_0-logloss:0.02075    validation_1-logloss:0.06686
[139]   validation_0-logloss:0.02057    validation_1-logloss:0.06663
[140]   validation_0-logloss:0.02032    validation_1-logloss:0.06654
[141]   validation_0-logloss:0.02013    validation_1-logloss:0.06599
[142]   validation_0-logloss:0.01995    validation_1-logloss:0.06647
[143]   validation_0-logloss:0.01972    validation_1-logloss:0.06640
[144]   validation_0-logloss:0.01950    validation_1-logloss:0.06636
[145]   validation_0-logloss:0.01925    validation_1-logloss:0.06568
[146]   validation_0-logloss:0.01910    validation_1-logloss:0.06597
[147]   validation_0-logloss:0.01891    validation_1-logloss:0.06518
[148]   validation_0-logloss:0.01876    validation_1-logloss:0.06547
[149]   validation_0-logloss:0.01854    validation_1-logloss:0.06481
[150]   validation_0-logloss:0.01838    validation_1-logloss:0.06530
[151]   validation_0-logloss:0.01824    validation_1-logloss:0.06490
[152]   validation_0-logloss:0.01806    validation_1-logloss:0.06506
[153]   validation_0-logloss:0.01789    validation_1-logloss:0.06519
[154]   validation_0-logloss:0.01771    validation_1-logloss:0.06496
[155]   validation_0-logloss:0.01762    validation_1-logloss:0.06516
[156]   validation_0-logloss:0.01742    validation_1-logloss:0.06457
[157]   validation_0-logloss:0.01729    validation_1-logloss:0.06484
[158]   validation_0-logloss:0.01716    validation_1-logloss:0.06408
[159]   validation_0-logloss:0.01698    validation_1-logloss:0.06389
[160]   validation_0-logloss:0.01679    validation_1-logloss:0.06333
[161]   validation_0-logloss:0.01671    validation_1-logloss:0.06355
[162]   validation_0-logloss:0.01657    validation_1-logloss:0.06357
[163]   validation_0-logloss:0.01645    validation_1-logloss:0.06321
[164]   validation_0-logloss:0.01631    validation_1-logloss:0.06317
[165]   validation_0-logloss:0.01621    validation_1-logloss:0.06322
[166]   validation_0-logloss:0.01604    validation_1-logloss:0.06270
[167]   validation_0-logloss:0.01594    validation_1-logloss:0.06232
[168]   validation_0-logloss:0.01587    validation_1-logloss:0.06253
[169]   validation_0-logloss:0.01572    validation_1-logloss:0.06206
[170]   validation_0-logloss:0.01564    validation_1-logloss:0.06167
[171]   validation_0-logloss:0.01554    validation_1-logloss:0.06097
[172]   validation_0-logloss:0.01547    validation_1-logloss:0.06117
[173]   validation_0-logloss:0.01534    validation_1-logloss:0.06110
[174]   validation_0-logloss:0.01526    validation_1-logloss:0.06115
[175]   validation_0-logloss:0.01516    validation_1-logloss:0.06047
[176]   validation_0-logloss:0.01502    validation_1-logloss:0.06018
[177]   validation_0-logloss:0.01493    validation_1-logloss:0.06022
[178]   validation_0-logloss:0.01482    validation_1-logloss:0.06012
[179]   validation_0-logloss:0.01475    validation_1-logloss:0.05975
[180]   validation_0-logloss:0.01468    validation_1-logloss:0.05968
[181]   validation_0-logloss:0.01461    validation_1-logloss:0.05988
[182]   validation_0-logloss:0.01454    validation_1-logloss:0.05952
[183]   validation_0-logloss:0.01447    validation_1-logloss:0.05945
[184]   validation_0-logloss:0.01437    validation_1-logloss:0.05952
[185]   validation_0-logloss:0.01428    validation_1-logloss:0.05933
[186]   validation_0-logloss:0.01420    validation_1-logloss:0.05926
[187]   validation_0-logloss:0.01410    validation_1-logloss:0.05917
[188]   validation_0-logloss:0.01404    validation_1-logloss:0.05883
[189]   validation_0-logloss:0.01397    validation_1-logloss:0.05843
[190]   validation_0-logloss:0.01389    validation_1-logloss:0.05825
[191]   validation_0-logloss:0.01382    validation_1-logloss:0.05821
[192]   validation_0-logloss:0.01372    validation_1-logloss:0.05829
[193]   validation_0-logloss:0.01364    validation_1-logloss:0.05811
[194]   validation_0-logloss:0.01358    validation_1-logloss:0.05808
[195]   validation_0-logloss:0.01352    validation_1-logloss:0.05823
[196]   validation_0-logloss:0.01346    validation_1-logloss:0.05829
[197]   validation_0-logloss:0.01340    validation_1-logloss:0.05823
[198]   validation_0-logloss:0.01331    validation_1-logloss:0.05832
[199]   validation_0-logloss:0.01324    validation_1-logloss:0.05813
[200]   validation_0-logloss:0.01317    validation_1-logloss:0.05811
[201]   validation_0-logloss:0.01312    validation_1-logloss:0.05769
[202]   validation_0-logloss:0.01305    validation_1-logloss:0.05754
[203]   validation_0-logloss:0.01296    validation_1-logloss:0.05764
[204]   validation_0-logloss:0.01289    validation_1-logloss:0.05749
[205]   validation_0-logloss:0.01284    validation_1-logloss:0.05756
[206]   validation_0-logloss:0.01279    validation_1-logloss:0.05772
[207]   validation_0-logloss:0.01273    validation_1-logloss:0.05768
[208]   validation_0-logloss:0.01268    validation_1-logloss:0.05783
[209]   validation_0-logloss:0.01263    validation_1-logloss:0.05752
[210]   validation_0-logloss:0.01258    validation_1-logloss:0.05711
[211]   validation_0-logloss:0.01251    validation_1-logloss:0.05697
[212]   validation_0-logloss:0.01243    validation_1-logloss:0.05662
[213]   validation_0-logloss:0.01237    validation_1-logloss:0.05671
[214]   validation_0-logloss:0.01231    validation_1-logloss:0.05659
[215]   validation_0-logloss:0.01226    validation_1-logloss:0.05629
[216]   validation_0-logloss:0.01219    validation_1-logloss:0.05595
[217]   validation_0-logloss:0.01214    validation_1-logloss:0.05591
[218]   validation_0-logloss:0.01208    validation_1-logloss:0.05580
[219]   validation_0-logloss:0.01201    validation_1-logloss:0.05606
[220]   validation_0-logloss:0.01196    validation_1-logloss:0.05592
[221]   validation_0-logloss:0.01190    validation_1-logloss:0.05601
[222]   validation_0-logloss:0.01185    validation_1-logloss:0.05608
[223]   validation_0-logloss:0.01181    validation_1-logloss:0.05569
[224]   validation_0-logloss:0.01176    validation_1-logloss:0.05559
[225]   validation_0-logloss:0.01169    validation_1-logloss:0.05585
[226]   validation_0-logloss:0.01164    validation_1-logloss:0.05576
[227]   validation_0-logloss:0.01158    validation_1-logloss:0.05549
[228]   validation_0-logloss:0.01153    validation_1-logloss:0.05521
[229]   validation_0-logloss:0.01149    validation_1-logloss:0.05509
[230]   validation_0-logloss:0.01145    validation_1-logloss:0.05493
[231]   validation_0-logloss:0.01140    validation_1-logloss:0.05507
[232]   validation_0-logloss:0.01136    validation_1-logloss:0.05469
[233]   validation_0-logloss:0.01132    validation_1-logloss:0.05500
[234]   validation_0-logloss:0.01128    validation_1-logloss:0.05474
[235]   validation_0-logloss:0.01124    validation_1-logloss:0.05472
[236]   validation_0-logloss:0.01120    validation_1-logloss:0.05490
[237]   validation_0-logloss:0.01115    validation_1-logloss:0.05503
[238]   validation_0-logloss:0.01111    validation_1-logloss:0.05516
[239]   validation_0-logloss:0.01107    validation_1-logloss:0.05524
[240]   validation_0-logloss:0.01103    validation_1-logloss:0.05537
[241]   validation_0-logloss:0.01099    validation_1-logloss:0.05536
[242]   validation_0-logloss:0.01096    validation_1-logloss:0.05568
[243]   validation_0-logloss:0.01090    validation_1-logloss:0.05543
[244]   validation_0-logloss:0.01087    validation_1-logloss:0.05556
[245]   validation_0-logloss:0.01083    validation_1-logloss:0.05519
[246]   validation_0-logloss:0.01081    validation_1-logloss:0.05537
[247]   validation_0-logloss:0.01077    validation_1-logloss:0.05536
[248]   validation_0-logloss:0.01072    validation_1-logloss:0.05549
[249]   validation_0-logloss:0.01068    validation_1-logloss:0.05562
[250]   validation_0-logloss:0.01064    validation_1-logloss:0.05537
[251]   validation_0-logloss:0.01061    validation_1-logloss:0.05555
[252]   validation_0-logloss:0.01058    validation_1-logloss:0.05568
[253]   validation_0-logloss:0.01054    validation_1-logloss:0.05532
[254]   validation_0-logloss:0.01051    validation_1-logloss:0.05508
[255]   validation_0-logloss:0.01049    validation_1-logloss:0.05525
[256]   validation_0-logloss:0.01045    validation_1-logloss:0.05524
[257]   validation_0-logloss:0.01042    validation_1-logloss:0.05537
[258]   validation_0-logloss:0.01037    validation_1-logloss:0.05554
[259]   validation_0-logloss:0.01033    validation_1-logloss:0.05563
[260]   validation_0-logloss:0.01030    validation_1-logloss:0.05528
[261]   validation_0-logloss:0.01028    validation_1-logloss:0.05546
[262]   validation_0-logloss:0.01025    validation_1-logloss:0.05559
[263]   validation_0-logloss:0.01022    validation_1-logloss:0.05558
[264]   validation_0-logloss:0.01017    validation_1-logloss:0.05576
[265]   validation_0-logloss:0.01014    validation_1-logloss:0.05593
[266]   validation_0-logloss:0.01011    validation_1-logloss:0.05558
[267]   validation_0-logloss:0.01008    validation_1-logloss:0.05571
[268]   validation_0-logloss:0.01005    validation_1-logloss:0.05584
[269]   validation_0-logloss:0.01002    validation_1-logloss:0.05561
[270]   validation_0-logloss:0.00998    validation_1-logloss:0.05560
[271]   validation_0-logloss:0.00997    validation_1-logloss:0.05577
[272]   validation_0-logloss:0.00992    validation_1-logloss:0.05574
[273]   validation_0-logloss:0.00989    validation_1-logloss:0.05540
[274]   validation_0-logloss:0.00987    validation_1-logloss:0.05557
[275]   validation_0-logloss:0.00984    validation_1-logloss:0.05570
[276]   validation_0-logloss:0.00981    validation_1-logloss:0.05547
[277]   validation_0-logloss:0.00978    validation_1-logloss:0.05546
[278]   validation_0-logloss:0.00973    validation_1-logloss:0.05543
[279]   validation_0-logloss:0.00970    validation_1-logloss:0.05556
[280]   validation_0-logloss:0.00969    validation_1-logloss:0.05562
[281]   validation_0-logloss:0.00966    validation_1-logloss:0.05528</code></pre>
</div>
</div>
</section>
<section id="lightgbm" class="level3">
<h3 class="anchored" data-anchor-id="lightgbm">LightGBM</h3>
<ul>
<li><p>성능은 xgboost랑 별로 차이가 없음.</p></li>
<li><p>1만건 이하의 데이터 세트에 대해 과적합이 발생할 가능성이 높다.</p></li>
<li><p>one hot 인코딩 필요 없음</p></li>
<li><p>python lightgbm</p></li>
</ul>
<div id="7232fa09" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> lightgbm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LGBMClassifier, early_stopping, plot_importance</span>
<span id="cb18-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb18-3"></span>
<span id="cb18-4">lgbm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LGBMClassifier(n_estimators<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>, learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>)</span>
<span id="cb18-5">evals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(X_tr, y_tr), (X_val, y_val)]</span>
<span id="cb18-6">lgbm.fit(X_tr, y_tr, </span>
<span id="cb18-7">         callbacks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [early_stopping(stopping_rounds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)],</span>
<span id="cb18-8">         eval_metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logloss'</span>, </span>
<span id="cb18-9">         eval_set<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>evals)</span>
<span id="cb18-10">preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lgbm.predict(X_test)</span>
<span id="cb18-11">pred_proba <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lgbm.predict_proba(X_test)[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb18-12"></span>
<span id="cb18-13">plot_importance(lgbm)</span>
<span id="cb18-14">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[LightGBM] [Info] Number of positive: 262, number of negative: 147
[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000223 seconds.
You can set `force_col_wise=true` to remove the overhead.
[LightGBM] [Info] Total Bins 4092
[LightGBM] [Info] Number of data points in the train set: 409, number of used features: 30
[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.640587 -&gt; initscore=0.577912
[LightGBM] [Info] Start training from score 0.577912
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
Training until validation scores don't improve for 50 rounds
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
Early stopping, best iteration is:
[159]   training's binary_logloss: 0.00195741   valid_1's binary_logloss: 0.0442418</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/machine_learning/02_files/figure-html/cell-14-output-2.png" width="642" height="449" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="stacking" class="level2">
<h2 class="anchored" data-anchor-id="stacking">stacking</h2>
<div id="f9259961" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.neighbors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KNeighborsClassifier</span>
<span id="cb20-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.ensemble <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> RandomForestClassifier</span>
<span id="cb20-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.ensemble <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AdaBoostClassifier</span>
<span id="cb20-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.tree <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DecisionTreeClassifier</span>
<span id="cb20-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LogisticRegression</span>
<span id="cb20-6"></span>
<span id="cb20-7">X_train, X_test, y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(cancer.data, cancer.target, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)</span>
<span id="cb20-8"></span>
<span id="cb20-9">knn_clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> KNeighborsClassifier(n_neighbors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb20-10">rf_clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RandomForestClassifier(n_estimators<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb20-11">dt_clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DecisionTreeClassifier()</span>
<span id="cb20-12">ada_clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AdaBoostClassifier(n_estimators<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb20-13"></span>
<span id="cb20-14">lr_final <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LogisticRegression()</span></code></pre></div>
</div>
<div id="707b60f8" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">knn_clf.fit(X_train, y_train)</span>
<span id="cb21-2">rf_clf.fit(X_train, y_train)</span>
<span id="cb21-3">dt_clf.fit(X_train, y_train)</span>
<span id="cb21-4">ada_clf.fit(X_train, y_train)</span>
<span id="cb21-5"></span>
<span id="cb21-6">knn_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> knn_clf.predict(X_test)</span>
<span id="cb21-7">rf_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rf_clf.predict(X_test)</span>
<span id="cb21-8">dt_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dt_clf.predict(X_test)</span>
<span id="cb21-9">ada_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ada_clf.predict(X_test)</span>
<span id="cb21-10"></span>
<span id="cb21-11">pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([knn_pred, rf_pred, dt_pred, ada_pred])</span>
<span id="cb21-12">pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.transpose(pred)</span></code></pre></div>
</div>
<div id="7479cba6" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">lr_final.fit(pred, y_test)</span>
<span id="cb22-2">final <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lr_final.predict(pred)</span>
<span id="cb22-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>accuracy_score(y_test, final)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0.991</code></pre>
</div>
</div>
<ul>
<li>test 셋으로 훈련을 하고 있는 부분이 문제 → cv 세트로 해야함</li>
</ul>
<section id="cv-세트-기반-stacking" class="level3">
<h3 class="anchored" data-anchor-id="cv-세트-기반-stacking">CV 세트 기반 stacking</h3>
<div id="49118349" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KFold</span>
<span id="cb24-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> mean_absolute_error</span>
<span id="cb24-3"></span>
<span id="cb24-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_stacking_base_datasets(model, X_train_n, y_train_n, X_test_n, n_folds):</span>
<span id="cb24-5">    kf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> KFold(n_splits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_folds, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb24-6">    train_fold_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((X_train_n.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb24-7">    test_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((X_test_n.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], n_folds))</span>
<span id="cb24-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> folder_counter, (train_index, valid_index) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(kf.split(X_train_n)):</span>
<span id="cb24-9">        X_tr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> X_train_n[train_index]</span>
<span id="cb24-10">        y_tr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y_train_n[train_index]</span>
<span id="cb24-11">        X_te <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> X_train_n[valid_index]</span>
<span id="cb24-12"></span>
<span id="cb24-13">        model.fit(X_tr, y_tr)</span>
<span id="cb24-14">        train_fold_pred[valid_index, :] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(X_te).reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb24-15">        test_pred[:, folder_counter] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(X_test_n)</span>
<span id="cb24-16"></span>
<span id="cb24-17">    test_pred_mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(test_pred, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb24-18"></span>
<span id="cb24-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> train_fold_pred, test_pred_mean</span></code></pre></div>
</div>
<div id="ca76c460" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">knn_train, knn_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_stacking_base_datasets(knn_clf, X_train, y_train, X_test, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb25-2">rf_train, rf_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_stacking_base_datasets(rf_clf, X_train, y_train, X_test, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb25-3">dt_train, dt_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_stacking_base_datasets(dt_clf, X_train, y_train, X_test, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb25-4">ada_train, ada_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_stacking_base_datasets(ada_clf, X_train, y_train, X_test, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span></code></pre></div>
</div>
<div id="a8e87524" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">Stack_final_X_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.concatenate((knn_train, rf_train, dt_train, ada_train), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb26-2">Stack_final_X_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.concatenate((knn_test, rf_test, dt_test, ada_test), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb26-3"></span>
<span id="cb26-4">lr_final.fit(Stack_final_X_train, y_train)</span>
<span id="cb26-5">stack_final <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lr_final.predict(Stack_final_X_test)</span>
<span id="cb26-6"></span>
<span id="cb26-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>accuracy_score(y_test, stack_final)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0.982</code></pre>
</div>
</div>
</section>
</section>
<section id="baysian-optimization" class="level2">
<h2 class="anchored" data-anchor-id="baysian-optimization">Baysian Optimization</h2>
<ul>
<li><p>Grid search로는 시간이 너무 오래 걸리는 경우</p></li>
<li><p>목표 함수: 하이퍼파라미터 입력 n개에 대한 모델 성능 출력 1개의 모델</p></li>
<li><p>Surrogate model: 목표 함수에 대한 예상 모델. 사전확률 분포에서 최적해 나감.</p></li>
<li><p>acquisition function: 불확실성이 가장 큰 point를 다음 관측 데이터로 결정.</p></li>
</ul>
<div id="450bc93c" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> hyperopt <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> hp, fmin, tpe, Trials, STATUS_OK</span>
<span id="cb28-2"></span>
<span id="cb28-3">search_space <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>: hp.quniform(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb28-4">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y'</span>: hp.quniform(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y'</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)}</span>
<span id="cb28-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> objective_func(search_space):</span>
<span id="cb28-6">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> search_space[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>]</span>
<span id="cb28-7">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> search_space[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y'</span>]</span>
<span id="cb28-8"></span>
<span id="cb28-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> y</span>
<span id="cb28-10"></span>
<span id="cb28-11">trial_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Trials()</span>
<span id="cb28-12">best <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fmin(fn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>objective_func,</span>
<span id="cb28-13">            space<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>search_space,</span>
<span id="cb28-14">            algo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tpe.suggest,</span>
<span id="cb28-15">            max_evals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb28-16">            trials<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>trial_val)</span>
<span id="cb28-17">best</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  0%|          | 0/20 [00:00&lt;?, ?trial/s, best loss=?]100%|██████████| 20/20 [00:00&lt;00:00, 1705.00trial/s, best loss: -284.0]</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="42">
<pre><code>{'x': 4.0, 'y': 15.0}</code></pre>
</div>
</div>
<section id="xgboost-하이퍼파라미터-최적화" class="level3">
<h3 class="anchored" data-anchor-id="xgboost-하이퍼파라미터-최적화">XGBoost 하이퍼파라미터 최적화</h3>
<div id="1177ac1f" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_breast_cancer()</span>
<span id="cb31-2"></span>
<span id="cb31-3">X_train, X_test, y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(dataset.data, dataset.target, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)</span>
<span id="cb31-4">X_tr, X_val, y_tr, y_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X_train, y_train, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb31-5"></span>
<span id="cb31-6">xgb_search_space <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb31-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max_depth'</span>: hp.quniform(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max_depth'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb31-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'min_child_weight'</span>: hp.quniform(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'min_child_weight'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb31-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'learning_rate'</span>: hp.uniform(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'learning_rate'</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>),</span>
<span id="cb31-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'colsample_bytree'</span>: hp.uniform(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'colsample_bytree'</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb31-11">}</span>
<span id="cb31-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># hp.choice('tree_criterion', ['gini', 'entropy']) 이런식으로도 가능</span></span></code></pre></div>
</div>
<div id="c7698d8f" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cross_val_score</span>
<span id="cb32-2"></span>
<span id="cb32-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> objective_func(search_space):</span>
<span id="cb32-4">    xgb_clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> XGBClassifier(n_estimators<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, </span>
<span id="cb32-5">                            max_depth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(search_space[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max_depth'</span>]),</span>
<span id="cb32-6">                            min_child_weight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(search_space[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'min_child_weight'</span>]),</span>
<span id="cb32-7">                            learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>search_space[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'learning_rate'</span>],</span>
<span id="cb32-8">                            colsample_bytree<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>search_space[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'colsample_bytree'</span>],</span>
<span id="cb32-9">                            eval_metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'logloss'</span>)</span>
<span id="cb32-10">    accuracy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cross_val_score(xgb_clf, X_train, y_train, scoring<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accuracy'</span>, cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb32-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss'</span>: <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.mean(accuracy), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'status'</span>: STATUS_OK}</span>
<span id="cb32-12"></span>
<span id="cb32-13">trial_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Trials()</span>
<span id="cb32-14">best <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fmin(fn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>objective_func,</span>
<span id="cb32-15">            space<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>xgb_search_space,</span>
<span id="cb32-16">            algo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tpe.suggest,</span>
<span id="cb32-17">            max_evals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb32-18">            trials<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>trial_val)</span>
<span id="cb32-19">best</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  0%|          | 0/50 [00:00&lt;?, ?trial/s, best loss=?]  2%|▏         | 1/50 [00:00&lt;00:15,  3.22trial/s, best loss: -0.9582752410828395]  4%|▍         | 2/50 [00:00&lt;00:14,  3.38trial/s, best loss: -0.9714186127570582]  6%|▌         | 3/50 [00:00&lt;00:15,  3.13trial/s, best loss: -0.9714186127570582]  8%|▊         | 4/50 [00:01&lt;00:16,  2.82trial/s, best loss: -0.9714186127570582] 10%|█         | 5/50 [00:01&lt;00:13,  3.43trial/s, best loss: -0.9714186127570582] 12%|█▏        | 6/50 [00:01&lt;00:10,  4.12trial/s, best loss: -0.9714186127570582] 14%|█▍        | 7/50 [00:01&lt;00:08,  4.92trial/s, best loss: -0.9714186127570582] 16%|█▌        | 8/50 [00:01&lt;00:07,  5.39trial/s, best loss: -0.9714186127570582] 18%|█▊        | 9/50 [00:02&lt;00:07,  5.79trial/s, best loss: -0.9714186127570582] 20%|██        | 10/50 [00:02&lt;00:06,  5.88trial/s, best loss: -0.9714186127570582] 22%|██▏       | 11/50 [00:02&lt;00:05,  6.59trial/s, best loss: -0.9714186127570582] 24%|██▍       | 12/50 [00:02&lt;00:05,  6.58trial/s, best loss: -0.9714186127570582] 26%|██▌       | 13/50 [00:02&lt;00:05,  7.31trial/s, best loss: -0.9714186127570582] 28%|██▊       | 14/50 [00:02&lt;00:04,  7.28trial/s, best loss: -0.9714186127570582] 30%|███       | 15/50 [00:02&lt;00:04,  7.17trial/s, best loss: -0.9714186127570582] 38%|███▊      | 19/50 [00:03&lt;00:02, 14.61trial/s, best loss: -0.9714186127570582] 42%|████▏     | 21/50 [00:03&lt;00:02, 10.53trial/s, best loss: -0.9714186127570582] 46%|████▌     | 23/50 [00:03&lt;00:02,  9.43trial/s, best loss: -0.9714186127570582] 50%|█████     | 25/50 [00:03&lt;00:02,  8.95trial/s, best loss: -0.9736261182758219] 54%|█████▍    | 27/50 [00:04&lt;00:02,  8.87trial/s, best loss: -0.9736261182758219] 56%|█████▌    | 28/50 [00:04&lt;00:02,  8.90trial/s, best loss: -0.9736261182758219] 60%|██████    | 30/50 [00:04&lt;00:02,  8.95trial/s, best loss: -0.9736261182758219] 62%|██████▏   | 31/50 [00:04&lt;00:02,  8.95trial/s, best loss: -0.9736261182758219] 64%|██████▍   | 32/50 [00:04&lt;00:02,  7.08trial/s, best loss: -0.9736261182758219] 66%|██████▌   | 33/50 [00:05&lt;00:02,  5.92trial/s, best loss: -0.9736261182758219] 68%|██████▊   | 34/50 [00:05&lt;00:03,  5.20trial/s, best loss: -0.9736261182758219] 70%|███████   | 35/50 [00:05&lt;00:03,  3.97trial/s, best loss: -0.9736261182758219] 72%|███████▏  | 36/50 [00:05&lt;00:03,  3.84trial/s, best loss: -0.9736261182758219] 74%|███████▍  | 37/50 [00:06&lt;00:03,  3.79trial/s, best loss: -0.9736261182758219] 76%|███████▌  | 38/50 [00:06&lt;00:02,  4.05trial/s, best loss: -0.9736261182758219] 78%|███████▊  | 39/50 [00:06&lt;00:02,  4.46trial/s, best loss: -0.9736261182758219] 80%|████████  | 40/50 [00:06&lt;00:01,  5.31trial/s, best loss: -0.9736261182758219] 82%|████████▏ | 41/50 [00:06&lt;00:01,  6.03trial/s, best loss: -0.9736261182758219] 84%|████████▍ | 42/50 [00:06&lt;00:01,  6.79trial/s, best loss: -0.9736261182758219] 86%|████████▌ | 43/50 [00:07&lt;00:01,  6.73trial/s, best loss: -0.9736261182758219] 88%|████████▊ | 44/50 [00:07&lt;00:00,  7.04trial/s, best loss: -0.9736261182758219] 90%|█████████ | 45/50 [00:07&lt;00:00,  7.43trial/s, best loss: -0.9736261182758219] 92%|█████████▏| 46/50 [00:07&lt;00:00,  7.02trial/s, best loss: -0.9736261182758219] 94%|█████████▍| 47/50 [00:07&lt;00:00,  7.14trial/s, best loss: -0.9736261182758219] 96%|█████████▌| 48/50 [00:07&lt;00:00,  6.67trial/s, best loss: -0.9736261182758219] 98%|█████████▊| 49/50 [00:07&lt;00:00,  7.19trial/s, best loss: -0.9736261182758219]100%|██████████| 50/50 [00:08&lt;00:00,  7.52trial/s, best loss: -0.9736261182758219]100%|██████████| 50/50 [00:08&lt;00:00,  6.22trial/s, best loss: -0.9736261182758219]</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="44">
<pre><code>{'colsample_bytree': 0.8065561529248224,
 'learning_rate': 0.1128018538935688,
 'max_depth': 18.0,
 'min_child_weight': 2.0}</code></pre>
</div>
</div>


</section>
</section>


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a><div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">각주</h2>

<ol>
<li id="fn1"><p>hard voting (단순 다수결), soft voting(label을 예측할 확률의 가중 평균으로 분류)으로 나뉨. 일반적으로 soft voting이 사용됨.↩︎</p></li>
<li id="fn2"><p>hard voting (단순 다수결), soft voting(label을 예측할 확률의 가중 평균으로 분류)으로 나뉨. 일반적으로 soft voting이 사용됨.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>머신 러닝</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/machine_learning/02.html</guid>
  <pubDate>Sat, 26 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>분류 - 결정 트리</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/machine_learning/01.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<ul>
<li>결정 노드가 많아지면 과적합이 발생할 수 있음</li>
<li>가능한 한 적은 결정 노드로 높은 예측 정확도를 가지려면 데이터를 분류할 때 최대한 많은 데이터 세트가 해당 분류에 속할 수 있도록 규칙을 정해야 함</li>
<li>균일하게 데이터 세트를 구성할 수 있도록 분할하는 것이 필요</li>
<li>균일도만 신경쓰면 되기 때문에 전처리 작업이 필요 없음</li>
</ul>
</section>
<section id="파라미터" class="level2">
<h2 class="anchored" data-anchor-id="파라미터">파라미터</h2>
<ul>
<li>min_samples_split: 노드를 분할하기 위한 최소한의 샘플 수.</li>
<li>min_samples_leaf: 말단 노드가 되기 위한 최소한의 샘플 수. 비대칭적 데이터의 경우 특정 클래스의 데이터가 극도로 작을 수 있으므로 작게 설정 필요</li>
<li>max_features: 분할을 고려할 feature의 수. default는 None으로 모든 feature를 고려함</li>
<li>max_depth</li>
<li>max_leaf_nodes</li>
</ul>
</section>
<section id="시각화" class="level2">
<h2 class="anchored" data-anchor-id="시각화">시각화</h2>
<div id="0f4f85b3" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.tree <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DecisionTreeClassifier, export_graphviz</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_iris</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> graphviz</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> warnings</span>
<span id="cb1-6"></span>
<span id="cb1-7">warnings.filterwarnings(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ignore'</span>)</span></code></pre></div>
</div>
<div id="a12b82c3" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">dt_clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DecisionTreeClassifier()</span>
<span id="cb2-2"></span>
<span id="cb2-3">iris_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_iris()</span>
<span id="cb2-4">X_train, X_test, y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(iris_data.data, iris_data.target, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6">dt_clf.fit(X_train, y_train)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<style>#sk-container-id-1 {
  /* Definition of color scheme common for light and dark mode */
  --sklearn-color-text: black;
  --sklearn-color-line: gray;
  /* Definition of color scheme for unfitted estimators */
  --sklearn-color-unfitted-level-0: #fff5e6;
  --sklearn-color-unfitted-level-1: #f6e4d2;
  --sklearn-color-unfitted-level-2: #ffe0b3;
  --sklearn-color-unfitted-level-3: chocolate;
  /* Definition of color scheme for fitted estimators */
  --sklearn-color-fitted-level-0: #f0f8ff;
  --sklearn-color-fitted-level-1: #d4ebff;
  --sklearn-color-fitted-level-2: #b3dbfd;
  --sklearn-color-fitted-level-3: cornflowerblue;

  /* Specific color for light theme */
  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));
  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));
  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));
  --sklearn-color-icon: #696969;

  @media (prefers-color-scheme: dark) {
    /* Redefinition of color scheme for dark theme */
    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));
    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));
    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));
    --sklearn-color-icon: #878787;
  }
}

#sk-container-id-1 {
  color: var(--sklearn-color-text);
}

#sk-container-id-1 pre {
  padding: 0;
}

#sk-container-id-1 input.sk-hidden--visually {
  border: 0;
  clip: rect(1px 1px 1px 1px);
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

#sk-container-id-1 div.sk-dashed-wrapped {
  border: 1px dashed var(--sklearn-color-line);
  margin: 0 0.4em 0.5em 0.4em;
  box-sizing: border-box;
  padding-bottom: 0.4em;
  background-color: var(--sklearn-color-background);
}

#sk-container-id-1 div.sk-container {
  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`
     but bootstrap.min.css set `[hidden] { display: none !important; }`
     so we also need the `!important` here to be able to override the
     default hidden behavior on the sphinx rendered scikit-learn.org.
     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */
  display: inline-block !important;
  position: relative;
}

#sk-container-id-1 div.sk-text-repr-fallback {
  display: none;
}

div.sk-parallel-item,
div.sk-serial,
div.sk-item {
  /* draw centered vertical line to link estimators */
  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));
  background-size: 2px 100%;
  background-repeat: no-repeat;
  background-position: center center;
}

/* Parallel-specific style estimator block */

#sk-container-id-1 div.sk-parallel-item::after {
  content: "";
  width: 100%;
  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);
  flex-grow: 1;
}

#sk-container-id-1 div.sk-parallel {
  display: flex;
  align-items: stretch;
  justify-content: center;
  background-color: var(--sklearn-color-background);
  position: relative;
}

#sk-container-id-1 div.sk-parallel-item {
  display: flex;
  flex-direction: column;
}

#sk-container-id-1 div.sk-parallel-item:first-child::after {
  align-self: flex-end;
  width: 50%;
}

#sk-container-id-1 div.sk-parallel-item:last-child::after {
  align-self: flex-start;
  width: 50%;
}

#sk-container-id-1 div.sk-parallel-item:only-child::after {
  width: 0;
}

/* Serial-specific style estimator block */

#sk-container-id-1 div.sk-serial {
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: var(--sklearn-color-background);
  padding-right: 1em;
  padding-left: 1em;
}


/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is
clickable and can be expanded/collapsed.
- Pipeline and ColumnTransformer use this feature and define the default style
- Estimators will overwrite some part of the style using the `sk-estimator` class
*/

/* Pipeline and ColumnTransformer style (default) */

#sk-container-id-1 div.sk-toggleable {
  /* Default theme specific background. It is overwritten whether we have a
  specific estimator or a Pipeline/ColumnTransformer */
  background-color: var(--sklearn-color-background);
}

/* Toggleable label */
#sk-container-id-1 label.sk-toggleable__label {
  cursor: pointer;
  display: block;
  width: 100%;
  margin-bottom: 0;
  padding: 0.5em;
  box-sizing: border-box;
  text-align: center;
}

#sk-container-id-1 label.sk-toggleable__label-arrow:before {
  /* Arrow on the left of the label */
  content: "▸";
  float: left;
  margin-right: 0.25em;
  color: var(--sklearn-color-icon);
}

#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {
  color: var(--sklearn-color-text);
}

/* Toggleable content - dropdown */

#sk-container-id-1 div.sk-toggleable__content {
  max-height: 0;
  max-width: 0;
  overflow: hidden;
  text-align: left;
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-0);
}

#sk-container-id-1 div.sk-toggleable__content.fitted {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-0);
}

#sk-container-id-1 div.sk-toggleable__content pre {
  margin: 0.2em;
  border-radius: 0.25em;
  color: var(--sklearn-color-text);
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-0);
}

#sk-container-id-1 div.sk-toggleable__content.fitted pre {
  /* unfitted */
  background-color: var(--sklearn-color-fitted-level-0);
}

#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {
  /* Expand drop-down */
  max-height: 200px;
  max-width: 100%;
  overflow: auto;
}

#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {
  content: "▾";
}

/* Pipeline/ColumnTransformer-specific style */

#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {
  color: var(--sklearn-color-text);
  background-color: var(--sklearn-color-unfitted-level-2);
}

#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {
  background-color: var(--sklearn-color-fitted-level-2);
}

/* Estimator-specific style */

/* Colorize estimator box */
#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-2);
}

#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-2);
}

#sk-container-id-1 div.sk-label label.sk-toggleable__label,
#sk-container-id-1 div.sk-label label {
  /* The background is the default theme color */
  color: var(--sklearn-color-text-on-default-background);
}

/* On hover, darken the color of the background */
#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {
  color: var(--sklearn-color-text);
  background-color: var(--sklearn-color-unfitted-level-2);
}

/* Label box, darken color on hover, fitted */
#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {
  color: var(--sklearn-color-text);
  background-color: var(--sklearn-color-fitted-level-2);
}

/* Estimator label */

#sk-container-id-1 div.sk-label label {
  font-family: monospace;
  font-weight: bold;
  display: inline-block;
  line-height: 1.2em;
}

#sk-container-id-1 div.sk-label-container {
  text-align: center;
}

/* Estimator-specific */
#sk-container-id-1 div.sk-estimator {
  font-family: monospace;
  border: 1px dotted var(--sklearn-color-border-box);
  border-radius: 0.25em;
  box-sizing: border-box;
  margin-bottom: 0.5em;
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-0);
}

#sk-container-id-1 div.sk-estimator.fitted {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-0);
}

/* on hover */
#sk-container-id-1 div.sk-estimator:hover {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-2);
}

#sk-container-id-1 div.sk-estimator.fitted:hover {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-2);
}

/* Specification for estimator info (e.g. "i" and "?") */

/* Common style for "i" and "?" */

.sk-estimator-doc-link,
a:link.sk-estimator-doc-link,
a:visited.sk-estimator-doc-link {
  float: right;
  font-size: smaller;
  line-height: 1em;
  font-family: monospace;
  background-color: var(--sklearn-color-background);
  border-radius: 1em;
  height: 1em;
  width: 1em;
  text-decoration: none !important;
  margin-left: 1ex;
  /* unfitted */
  border: var(--sklearn-color-unfitted-level-1) 1pt solid;
  color: var(--sklearn-color-unfitted-level-1);
}

.sk-estimator-doc-link.fitted,
a:link.sk-estimator-doc-link.fitted,
a:visited.sk-estimator-doc-link.fitted {
  /* fitted */
  border: var(--sklearn-color-fitted-level-1) 1pt solid;
  color: var(--sklearn-color-fitted-level-1);
}

/* On hover */
div.sk-estimator:hover .sk-estimator-doc-link:hover,
.sk-estimator-doc-link:hover,
div.sk-label-container:hover .sk-estimator-doc-link:hover,
.sk-estimator-doc-link:hover {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-3);
  color: var(--sklearn-color-background);
  text-decoration: none;
}

div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,
.sk-estimator-doc-link.fitted:hover,
div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,
.sk-estimator-doc-link.fitted:hover {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-3);
  color: var(--sklearn-color-background);
  text-decoration: none;
}

/* Span, style for the box shown on hovering the info icon */
.sk-estimator-doc-link span {
  display: none;
  z-index: 9999;
  position: relative;
  font-weight: normal;
  right: .2ex;
  padding: .5ex;
  margin: .5ex;
  width: min-content;
  min-width: 20ex;
  max-width: 50ex;
  color: var(--sklearn-color-text);
  box-shadow: 2pt 2pt 4pt #999;
  /* unfitted */
  background: var(--sklearn-color-unfitted-level-0);
  border: .5pt solid var(--sklearn-color-unfitted-level-3);
}

.sk-estimator-doc-link.fitted span {
  /* fitted */
  background: var(--sklearn-color-fitted-level-0);
  border: var(--sklearn-color-fitted-level-3);
}

.sk-estimator-doc-link:hover span {
  display: block;
}

/* "?"-specific style due to the `<a>` HTML tag */

#sk-container-id-1 a.estimator_doc_link {
  float: right;
  font-size: 1rem;
  line-height: 1em;
  font-family: monospace;
  background-color: var(--sklearn-color-background);
  border-radius: 1rem;
  height: 1rem;
  width: 1rem;
  text-decoration: none;
  /* unfitted */
  color: var(--sklearn-color-unfitted-level-1);
  border: var(--sklearn-color-unfitted-level-1) 1pt solid;
}

#sk-container-id-1 a.estimator_doc_link.fitted {
  /* fitted */
  border: var(--sklearn-color-fitted-level-1) 1pt solid;
  color: var(--sklearn-color-fitted-level-1);
}

/* On hover */
#sk-container-id-1 a.estimator_doc_link:hover {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-3);
  color: var(--sklearn-color-background);
  text-decoration: none;
}

#sk-container-id-1 a.estimator_doc_link.fitted:hover {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-3);
}
</a></style><div id="sk-container-id-1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>DecisionTreeClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br>On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden=""><div class="sk-item"><div class="sk-estimator fitted sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-1" type="checkbox" checked=""><label for="sk-estimator-id-1" class="sk-toggleable__label fitted sk-toggleable__label-arrow fitted">&nbsp;&nbsp;DecisionTreeClassifier<a class="sk-estimator-doc-link fitted" rel="noreferrer" target="_blank" href="https://scikit-learn.org/1.5/modules/generated/sklearn.tree.DecisionTreeClassifier.html">?<span>Documentation for DecisionTreeClassifier</span></a><span class="sk-estimator-doc-link fitted">i<span>Fitted</span></span></label><div class="sk-toggleable__content fitted"><pre>DecisionTreeClassifier()</pre></div> </div></div></div></div>
</div>
</div>
<div id="723f86fa" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">export_graphviz(dt_clf, out_file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tree.dot"</span>, class_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>iris_data.target_names, feature_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>iris_data.feature_names, impurity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, filled<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tree.dot"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb3-3">    dot_graph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.read()</span>
<span id="cb3-4">graphviz.Source(dot_graph)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/machine_learning/01_files/figure-html/cell-4-output-1.svg" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="3dc2a299" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name, value <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(iris_data.feature_names, dt_clf.feature_importances_):</span>
<span id="cb4-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-6">sns.barplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dt_clf.feature_importances_, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>iris_data.feature_names)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>sepal length (cm): 0.000
sepal width (cm): 0.017
petal length (cm): 0.544
petal width (cm): 0.439</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/machine_learning/01_files/figure-html/cell-5-output-2.png" width="666" height="411" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="examples" class="level2">
<h2 class="anchored" data-anchor-id="examples">examples</h2>
<div id="522a15c6" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb6-2"></span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_new_feature_name_df(old):</span>
<span id="cb6-5">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>old.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'column_name'</span>).cumcount(), columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dup_cnt'</span>])</span>
<span id="cb6-6">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.reset_index()</span>
<span id="cb6-7">    new_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.merge(old.reset_index(), df, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'outer'</span>)</span>
<span id="cb6-8">    new_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'column_name'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'column_name'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dup_cnt'</span>]].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-9">    new_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_df.drop([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'index'</span>], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> new_df</span>
<span id="cb6-11"></span>
<span id="cb6-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_human_dataset():</span>
<span id="cb6-13">    feature_name_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/human_activity/features.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\s+'</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'column_index'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'column_name'</span>])</span>
<span id="cb6-14">    new_feature_name_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_new_feature_name_df(feature_name_df)</span>
<span id="cb6-15">    feature_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_feature_name_df.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].values.tolist()</span>
<span id="cb6-16"></span>
<span id="cb6-17">    X_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/human_activity/train/X_train.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\s+'</span>, names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>feature_name)</span>
<span id="cb6-18">    X_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/human_activity/test/X_test.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\s+'</span>, names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>feature_name)</span>
<span id="cb6-19"></span>
<span id="cb6-20">    y_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/human_activity/train/y_train.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\s+'</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'action'</span>])</span>
<span id="cb6-21">    y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/human_activity/test/y_test.txt'</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\s+'</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'action'</span>])</span>
<span id="cb6-22"></span>
<span id="cb6-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> X_train, X_test, y_train, y_test</span>
<span id="cb6-24"></span>
<span id="cb6-25">X_train, X_test, y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_human_dataset()</span>
<span id="cb6-26">X_train.info()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 7352 entries, 0 to 7351
Columns: 561 entries, tBodyAcc-mean()-X to angle(Z,gravityMean)
dtypes: float64(561)
memory usage: 31.5 MB</code></pre>
</div>
</div>
<div id="dd0fb5a8" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">y_train[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'action'</span>].value_counts()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>action
6    1407
5    1374
4    1286
1    1226
2    1073
3     986
Name: count, dtype: int64</code></pre>
</div>
</div>
<section id="default-파라미터-예측" class="level3">
<h3 class="anchored" data-anchor-id="default-파라미터-예측">default 파라미터 예측</h3>
<div id="b78d5bcd" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> accuracy_score</span>
<span id="cb10-2"></span>
<span id="cb10-3">dt_clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DecisionTreeClassifier()</span>
<span id="cb10-4">dt_clf.fit(X_train, y_train)</span>
<span id="cb10-5">pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dt_clf.predict(X_test)</span>
<span id="cb10-6">accuracy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy_score(y_test, pred)</span>
<span id="cb10-7">accuracy</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>0.8608754665761792</code></pre>
</div>
</div>
</section>
<section id="하이퍼파라미터-최적화" class="level3">
<h3 class="anchored" data-anchor-id="하이퍼파라미터-최적화">하이퍼파라미터 최적화</h3>
<div id="92b35214" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GridSearchCV</span>
<span id="cb12-2"></span>
<span id="cb12-3">params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb12-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max_depth'</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>],</span>
<span id="cb12-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'min_samples_split'</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>]</span>
<span id="cb12-6">}</span>
<span id="cb12-7"></span>
<span id="cb12-8">grid_cv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GridSearchCV(dt_clf, param_grid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>params, scoring<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accuracy'</span>,cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb12-9">grid_cv.fit(X_train, y_train)</span>
<span id="cb12-10"></span>
<span id="cb12-11">cv_results_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(grid_cv.cv_results_)</span>
<span id="cb12-12">cv_results_df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'param_max_depth'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean_test_score'</span>]]</span>
<span id="cb12-13">cv_results_df</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Fitting 5 folds for each of 7 candidates, totalling 35 fits</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="8">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">mean_fit_time</th>
<th data-quarto-table-cell-role="th">std_fit_time</th>
<th data-quarto-table-cell-role="th">mean_score_time</th>
<th data-quarto-table-cell-role="th">std_score_time</th>
<th data-quarto-table-cell-role="th">param_max_depth</th>
<th data-quarto-table-cell-role="th">param_min_samples_split</th>
<th data-quarto-table-cell-role="th">params</th>
<th data-quarto-table-cell-role="th">split0_test_score</th>
<th data-quarto-table-cell-role="th">split1_test_score</th>
<th data-quarto-table-cell-role="th">split2_test_score</th>
<th data-quarto-table-cell-role="th">split3_test_score</th>
<th data-quarto-table-cell-role="th">split4_test_score</th>
<th data-quarto-table-cell-role="th">mean_test_score</th>
<th data-quarto-table-cell-role="th">std_test_score</th>
<th data-quarto-table-cell-role="th">rank_test_score</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>1.730651</td>
<td>0.071066</td>
<td>0.004747</td>
<td>0.000612</td>
<td>6</td>
<td>16</td>
<td>{'max_depth': 6, 'min_samples_split': 16}</td>
<td>0.812373</td>
<td>0.870156</td>
<td>0.834694</td>
<td>0.865306</td>
<td>0.869388</td>
<td>0.850383</td>
<td>0.023090</td>
<td>2</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2.199078</td>
<td>0.058100</td>
<td>0.004974</td>
<td>0.000507</td>
<td>8</td>
<td>16</td>
<td>{'max_depth': 8, 'min_samples_split': 16}</td>
<td>0.812373</td>
<td>0.831407</td>
<td>0.842177</td>
<td>0.870068</td>
<td>0.890476</td>
<td>0.849300</td>
<td>0.027790</td>
<td>3</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2.591271</td>
<td>0.101800</td>
<td>0.004741</td>
<td>0.000625</td>
<td>10</td>
<td>16</td>
<td>{'max_depth': 10, 'min_samples_split': 16}</td>
<td>0.813732</td>
<td>0.819850</td>
<td>0.837415</td>
<td>0.888435</td>
<td>0.896599</td>
<td>0.851206</td>
<td>0.034711</td>
<td>1</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2.873773</td>
<td>0.100605</td>
<td>0.005099</td>
<td>0.001333</td>
<td>12</td>
<td>16</td>
<td>{'max_depth': 12, 'min_samples_split': 16}</td>
<td>0.783821</td>
<td>0.817811</td>
<td>0.853741</td>
<td>0.885714</td>
<td>0.882313</td>
<td>0.844680</td>
<td>0.039008</td>
<td>5</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>3.446341</td>
<td>0.244669</td>
<td>0.004722</td>
<td>0.000739</td>
<td>16</td>
<td>16</td>
<td>{'max_depth': 16, 'min_samples_split': 16}</td>
<td>0.803535</td>
<td>0.810333</td>
<td>0.842177</td>
<td>0.878231</td>
<td>0.887075</td>
<td>0.844270</td>
<td>0.034062</td>
<td>6</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>3.307252</td>
<td>0.254648</td>
<td>0.004365</td>
<td>0.000410</td>
<td>20</td>
<td>16</td>
<td>{'max_depth': 20, 'min_samples_split': 16}</td>
<td>0.794018</td>
<td>0.811693</td>
<td>0.831293</td>
<td>0.887075</td>
<td>0.891837</td>
<td>0.843183</td>
<td>0.039608</td>
<td>7</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>3.243996</td>
<td>0.227535</td>
<td>0.004434</td>
<td>0.000333</td>
<td>24</td>
<td>16</td>
<td>{'max_depth': 24, 'min_samples_split': 16}</td>
<td>0.796737</td>
<td>0.809653</td>
<td>0.846259</td>
<td>0.882313</td>
<td>0.895238</td>
<td>0.846040</td>
<td>0.038707</td>
<td>4</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="11706389" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">best_df_clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid_cv.best_estimator_</span>
<span id="cb14-2"></span>
<span id="cb14-3">ftr_importances_values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> best_df_clf.feature_importances_</span>
<span id="cb14-4">ftr_importances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Series(ftr_importances_values, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>X_train.columns)</span>
<span id="cb14-5">ftr_top20 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ftr_importances.sort_values(ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>]</span>
<span id="cb14-6">sns.barplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ftr_top20, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ftr_top20.index)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/machine_learning/01_files/figure-html/cell-10-output-1.png" width="791" height="429" class="figure-img"></p>
</figure>
</div>
</div>
</div>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>머신 러닝</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/machine_learning/01.html</guid>
  <pubDate>Sat, 26 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>다차원 척도법 (Multidimensional Scaling)</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/etc/00.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="다차원-척도법mds이란" class="level2">
<h2 class="anchored" data-anchor-id="다차원-척도법mds이란">다차원 척도법(MDS)이란?</h2>
<p>다차원 척도법(Multidimensional Scaling, MDS)은 고차원 데이터를 저차원 공간에 시각화하는 차원 축소 기법입니다. 객체들 간의 거리나 유사도를 보존하면서 2차원 또는 3차원 공간에 데이터를 투영합니다.</p>
</section>
<section id="필요한-라이브러리-설치-및-임포트" class="level2">
<h2 class="anchored" data-anchor-id="필요한-라이브러리-설치-및-임포트">필요한 라이브러리 설치 및 임포트</h2>
<div id="966db7de" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.manifold <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MDS</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pairwise_distances</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StandardScaler, LabelEncoder</span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> make_classification</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.spatial.distance <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pdist, squareform</span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> warnings</span>
<span id="cb1-11">warnings.filterwarnings(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ignore'</span>)</span>
<span id="cb1-12"></span>
<span id="cb1-13">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font.family'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Noto Sans KR'</span></span></code></pre></div>
</div>
</section>
<section id="샘플-데이터-생성" class="level2">
<h2 class="anchored" data-anchor-id="샘플-데이터-생성">샘플 데이터 생성</h2>
<p>다양한 케이스를 위한 샘플 데이터를 생성합니다.</p>
<div id="9591b6dd" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. 연속변수만 포함하는 데이터</span></span>
<span id="cb2-2">np.random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb2-3">continuous_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_classification(</span>
<span id="cb2-4">    n_samples<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, </span>
<span id="cb2-5">    n_features<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, </span>
<span id="cb2-6">    n_classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, </span>
<span id="cb2-7">    n_redundant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb2-8">    n_informative<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb2-9">    random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span>
<span id="cb2-10">)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb2-11"></span>
<span id="cb2-12">continuous_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(</span>
<span id="cb2-13">    continuous_data, </span>
<span id="cb2-14">    columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'feature_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)]</span>
<span id="cb2-15">)</span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"연속변수 데이터셋 shape:"</span>, continuous_df.shape)</span>
<span id="cb2-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(continuous_df.head())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>연속변수 데이터셋 shape: (100, 5)
   feature_1  feature_2  feature_3  feature_4  feature_5
0   0.051936  -1.797511  -1.855638  -1.396449  -1.196204
1   0.403789   0.921306   3.200886   1.984403   0.106783
2   0.300321  -0.930015   0.162936  -0.576956   2.232421
3  -0.199444  -0.496488  -1.928236   0.929103  -1.480070
4   1.144153  -1.221289  -0.581620  -0.475414   1.675759</code></pre>
</div>
</div>
<div id="6e8588ab" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. 명목변수를 포함하는 혼합 데이터</span></span>
<span id="cb4-2">np.random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 연속변수</span></span>
<span id="cb4-5">age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb4-6">income <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb4-7">experience <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 명목변수</span></span>
<span id="cb4-10">education <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.choice([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'고등학교'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'대학교'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'대학원'</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb4-11">department <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.choice([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'영업'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'마케팅'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'개발'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HR'</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb4-12">location <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.choice([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'서울'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'부산'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'대구'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'광주'</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb4-13"></span>
<span id="cb4-14">mixed_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({</span>
<span id="cb4-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'age'</span>: age,</span>
<span id="cb4-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'income'</span>: income,</span>
<span id="cb4-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'experience'</span>: experience,</span>
<span id="cb4-18">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'education'</span>: education,</span>
<span id="cb4-19">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'department'</span>: department,</span>
<span id="cb4-20">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'location'</span>: location</span>
<span id="cb4-21">})</span>
<span id="cb4-22"></span>
<span id="cb4-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">혼합 데이터셋 shape:"</span>, mixed_df.shape)</span>
<span id="cb4-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(mixed_df.head())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
혼합 데이터셋 shape: (100, 6)
         age        income  experience education department location
0  39.967142  28769.438869    6.073362      고등학교         개발       서울
1  33.617357  43690.320159    6.682354       대학교        마케팅       서울
2  41.476885  44859.282252    8.249154      고등학교        마케팅       광주
3  50.230299  37965.840962    8.161406      고등학교         개발       서울
4  32.658466  47580.714325    0.866992       대학원         개발       광주</code></pre>
</div>
</div>
<div id="861d4607" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. 거리 행렬 데이터 (도시간 거리 예시)</span></span>
<span id="cb6-2">cities <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'서울'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'부산'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'대구'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'인천'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'광주'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'대전'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'울산'</span>]</span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 실제 도시간 거리 (km)</span></span>
<span id="cb6-4">distance_matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([</span>
<span id="cb6-5">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">325</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">237</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">267</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">140</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">340</span>],      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 서울</span></span>
<span id="cb6-6">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">325</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">88</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">353</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">158</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">185</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>],       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 부산</span></span>
<span id="cb6-7">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">237</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">88</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">265</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">215</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">97</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>],        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 대구</span></span>
<span id="cb6-8">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">353</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">265</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">295</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">168</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">368</span>],      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 인천</span></span>
<span id="cb6-9">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">267</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">158</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">215</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">295</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">168</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>],     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 광주</span></span>
<span id="cb6-10">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">140</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">185</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">97</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">168</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">168</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">230</span>],      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 대전</span></span>
<span id="cb6-11">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">340</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">368</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">230</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 울산</span></span>
<span id="cb6-12">])</span>
<span id="cb6-13"></span>
<span id="cb6-14">distance_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(distance_matrix, </span>
<span id="cb6-15">                          index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cities, </span>
<span id="cb6-16">                          columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cities)</span>
<span id="cb6-17"></span>
<span id="cb6-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">도시간 거리 행렬:"</span>)</span>
<span id="cb6-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(distance_df)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
도시간 거리 행렬:
     서울   부산   대구   인천   광주   대전   울산
서울    0  325  237   28  267  140  340
부산  325    0   88  353  158  185   45
대구  237   88    0  265  215   97   85
인천   28  353  265    0  295  168  368
광주  267  158  215  295    0  168  200
대전  140  185   97  168  168    0  230
울산  340   45   85  368  200  230    0</code></pre>
</div>
</div>
</section>
<section id="연속변수만-포함하는-기본-mds-분석" class="level2">
<h2 class="anchored" data-anchor-id="연속변수만-포함하는-기본-mds-분석">1. 연속변수만 포함하는 기본 MDS 분석</h2>
<p>연속변수로만 구성된 데이터에 MDS를 적용하는 예시입니다.</p>
<div id="5bfe7e0b" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 표준화</span></span>
<span id="cb8-2">scaler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StandardScaler()</span>
<span id="cb8-3">continuous_scaled <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler.fit_transform(continuous_df)</span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기본 MDS 적용 (2차원)</span></span>
<span id="cb8-6">mds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MDS(n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb8-7">mds_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mds.fit_transform(continuous_scaled)</span>
<span id="cb8-8"></span>
<span id="cb8-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과를 DataFrame으로 변환</span></span>
<span id="cb8-10">mds_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(mds_result, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS2'</span>])</span>
<span id="cb8-11"></span>
<span id="cb8-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MDS 결과:"</span>)</span>
<span id="cb8-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(mds_df.head())</span>
<span id="cb8-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Stress 값: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mds<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stress_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>MDS 결과:
       MDS1      MDS2
0  0.329495 -1.755421
1  0.049463  3.238964
2 -0.946161  0.369966
3  0.357709 -0.007320
4 -0.769899 -0.435848

Stress 값: 3208.7256</code></pre>
</div>
</div>
<div id="b7201053" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화</span></span>
<span id="cb10-2">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb10-3">plt.scatter(mds_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS1'</span>], mds_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS2'</span>], alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb10-4">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 1'</span>)</span>
<span id="cb10-5">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 2'</span>)</span>
<span id="cb10-6">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS 결과 - 연속변수 데이터'</span>)</span>
<span id="cb10-7">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb10-8"></span>
<span id="cb10-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 점에 인덱스 번호 표시</span></span>
<span id="cb10-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, (x, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(mds_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS1'</span>], mds_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS2'</span>])):</span>
<span id="cb10-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 10개마다 번호 표시</span></span>
<span id="cb10-12">        plt.annotate(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(i), (x, y), xytext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), </span>
<span id="cb10-13">                    textcoords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'offset points'</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb10-14"></span>
<span id="cb10-15">plt.tight_layout()</span>
<span id="cb10-16">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/etc/00_files/figure-html/cell-7-output-1.png" width="950" height="757" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="29231f8d" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 클래스별로 색상을 다르게 하여 시각화 (원본 클래스 정보 사용)</span></span>
<span id="cb11-2">_, y_true <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_classification(</span>
<span id="cb11-3">    n_samples<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, </span>
<span id="cb11-4">    n_features<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, </span>
<span id="cb11-5">    n_classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, </span>
<span id="cb11-6">    n_redundant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb11-7">    n_informative<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb11-8">    random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span>
<span id="cb11-9">)</span>
<span id="cb11-10"></span>
<span id="cb11-11">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb11-12">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>]</span>
<span id="cb11-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>):</span>
<span id="cb11-14">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y_true <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> i</span>
<span id="cb11-15">    plt.scatter(mds_df.loc[mask, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS1'</span>], </span>
<span id="cb11-16">                mds_df.loc[mask, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS2'</span>], </span>
<span id="cb11-17">                c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Class </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb11-18"></span>
<span id="cb11-19">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 1'</span>)</span>
<span id="cb11-20">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 2'</span>)</span>
<span id="cb11-21">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS 결과 - 클래스별 색상 구분'</span>)</span>
<span id="cb11-22">plt.legend()</span>
<span id="cb11-23">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb11-24">plt.tight_layout()</span>
<span id="cb11-25">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/etc/00_files/figure-html/cell-8-output-1.png" width="950" height="757" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="884ed1d6" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 거리 보존 정도 확인</span></span>
<span id="cb12-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pairwise_distances</span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 원본 데이터의 거리 행렬</span></span>
<span id="cb12-5">original_distances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pairwise_distances(continuous_scaled)</span>
<span id="cb12-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># MDS 결과의 거리 행렬</span></span>
<span id="cb12-7">mds_distances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pairwise_distances(mds_result)</span>
<span id="cb12-8"></span>
<span id="cb12-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 거리 상관계수 계산</span></span>
<span id="cb12-10">distance_correlation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(</span>
<span id="cb12-11">    original_distances.flatten(), </span>
<span id="cb12-12">    mds_distances.flatten()</span>
<span id="cb12-13">)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb12-14"></span>
<span id="cb12-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"원본 거리와 MDS 거리의 상관계수: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>distance_correlation<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb12-16"></span>
<span id="cb12-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Shepard diagram 그리기</span></span>
<span id="cb12-18">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb12-19">plt.scatter(original_distances.flatten(), </span>
<span id="cb12-20">            mds_distances.flatten(), </span>
<span id="cb12-21">            alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb12-22">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Original Distances'</span>)</span>
<span id="cb12-23">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Distances'</span>)</span>
<span id="cb12-24">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Shepard Diagram - 거리 보존 정도'</span>)</span>
<span id="cb12-25">plt.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, original_distances.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()], </span>
<span id="cb12-26">         [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, original_distances.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()], </span>
<span id="cb12-27">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r--'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)</span>
<span id="cb12-28">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb12-29">plt.tight_layout()</span>
<span id="cb12-30">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>원본 거리와 MDS 거리의 상관계수: 0.8435</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/etc/00_files/figure-html/cell-9-output-2.png" width="758" height="566" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="명목변수를-포함하는-혼합-데이터-mds-분석" class="level2">
<h2 class="anchored" data-anchor-id="명목변수를-포함하는-혼합-데이터-mds-분석">2. 명목변수를 포함하는 혼합 데이터 MDS 분석</h2>
<p>명목변수와 연속변수가 혼합된 데이터에 MDS를 적용하는 예시입니다.</p>
<div id="83cef539" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 혼합 데이터 전처리</span></span>
<span id="cb14-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> preprocess_mixed_data(df):</span>
<span id="cb14-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""혼합 데이터를 MDS에 적합하도록 전처리"""</span></span>
<span id="cb14-4">    processed_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.copy()</span>
<span id="cb14-5">    </span>
<span id="cb14-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 연속변수 표준화</span></span>
<span id="cb14-7">    continuous_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'age'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'income'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'experience'</span>]</span>
<span id="cb14-8">    scaler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StandardScaler()</span>
<span id="cb14-9">    processed_df[continuous_cols] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler.fit_transform(processed_df[continuous_cols])</span>
<span id="cb14-10">    </span>
<span id="cb14-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 명목변수 원핫 인코딩</span></span>
<span id="cb14-12">    categorical_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'education'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'department'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'location'</span>]</span>
<span id="cb14-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> categorical_cols:</span>
<span id="cb14-14">        dummies <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.get_dummies(processed_df[col], prefix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>col)</span>
<span id="cb14-15">        processed_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([processed_df, dummies], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb14-16">        processed_df.drop(col, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb14-17">    </span>
<span id="cb14-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> processed_df</span>
<span id="cb14-19"></span>
<span id="cb14-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 전처리</span></span>
<span id="cb14-21">mixed_processed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocess_mixed_data(mixed_df)</span>
<span id="cb14-22"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"전처리된 혼합 데이터 shape:"</span>, mixed_processed.shape)</span>
<span id="cb14-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">컬럼 목록:"</span>)</span>
<span id="cb14-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(mixed_processed.columns.tolist())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>전처리된 혼합 데이터 shape: (100, 14)

컬럼 목록:
['age', 'income', 'experience', 'education_고등학교', 'education_대학교', 'education_대학원', 'department_HR', 'department_개발', 'department_마케팅', 'department_영업', 'location_광주', 'location_대구', 'location_부산', 'location_서울']</code></pre>
</div>
</div>
<div id="da459f19" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 혼합 데이터에 MDS 적용</span></span>
<span id="cb16-2">mds_mixed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MDS(n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb16-3">mds_mixed_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mds_mixed.fit_transform(mixed_processed)</span>
<span id="cb16-4"></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과를 DataFrame으로 변환</span></span>
<span id="cb16-6">mds_mixed_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(mds_mixed_result, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS2'</span>])</span>
<span id="cb16-7"></span>
<span id="cb16-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"혼합 데이터 MDS 결과:"</span>)</span>
<span id="cb16-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(mds_mixed_df.head())</span>
<span id="cb16-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Stress 값: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mds_mixed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stress_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>혼합 데이터 MDS 결과:
       MDS1      MDS2
0  1.112396 -1.853207
1  0.199845 -1.172801
2 -0.073573 -1.903613
3 -0.293398 -2.665801
4  1.287388  1.284487

Stress 값: 3843.1912</code></pre>
</div>
</div>
<div id="d47091a4" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 부서별로 색상을 다르게 하여 시각화</span></span>
<span id="cb18-2">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb18-3">departments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mixed_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'department'</span>].unique()</span>
<span id="cb18-4">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'orange'</span>]</span>
<span id="cb18-5"></span>
<span id="cb18-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, dept <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(departments):</span>
<span id="cb18-7">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mixed_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'department'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> dept</span>
<span id="cb18-8">    plt.scatter(mds_mixed_df.loc[mask, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS1'</span>], </span>
<span id="cb18-9">                mds_mixed_df.loc[mask, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS2'</span>], </span>
<span id="cb18-10">                c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dept, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb18-11"></span>
<span id="cb18-12">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 1'</span>)</span>
<span id="cb18-13">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 2'</span>)</span>
<span id="cb18-14">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS 결과 - 부서별 색상 구분 (혼합 데이터)'</span>)</span>
<span id="cb18-15">plt.legend()</span>
<span id="cb18-16">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb18-17">plt.tight_layout()</span>
<span id="cb18-18">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/etc/00_files/figure-html/cell-12-output-1.png" width="1142" height="758" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="671aa270" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학력별로 마커를 다르게 하여 시각화</span></span>
<span id="cb19-2">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb19-3">educations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mixed_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'education'</span>].unique()</span>
<span id="cb19-4">markers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'^'</span>]</span>
<span id="cb19-5"></span>
<span id="cb19-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, edu <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(educations):</span>
<span id="cb19-7">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mixed_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'education'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> edu</span>
<span id="cb19-8">    plt.scatter(mds_mixed_df.loc[mask, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS1'</span>], </span>
<span id="cb19-9">                mds_mixed_df.loc[mask, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS2'</span>], </span>
<span id="cb19-10">                marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>markers[i], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>edu, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb19-11"></span>
<span id="cb19-12">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 1'</span>)</span>
<span id="cb19-13">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 2'</span>)</span>
<span id="cb19-14">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS 결과 - 학력별 마커 구분 (혼합 데이터)'</span>)</span>
<span id="cb19-15">plt.legend()</span>
<span id="cb19-16">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb19-17">plt.tight_layout()</span>
<span id="cb19-18">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/etc/00_files/figure-html/cell-13-output-1.png" width="1142" height="758" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="9dfc1b8d" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 부서와 학력을 함께 시각화</span></span>
<span id="cb20-2">fig, (ax1, ax2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 부서별 시각화</span></span>
<span id="cb20-5">departments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mixed_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'department'</span>].unique()</span>
<span id="cb20-6">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'orange'</span>]</span>
<span id="cb20-7"></span>
<span id="cb20-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, dept <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(departments):</span>
<span id="cb20-9">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mixed_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'department'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> dept</span>
<span id="cb20-10">    ax1.scatter(mds_mixed_df.loc[mask, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS1'</span>], </span>
<span id="cb20-11">                mds_mixed_df.loc[mask, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS2'</span>], </span>
<span id="cb20-12">                c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dept, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb20-13"></span>
<span id="cb20-14">ax1.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 1'</span>)</span>
<span id="cb20-15">ax1.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 2'</span>)</span>
<span id="cb20-16">ax1.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'부서별 구분'</span>)</span>
<span id="cb20-17">ax1.legend()</span>
<span id="cb20-18">ax1.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb20-19"></span>
<span id="cb20-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학력별 시각화</span></span>
<span id="cb20-21">educations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mixed_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'education'</span>].unique()</span>
<span id="cb20-22">colors2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'purple'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'brown'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pink'</span>]</span>
<span id="cb20-23"></span>
<span id="cb20-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, edu <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(educations):</span>
<span id="cb20-25">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mixed_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'education'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> edu</span>
<span id="cb20-26">    ax2.scatter(mds_mixed_df.loc[mask, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS1'</span>], </span>
<span id="cb20-27">                mds_mixed_df.loc[mask, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS2'</span>], </span>
<span id="cb20-28">                c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors2[i], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>edu, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb20-29"></span>
<span id="cb20-30">ax2.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 1'</span>)</span>
<span id="cb20-31">ax2.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 2'</span>)</span>
<span id="cb20-32">ax2.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'학력별 구분'</span>)</span>
<span id="cb20-33">ax2.legend()</span>
<span id="cb20-34">ax2.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb20-35"></span>
<span id="cb20-36">plt.tight_layout()</span>
<span id="cb20-37">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/etc/00_files/figure-html/cell-14-output-1.png" width="1910" height="757" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="ea33eefa" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gower 거리를 사용한 혼합 데이터 MDS</span></span>
<span id="cb21-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> gower_distance(X):</span>
<span id="cb21-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Gower 거리 계산 (연속변수와 명목변수 혼합용)"""</span></span>
<span id="cb21-4">    n_samples, n_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> X.shape</span>
<span id="cb21-5">    distances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((n_samples, n_samples))</span>
<span id="cb21-6">    </span>
<span id="cb21-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 피처가 연속변수인지 이진변수인지 판단</span></span>
<span id="cb21-8">    is_continuous <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb21-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n_features):</span>
<span id="cb21-10">        unique_vals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.unique(X[:, j])</span>
<span id="cb21-11">        is_continuous.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(unique_vals) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb21-12">    </span>
<span id="cb21-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n_samples):</span>
<span id="cb21-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_samples):</span>
<span id="cb21-15">            distance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb21-16">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n_features):</span>
<span id="cb21-17">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> is_continuous[k]:</span>
<span id="cb21-18">                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 연속변수: 절대차이를 범위로 나눔</span></span>
<span id="cb21-19">                    range_k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(X[:, k]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(X[:, k])</span>
<span id="cb21-20">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> range_k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb21-21">                        distance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(X[i, k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> X[j, k]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> range_k</span>
<span id="cb21-22">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb21-23">                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 명목변수: 같으면 0, 다르면 1</span></span>
<span id="cb21-24">                    distance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> X[i, k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> X[j, k] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb21-25">            </span>
<span id="cb21-26">            distances[i, j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> distances[j, i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> distance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> n_features</span>
<span id="cb21-27">    </span>
<span id="cb21-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> distances</span>
<span id="cb21-29"></span>
<span id="cb21-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 원본 혼합 데이터로 Gower 거리 계산</span></span>
<span id="cb21-31">mixed_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mixed_processed.values</span>
<span id="cb21-32">gower_dist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gower_distance(mixed_array)</span>
<span id="cb21-33"></span>
<span id="cb21-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gower 거리 기반 MDS</span></span>
<span id="cb21-35">mds_gower <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MDS(n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, dissimilarity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'precomputed'</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb21-36">mds_gower_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mds_gower.fit_transform(gower_dist)</span>
<span id="cb21-37"></span>
<span id="cb21-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 시각화</span></span>
<span id="cb21-39">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb21-40">departments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mixed_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'department'</span>].unique()</span>
<span id="cb21-41">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'orange'</span>]</span>
<span id="cb21-42"></span>
<span id="cb21-43"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, dept <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(departments):</span>
<span id="cb21-44">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mixed_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'department'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> dept</span>
<span id="cb21-45">    plt.scatter(mds_gower_result[mask, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], </span>
<span id="cb21-46">                mds_gower_result[mask, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb21-47">                c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dept, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb21-48"></span>
<span id="cb21-49">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 1'</span>)</span>
<span id="cb21-50">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 2'</span>)</span>
<span id="cb21-51">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Gower 거리 기반 MDS 결과'</span>)</span>
<span id="cb21-52">plt.legend()</span>
<span id="cb21-53">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb21-54">plt.tight_layout()</span>
<span id="cb21-55">plt.show()</span>
<span id="cb21-56"></span>
<span id="cb21-57"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Gower 거리 기반 MDS Stress 값: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mds_gower<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stress_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/etc/00_files/figure-html/cell-15-output-1.png" width="950" height="757" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Gower 거리 기반 MDS Stress 값: 70.5540</code></pre>
</div>
</div>
</section>
<section id="거리-행렬-기반-mds-분석" class="level2">
<h2 class="anchored" data-anchor-id="거리-행렬-기반-mds-분석">3. 거리 행렬 기반 MDS 분석</h2>
<p>미리 계산된 거리 행렬을 사용하여 MDS를 적용하는 예시입니다.</p>
<div id="04c87ba6" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 도시간 거리 행렬로 MDS 수행</span></span>
<span id="cb23-2">mds_distance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MDS(n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, dissimilarity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'precomputed'</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb23-3">city_mds_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mds_distance.fit_transform(distance_matrix)</span>
<span id="cb23-4"></span>
<span id="cb23-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과를 DataFrame으로 변환</span></span>
<span id="cb23-6">city_mds_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(city_mds_result, </span>
<span id="cb23-7">                          columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS2'</span>], </span>
<span id="cb23-8">                          index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cities)</span>
<span id="cb23-9"></span>
<span id="cb23-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"도시 MDS 결과:"</span>)</span>
<span id="cb23-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(city_mds_df)</span>
<span id="cb23-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Stress 값: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mds_distance<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stress_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>도시 MDS 결과:
          MDS1        MDS2
서울  -85.433007 -154.346568
부산   59.327174  130.031955
대구  -27.112189   81.647524
인천  -99.393194 -179.287057
광주  145.126739  -10.586077
대전  -24.860674  -32.769460
울산   32.345151  165.309682

Stress 값: 2023.2616</code></pre>
</div>
</div>
<div id="101f3de1" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 도시 위치 시각화</span></span>
<span id="cb25-2">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb25-3">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'orange'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'purple'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'brown'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pink'</span>]</span>
<span id="cb25-4"></span>
<span id="cb25-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, city <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(cities):</span>
<span id="cb25-6">    plt.scatter(city_mds_df.loc[city, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS1'</span>], </span>
<span id="cb25-7">                city_mds_df.loc[city, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS2'</span>], </span>
<span id="cb25-8">                c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, </span>
<span id="cb25-9">                label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>city, edgecolors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb25-10">    </span>
<span id="cb25-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 도시 이름 표시</span></span>
<span id="cb25-12">    plt.annotate(city, </span>
<span id="cb25-13">                (city_mds_df.loc[city, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS1'</span>], city_mds_df.loc[city, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS2'</span>]),</span>
<span id="cb25-14">                xytext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), textcoords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'offset points'</span>, </span>
<span id="cb25-15">                fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bold'</span>)</span>
<span id="cb25-16"></span>
<span id="cb25-17">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 1'</span>)</span>
<span id="cb25-18">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 2'</span>)</span>
<span id="cb25-19">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'도시간 거리 기반 MDS 결과'</span>)</span>
<span id="cb25-20">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb25-21">plt.legend(bbox_to_anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>)</span>
<span id="cb25-22">plt.tight_layout()</span>
<span id="cb25-23">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/etc/00_files/figure-html/cell-17-output-1.png" width="1144" height="949" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="4fcc4885" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 실제 거리와 MDS 거리 비교</span></span>
<span id="cb26-2">mds_city_distances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pairwise_distances(city_mds_result)</span>
<span id="cb26-3"></span>
<span id="cb26-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 거리 상관계수 계산</span></span>
<span id="cb26-5">city_distance_correlation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(</span>
<span id="cb26-6">    distance_matrix.flatten(), </span>
<span id="cb26-7">    mds_city_distances.flatten()</span>
<span id="cb26-8">)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb26-9"></span>
<span id="cb26-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"실제 거리와 MDS 거리의 상관계수: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>city_distance_correlation<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb26-11"></span>
<span id="cb26-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Shepard diagram for city distances</span></span>
<span id="cb26-13">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb26-14">plt.scatter(distance_matrix.flatten(), </span>
<span id="cb26-15">            mds_city_distances.flatten(), </span>
<span id="cb26-16">            alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb26-17">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Original Distances (km)'</span>)</span>
<span id="cb26-18">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Distances'</span>)</span>
<span id="cb26-19">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Shepard Diagram - 도시간 거리 보존 정도'</span>)</span>
<span id="cb26-20">plt.plot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, distance_matrix.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()], </span>
<span id="cb26-21">         [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, distance_matrix.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()], </span>
<span id="cb26-22">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r--'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)</span>
<span id="cb26-23">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb26-24">plt.tight_layout()</span>
<span id="cb26-25">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>실제 거리와 MDS 거리의 상관계수: 0.9970</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/etc/00_files/figure-html/cell-18-output-2.png" width="758" height="566" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="6a960d30" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3차원 MDS 수행</span></span>
<span id="cb28-2">mds_3d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MDS(n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, dissimilarity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'precomputed'</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb28-3">city_mds_3d_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mds_3d.fit_transform(distance_matrix)</span>
<span id="cb28-4"></span>
<span id="cb28-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3D 시각화</span></span>
<span id="cb28-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> mpl_toolkits.mplot3d <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Axes3D</span>
<span id="cb28-7"></span>
<span id="cb28-8">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb28-9">ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">111</span>, projection<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3d'</span>)</span>
<span id="cb28-10"></span>
<span id="cb28-11">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'orange'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'purple'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'brown'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pink'</span>]</span>
<span id="cb28-12"></span>
<span id="cb28-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, city <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(cities):</span>
<span id="cb28-14">    ax.scatter(city_mds_3d_result[i, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], </span>
<span id="cb28-15">               city_mds_3d_result[i, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb28-16">               city_mds_3d_result[i, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb28-17">               c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, </span>
<span id="cb28-18">               label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>city, edgecolors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb28-19">    </span>
<span id="cb28-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 도시 이름 표시</span></span>
<span id="cb28-21">    ax.text(city_mds_3d_result[i, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], </span>
<span id="cb28-22">            city_mds_3d_result[i, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb28-23">            city_mds_3d_result[i, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], </span>
<span id="cb28-24">            city, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bold'</span>)</span>
<span id="cb28-25"></span>
<span id="cb28-26">ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 1'</span>)</span>
<span id="cb28-27">ax.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 2'</span>)</span>
<span id="cb28-28">ax.set_zlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 3'</span>)</span>
<span id="cb28-29">ax.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3차원 MDS 결과 - 도시간 거리'</span>)</span>
<span id="cb28-30">ax.legend(bbox_to_anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>)</span>
<span id="cb28-31">plt.tight_layout()</span>
<span id="cb28-32">plt.show()</span>
<span id="cb28-33"></span>
<span id="cb28-34"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"3차원 MDS Stress 값: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mds_3d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stress_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/etc/00_files/figure-html/cell-19-output-1.png" width="1100" height="950" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>3차원 MDS Stress 값: 1974.2860</code></pre>
</div>
</div>
<div id="2ba3c891" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 차원별 Stress 값 비교</span></span>
<span id="cb30-2">dimensions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb30-3">stress_values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb30-4"></span>
<span id="cb30-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dim <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> dimensions:</span>
<span id="cb30-6">    mds_temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MDS(n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dim, dissimilarity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'precomputed'</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb30-7">    mds_temp.fit(distance_matrix)</span>
<span id="cb30-8">    stress_values.append(mds_temp.stress_)</span>
<span id="cb30-9"></span>
<span id="cb30-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Stress plot (Scree plot)</span></span>
<span id="cb30-11">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb30-12">plt.plot(dimensions, stress_values, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bo-'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb30-13">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'차원 수'</span>)</span>
<span id="cb30-14">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Stress 값'</span>)</span>
<span id="cb30-15">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'차원 수에 따른 Stress 값 변화'</span>)</span>
<span id="cb30-16">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb30-17">plt.xticks(dimensions)</span>
<span id="cb30-18"></span>
<span id="cb30-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 점에 stress 값 표시</span></span>
<span id="cb30-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, stress <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(stress_values):</span>
<span id="cb30-21">    plt.annotate(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>stress<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, </span>
<span id="cb30-22">                (dimensions[i], stress), </span>
<span id="cb30-23">                xytext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), textcoords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'offset points'</span>, </span>
<span id="cb30-24">                ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb30-25"></span>
<span id="cb30-26">plt.tight_layout()</span>
<span id="cb30-27">plt.show()</span>
<span id="cb30-28"></span>
<span id="cb30-29"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"차원별 Stress 값:"</span>)</span>
<span id="cb30-30"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dim, stress <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(dimensions, stress_values):</span>
<span id="cb30-31">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dim<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">차원: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>stress<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/etc/00_files/figure-html/cell-20-output-1.png" width="950" height="565" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>차원별 Stress 값:
1차원: 340937.8571
2차원: 2023.2616
3차원: 1974.2860
4차원: 1980.2935
5차원: 1982.6011</code></pre>
</div>
</div>
</section>
<section id="다양한-mds-변형-기법" class="level2">
<h2 class="anchored" data-anchor-id="다양한-mds-변형-기법">4. 다양한 MDS 변형 기법</h2>
<p>다양한 MDS 알고리즘을 비교해보는 예시입니다.</p>
<div id="f361ef61" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다양한 MDS 알고리즘 비교</span></span>
<span id="cb32-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.manifold <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MDS</span>
<span id="cb32-3"></span>
<span id="cb32-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 연속 데이터를 사용하여 다양한 MDS 알고리즘 비교</span></span>
<span id="cb32-5">algorithms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb32-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Classical MDS'</span>: MDS(metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>),</span>
<span id="cb32-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Non-metric MDS'</span>: MDS(metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>),</span>
<span id="cb32-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS with different init'</span>: MDS(metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, n_init<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb32-9">}</span>
<span id="cb32-10"></span>
<span id="cb32-11">fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb32-12"></span>
<span id="cb32-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> idx, (name, mds_algo) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(algorithms.items()):</span>
<span id="cb32-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># MDS 수행</span></span>
<span id="cb32-15">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mds_algo.fit_transform(continuous_scaled)</span>
<span id="cb32-16">    </span>
<span id="cb32-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 클래스별 색상으로 시각화</span></span>
<span id="cb32-18">    colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>]</span>
<span id="cb32-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>):</span>
<span id="cb32-20">        mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y_true <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> i</span>
<span id="cb32-21">        axes[idx].scatter(result[mask, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], result[mask, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb32-22">                         c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Class </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb32-23">    </span>
<span id="cb32-24">    axes[idx].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 1'</span>)</span>
<span id="cb32-25">    axes[idx].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 2'</span>)</span>
<span id="cb32-26">    axes[idx].set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Stress: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mds_algo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stress_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb32-27">    axes[idx].legend()</span>
<span id="cb32-28">    axes[idx].grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb32-29"></span>
<span id="cb32-30">plt.tight_layout()</span>
<span id="cb32-31">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/etc/00_files/figure-html/cell-21-output-1.png" width="1718" height="564" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="4b1821d5" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 거리 메트릭 비교</span></span>
<span id="cb33-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics.pairwise <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> euclidean_distances, manhattan_distances, cosine_distances</span>
<span id="cb33-3"></span>
<span id="cb33-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다양한 거리 메트릭으로 MDS 수행</span></span>
<span id="cb33-5">distance_metrics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb33-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Euclidean'</span>: euclidean_distances(continuous_scaled),</span>
<span id="cb33-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Manhattan'</span>: manhattan_distances(continuous_scaled),</span>
<span id="cb33-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Cosine'</span>: cosine_distances(continuous_scaled)</span>
<span id="cb33-9">}</span>
<span id="cb33-10"></span>
<span id="cb33-11">fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb33-12"></span>
<span id="cb33-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> idx, (metric_name, dist_matrix) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(distance_metrics.items()):</span>
<span id="cb33-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 거리 행렬을 사용한 MDS</span></span>
<span id="cb33-15">    mds_metric <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MDS(n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, dissimilarity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'precomputed'</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb33-16">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mds_metric.fit_transform(dist_matrix)</span>
<span id="cb33-17">    </span>
<span id="cb33-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 클래스별 색상으로 시각화</span></span>
<span id="cb33-19">    colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>]</span>
<span id="cb33-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>):</span>
<span id="cb33-21">        mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y_true <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> i</span>
<span id="cb33-22">        axes[idx].scatter(result[mask, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], result[mask, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb33-23">                         c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Class </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb33-24">    </span>
<span id="cb33-25">    axes[idx].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 1'</span>)</span>
<span id="cb33-26">    axes[idx].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 2'</span>)</span>
<span id="cb33-27">    axes[idx].set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>metric_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Distance MDS</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Stress: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mds_metric<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stress_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb33-28">    axes[idx].legend()</span>
<span id="cb33-29">    axes[idx].grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb33-30"></span>
<span id="cb33-31">plt.tight_layout()</span>
<span id="cb33-32">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/etc/00_files/figure-html/cell-22-output-1.png" width="1718" height="564" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="mds-결과-해석-및-평가" class="level2">
<h2 class="anchored" data-anchor-id="mds-결과-해석-및-평가">5. MDS 결과 해석 및 평가</h2>
<p>MDS 결과를 해석하고 평가하는 방법들을 소개합니다.</p>
<div id="eac0116c" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Stress 값 해석 기준</span></span>
<span id="cb34-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> interpret_stress(stress_value):</span>
<span id="cb34-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Stress 값을 해석하는 함수"""</span></span>
<span id="cb34-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> stress_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>:</span>
<span id="cb34-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"매우 좋음 (Excellent)"</span></span>
<span id="cb34-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> stress_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>:</span>
<span id="cb34-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"좋음 (Good)"</span></span>
<span id="cb34-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> stress_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>:</span>
<span id="cb34-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"보통 (Fair)"</span></span>
<span id="cb34-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb34-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"나쁨 (Poor)"</span></span>
<span id="cb34-12"></span>
<span id="cb34-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 MDS 결과의 Stress 값 해석</span></span>
<span id="cb34-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=== MDS 결과 평가 ==="</span>)</span>
<span id="cb34-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"연속변수 MDS Stress: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mds<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stress_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interpret_stress(mds.stress_)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb34-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"혼합데이터 MDS Stress: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mds_mixed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stress_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interpret_stress(mds_mixed.stress_)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb34-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Gower 거리 MDS Stress: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mds_gower<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stress_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interpret_stress(mds_gower.stress_)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb34-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"도시 거리 MDS Stress: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mds_distance<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stress_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interpret_stress(mds_distance.stress_)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>=== MDS 결과 평가 ===
연속변수 MDS Stress: 3208.7256 - 나쁨 (Poor)
혼합데이터 MDS Stress: 3843.1912 - 나쁨 (Poor)
Gower 거리 MDS Stress: 70.5540 - 나쁨 (Poor)
도시 거리 MDS Stress: 2023.2616 - 나쁨 (Poor)</code></pre>
</div>
</div>
<div id="9180be12" class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 차원 축소 효과 비교</span></span>
<span id="cb36-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calculate_explained_variance_ratio(original_data, mds_result):</span>
<span id="cb36-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""MDS로 설명되는 분산 비율 계산"""</span></span>
<span id="cb36-4">    original_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.var(original_data, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb36-5">    mds_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.var(mds_result, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb36-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> mds_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> original_var</span>
<span id="cb36-7"></span>
<span id="cb36-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 연속변수 데이터의 분산 설명 비율</span></span>
<span id="cb36-9">explained_ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> calculate_explained_variance_ratio(continuous_scaled, mds_result)</span>
<span id="cb36-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">연속변수 MDS 분산 설명 비율: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>explained_ratio<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>explained_ratio<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%)"</span>)</span>
<span id="cb36-11"></span>
<span id="cb36-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 원본 데이터 차원과 MDS 결과 비교</span></span>
<span id="cb36-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"원본 데이터 차원: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>continuous_scaled<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">차원"</span>)</span>
<span id="cb36-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"MDS 결과 차원: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mds_result<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">차원"</span>)</span>
<span id="cb36-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"차원 축소율: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mds_result.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>continuous_scaled.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.1f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
연속변수 MDS 분산 설명 비율: 0.9358 (93.58%)
원본 데이터 차원: 5차원
MDS 결과 차원: 2차원
차원 축소율: 60.0%</code></pre>
</div>
</div>
<div id="11367870" class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># MDS vs PCA 비교</span></span>
<span id="cb38-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.decomposition <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PCA</span>
<span id="cb38-3"></span>
<span id="cb38-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PCA 수행</span></span>
<span id="cb38-5">pca <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PCA(n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb38-6">pca_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pca.fit_transform(continuous_scaled)</span>
<span id="cb38-7"></span>
<span id="cb38-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 비교 시각화</span></span>
<span id="cb38-9">fig, (ax1, ax2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb38-10"></span>
<span id="cb38-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># MDS 결과</span></span>
<span id="cb38-12">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>]</span>
<span id="cb38-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>):</span>
<span id="cb38-14">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y_true <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> i</span>
<span id="cb38-15">    ax1.scatter(mds_result[mask, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], mds_result[mask, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb38-16">                c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Class </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb38-17"></span>
<span id="cb38-18">ax1.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 1'</span>)</span>
<span id="cb38-19">ax1.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MDS Dimension 2'</span>)</span>
<span id="cb38-20">ax1.set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'MDS 결과</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Stress: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mds<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stress_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb38-21">ax1.legend()</span>
<span id="cb38-22">ax1.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb38-23"></span>
<span id="cb38-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PCA 결과</span></span>
<span id="cb38-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>):</span>
<span id="cb38-26">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y_true <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> i</span>
<span id="cb38-27">    ax2.scatter(pca_result[mask, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], pca_result[mask, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb38-28">                c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Class </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb38-29"></span>
<span id="cb38-30">ax2.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PC1'</span>)</span>
<span id="cb38-31">ax2.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PC2'</span>)</span>
<span id="cb38-32">ax2.set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'PCA 결과</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">설명분산비율: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pca<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>explained_variance_ratio_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb38-33">ax2.legend()</span>
<span id="cb38-34">ax2.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb38-35"></span>
<span id="cb38-36">plt.tight_layout()</span>
<span id="cb38-37">plt.show()</span>
<span id="cb38-38"></span>
<span id="cb38-39"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"PCA 설명 분산 비율: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pca<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>explained_variance_ratio_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pca<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>explained_variance_ratio_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%)"</span>)</span>
<span id="cb38-40"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"각 주성분별 설명 분산 비율: PC1=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pca<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>explained_variance_ratio_[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, PC2=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pca<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>explained_variance_ratio_[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/etc/00_files/figure-html/cell-25-output-1.png" width="1526" height="564" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>PCA 설명 분산 비율: 0.5028 (50.28%)
각 주성분별 설명 분산 비율: PC1=0.2727, PC2=0.2301</code></pre>
</div>
</div>
</section>
<section id="결론" class="level2">
<h2 class="anchored" data-anchor-id="결론">결론</h2>
<p>다차원 척도법(MDS)은 다양한 유형의 데이터에 적용할 수 있는 강력한 차원 축소 기법입니다:</p>
<section id="주요-특징" class="level3">
<h3 class="anchored" data-anchor-id="주요-특징">주요 특징:</h3>
<ol type="1">
<li><strong>거리 보존</strong>: 원본 데이터의 거리 관계를 저차원에서 최대한 보존</li>
<li><strong>유연성</strong>: 연속변수, 명목변수, 거리 행렬 등 다양한 데이터 타입 지원</li>
<li><strong>직관적 해석</strong>: 2D/3D 시각화를 통한 직관적인 데이터 이해</li>
</ol>
</section>
<section id="적용-사례" class="level3">
<h3 class="anchored" data-anchor-id="적용-사례">적용 사례:</h3>
<ol type="1">
<li><strong>연속변수</strong>: 표준화 후 직접 적용</li>
<li><strong>혼합 데이터</strong>: 원핫 인코딩 또는 Gower 거리 사용</li>
<li><strong>거리 행렬</strong>: 미리 계산된 거리 정보 활용</li>
</ol>
</section>
<section id="평가-지표" class="level3">
<h3 class="anchored" data-anchor-id="평가-지표">평가 지표:</h3>
<ul>
<li><strong>Stress 값</strong>: 낮을수록 좋음 (&lt; 0.1이 권장)</li>
<li><strong>거리 상관계수</strong>: 원본과 MDS 거리의 상관관계</li>
<li><strong>Shepard diagram</strong>: 거리 보존 정도 시각화</li>
</ul>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률 통계</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/etc/00.html</guid>
  <pubDate>Sat, 12 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>외생 변수 추가하기</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/07.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div id="84deb8a6" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> statsmodels.api <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sm</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-6"></span>
<span id="cb1-7">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font.family'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Noto Sans KR'</span></span>
<span id="cb1-8"></span>
<span id="cb1-9">macro_econ_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sm.datasets.macrodata.load_pandas().data</span>
<span id="cb1-10">macro_econ_data</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">year</th>
<th data-quarto-table-cell-role="th">quarter</th>
<th data-quarto-table-cell-role="th">realgdp</th>
<th data-quarto-table-cell-role="th">realcons</th>
<th data-quarto-table-cell-role="th">realinv</th>
<th data-quarto-table-cell-role="th">realgovt</th>
<th data-quarto-table-cell-role="th">realdpi</th>
<th data-quarto-table-cell-role="th">cpi</th>
<th data-quarto-table-cell-role="th">m1</th>
<th data-quarto-table-cell-role="th">tbilrate</th>
<th data-quarto-table-cell-role="th">unemp</th>
<th data-quarto-table-cell-role="th">pop</th>
<th data-quarto-table-cell-role="th">infl</th>
<th data-quarto-table-cell-role="th">realint</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>1959.0</td>
<td>1.0</td>
<td>2710.349</td>
<td>1707.4</td>
<td>286.898</td>
<td>470.045</td>
<td>1886.9</td>
<td>28.980</td>
<td>139.7</td>
<td>2.82</td>
<td>5.8</td>
<td>177.146</td>
<td>0.00</td>
<td>0.00</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>1959.0</td>
<td>2.0</td>
<td>2778.801</td>
<td>1733.7</td>
<td>310.859</td>
<td>481.301</td>
<td>1919.7</td>
<td>29.150</td>
<td>141.7</td>
<td>3.08</td>
<td>5.1</td>
<td>177.830</td>
<td>2.34</td>
<td>0.74</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>1959.0</td>
<td>3.0</td>
<td>2775.488</td>
<td>1751.8</td>
<td>289.226</td>
<td>491.260</td>
<td>1916.4</td>
<td>29.350</td>
<td>140.5</td>
<td>3.82</td>
<td>5.3</td>
<td>178.657</td>
<td>2.74</td>
<td>1.09</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>1959.0</td>
<td>4.0</td>
<td>2785.204</td>
<td>1753.7</td>
<td>299.356</td>
<td>484.052</td>
<td>1931.3</td>
<td>29.370</td>
<td>140.0</td>
<td>4.33</td>
<td>5.6</td>
<td>179.386</td>
<td>0.27</td>
<td>4.06</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>1960.0</td>
<td>1.0</td>
<td>2847.699</td>
<td>1770.5</td>
<td>331.722</td>
<td>462.199</td>
<td>1955.5</td>
<td>29.540</td>
<td>139.6</td>
<td>3.50</td>
<td>5.2</td>
<td>180.007</td>
<td>2.31</td>
<td>1.19</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">198</td>
<td>2008.0</td>
<td>3.0</td>
<td>13324.600</td>
<td>9267.7</td>
<td>1990.693</td>
<td>991.551</td>
<td>9838.3</td>
<td>216.889</td>
<td>1474.7</td>
<td>1.17</td>
<td>6.0</td>
<td>305.270</td>
<td>-3.16</td>
<td>4.33</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">199</td>
<td>2008.0</td>
<td>4.0</td>
<td>13141.920</td>
<td>9195.3</td>
<td>1857.661</td>
<td>1007.273</td>
<td>9920.4</td>
<td>212.174</td>
<td>1576.5</td>
<td>0.12</td>
<td>6.9</td>
<td>305.952</td>
<td>-8.79</td>
<td>8.91</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">200</td>
<td>2009.0</td>
<td>1.0</td>
<td>12925.410</td>
<td>9209.2</td>
<td>1558.494</td>
<td>996.287</td>
<td>9926.4</td>
<td>212.671</td>
<td>1592.8</td>
<td>0.22</td>
<td>8.1</td>
<td>306.547</td>
<td>0.94</td>
<td>-0.71</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">201</td>
<td>2009.0</td>
<td>2.0</td>
<td>12901.504</td>
<td>9189.0</td>
<td>1456.678</td>
<td>1023.528</td>
<td>10077.5</td>
<td>214.469</td>
<td>1653.6</td>
<td>0.18</td>
<td>9.2</td>
<td>307.226</td>
<td>3.37</td>
<td>-3.19</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">202</td>
<td>2009.0</td>
<td>3.0</td>
<td>12990.341</td>
<td>9256.0</td>
<td>1486.398</td>
<td>1044.088</td>
<td>10040.6</td>
<td>216.385</td>
<td>1673.9</td>
<td>0.12</td>
<td>9.6</td>
<td>308.013</td>
<td>3.56</td>
<td>-3.44</td>
</tr>
</tbody>
</table>

<p>203 rows × 14 columns</p>
</div>
</div>
</div>
<div id="1994673a" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> macro_econ_data[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'realgdp'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'realcons'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'realinv'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'realgovt'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'realdpi'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpi'</span>]]</span>
<span id="cb2-2">target.plot(subplots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>), layout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb2-3">plt.xticks(np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">208</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>), np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1959</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2010</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb2-4">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/07_files/figure-html/cell-3-output-1.png" width="809" height="633" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>이 다음 부분은 오류인거 같음. 다른 책 보자.</li>
</ul>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률 통계</category>
  <category>시계열 분석</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/07.html</guid>
  <pubDate>Fri, 11 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>계절성 고려</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/06.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="sarima-모델" class="level2">
<h2 class="anchored" data-anchor-id="sarima-모델">SARIMA 모델</h2>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?SARIMA(p,%20d,%20q)(P,%20D,%20Q)_m"> 형태로 표현</li>
<li><img src="https://latex.codecogs.com/png.latex?m">: 계절성 주기</li>
<li><img src="https://latex.codecogs.com/png.latex?P,%20D,%20Q">: 계절성 AR, 차분, MA 차수</li>
</ul>
<div id="bc42b824" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-5"></span>
<span id="cb1-6">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font.family'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Noto Sans KR'</span></span>
<span id="cb1-7"></span>
<span id="cb1-8">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/air.csv'</span>)</span></code></pre></div>
</div>
<div id="7284ce41" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.tsa.seasonal <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> STL</span>
<span id="cb2-2"></span>
<span id="cb2-3">decomposition <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> STL(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Passengers'</span>], period<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>).fit()</span></code></pre></div>
</div>
<div id="a83f52df" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.tsa.stattools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> adfuller</span>
<span id="cb3-2"></span>
<span id="cb3-3">df_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.diff(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Passengers'</span>], n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-4"></span>
<span id="cb3-5">ADF_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfuller(df_diff)</span>
<span id="cb3-6">ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="37">
<pre><code>(-2.8292668241700025, 0.05421329028382508)</code></pre>
</div>
</div>
<div id="ee167ae9" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">df_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.diff(df_diff, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb5-2"></span>
<span id="cb5-3">ADF_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfuller(df_diff)</span>
<span id="cb5-4">ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="38">
<pre><code>(-17.624862360208343, 3.823046855816035e-30)</code></pre>
</div>
</div>
<div id="cfb7c33f" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Union</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.tsa.statespace.sarimax <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SARIMAX</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> optimize_SARIMA(endog: Union[pd.Series, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>], order_list: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>, d: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, D: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pd.DataFrame:</span>
<span id="cb7-5">    results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb7-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> order <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> order_list:</span>
<span id="cb7-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb7-8">            model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SARIMAX(endog, </span>
<span id="cb7-9">                            order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(order[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], d, order[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]), </span>
<span id="cb7-10">                            seasonal_order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(order[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], D, order[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], s),</span>
<span id="cb7-11">                            simple_differencing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>).fit(disp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb7-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span>:</span>
<span id="cb7-13">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb7-14">        aic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.aic</span>
<span id="cb7-15">        results.append([order, aic])</span>
<span id="cb7-16">    result_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(results)</span>
<span id="cb7-17">    result_df.columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'(p, q, P, Q)'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'AIC'</span>]</span>
<span id="cb7-18">    result_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> result_df.sort_values(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AIC"</span>).reset_index(drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-19"></span>
<span id="cb7-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result_df</span></code></pre></div>
</div>
<div id="ec034d5c" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> itertools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> product</span>
<span id="cb8-2"></span>
<span id="cb8-3">train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.iloc[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Passengers'</span>]</span>
<span id="cb8-4">test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.iloc[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>:]</span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  ps = range(0, 4, 1)</span></span>
<span id="cb8-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  qs = range(0, 4, 1)</span></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  Ps = range(0, 4, 1)</span></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  Qs = range(0, 4, 1)</span></span>
<span id="cb8-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  SARIMA_order_list = list(product(ps, qs, Ps, Qs))</span></span>
<span id="cb8-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span></span>
<span id="cb8-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span></span>
<span id="cb8-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  d = 1</span></span>
<span id="cb8-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  D = 1</span></span>
<span id="cb8-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  s = 12</span></span>
<span id="cb8-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  SARIMA_result_df = optimize_SARIMA(train, SARIMA_order_list, d, D, s)</span></span>
<span id="cb8-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  SARIMA_result_df</span></span></code></pre></div>
</div>
<div id="825f1f34" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">SARIMA_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SARIMAX(train, order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), seasonal_order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>), simple_differencing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb9-2">SARIMA_model_fit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SARIMA_model.fit(disp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb9-3"></span>
<span id="cb9-4">SARIMA_model_fit.plot_diagnostics(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb9-5">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/06_files/figure-html/cell-8-output-1.png" width="806" height="673" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="e758f944" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.stats.diagnostic <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> acorr_ljungbox</span>
<span id="cb10-2"></span>
<span id="cb10-3">tr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> acorr_ljungbox(SARIMA_model_fit.resid, np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>))</span>
<span id="cb10-4">tr</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="42">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">lb_stat</th>
<th data-quarto-table-cell-role="th">lb_pvalue</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">1</td>
<td>0.004785</td>
<td>0.944850</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2</td>
<td>0.745422</td>
<td>0.688864</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">3</td>
<td>1.021040</td>
<td>0.796161</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">4</td>
<td>1.226086</td>
<td>0.873785</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">5</td>
<td>1.436408</td>
<td>0.920290</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">6</td>
<td>1.711782</td>
<td>0.944208</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">7</td>
<td>2.307234</td>
<td>0.940900</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">8</td>
<td>2.717276</td>
<td>0.950829</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">9</td>
<td>2.733486</td>
<td>0.973931</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">10</td>
<td>4.969176</td>
<td>0.893228</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="3b74ea29" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">SARIMA_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SARIMA_model_fit.get_prediction(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">132</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">143</span>).predicted_mean</span>
<span id="cb11-2"></span>
<span id="cb11-3">test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SARIMA_pred'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SARIMA_pred</span>
<span id="cb11-4"></span>
<span id="cb11-5">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df.index, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Passengers'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'실제 값'</span>)</span>
<span id="cb11-6">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test.index, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SARIMA_pred'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SARIMA 예측값'</span>)</span>
<span id="cb11-7">plt.xticks(np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">145</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>), np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1949</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1962</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb11-8">plt.xlim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">143</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/06_files/figure-html/cell-10-output-1.png" width="590" height="430" class="figure-img"></p>
</figure>
</div>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률 통계</category>
  <category>시계열 분석</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/06.html</guid>
  <pubDate>Fri, 11 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/00.pdf</link>
  <description><![CDATA[ undefined ]]></description>
  <category>자격증</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/00.pdf</guid>
  <pubDate>Fri, 11 Jul 2025 10:37:27 GMT</pubDate>
</item>
<item>
  <title>복잡한 시계열 모델</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/05.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div id="ef521d9f" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.tsa.arima_process <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ArmaProcess</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-6"></span>
<span id="cb1-7">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font.family'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Noto Sans KR'</span></span>
<span id="cb1-8"></span>
<span id="cb1-9">ar1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.33</span>])</span>
<span id="cb1-10">ma1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>])</span>
<span id="cb1-11"></span>
<span id="cb1-12">ARMA_1_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ArmaProcess(ar1, ma1).generate_sample(nsample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span></code></pre></div>
</div>
<div id="4c87d91a" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.tsa.stattools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> adfuller</span>
<span id="cb2-2"></span>
<span id="cb2-3">ADF_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfuller(ARMA_1_1)</span>
<span id="cb2-4"></span>
<span id="cb2-5">ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>(-7.656346674014989, 1.7349289952389427e-11)</code></pre>
</div>
</div>
<div id="8f55bada" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.graphics.tsaplots <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plot_acf, plot_pacf</span>
<span id="cb4-2"></span>
<span id="cb4-3">plot_acf(ARMA_1_1, lags<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb4-4">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/05_files/figure-html/cell-4-output-1.png" width="583" height="432" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>ARMA(1, 1) 모델인데 지연이 2.</li>
<li>ACF로는 차수를 추론할 수 없음.</li>
</ul>
<div id="43f2c2fa" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">plot_pacf(ARMA_1_1, lags<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb5-2">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/05_files/figure-html/cell-5-output-1.png" width="583" height="432" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>마찬가지로 차수를 추론할 수 없음.</li>
</ul>
<section id="일반적-모델링-절차" class="level2">
<h2 class="anchored" data-anchor-id="일반적-모델링-절차">일반적 모델링 절차</h2>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?AIC%20=%202k%20-%202ln(%5Chat%7BL%7D)"></li>
<li>k = p + q</li>
<li>L = max(likelihood)</li>
</ul>
<div id="73a3e2e2" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> itertools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> product</span>
<span id="cb6-2"></span>
<span id="cb6-3">ps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-4">qs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-5"></span>
<span id="cb6-6">order_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(product(ps, qs))</span></code></pre></div>
</div>
<div id="b748c778" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Union</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.tsa.statespace.sarimax <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SARIMAX</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> optimize_ARMA(endog: Union[pd.Series, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>], order_list: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pd.DataFrame:</span>
<span id="cb7-5">    results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb7-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> order <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> order_list:</span>
<span id="cb7-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb7-8">            model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SARIMAX(endog, order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(order[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, order[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]), simple_differencing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>).fit(disp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb7-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span>:</span>
<span id="cb7-10">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb7-11">        aic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.aic</span>
<span id="cb7-12">        results.append([order, aic])</span>
<span id="cb7-13">    result_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(results)</span>
<span id="cb7-14">    result_df.columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'(p, q)'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'AIC'</span>]</span>
<span id="cb7-15">    result_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> result_df.sort_values(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AIC"</span>).reset_index(drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-16"></span>
<span id="cb7-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result_df</span>
<span id="cb7-18"></span>
<span id="cb7-19">result_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> optimize_ARMA(ARMA_1_1, order_list)</span>
<span id="cb7-20">result_df</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/home/cryscham123/.local/lib/python3.12/site-packages/statsmodels/base/model.py:607: ConvergenceWarning:

Maximum Likelihood optimization failed to converge. Check mle_retvals
</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="6">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">(p, q)</th>
<th data-quarto-table-cell-role="th">AIC</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>(1, 2)</td>
<td>2880.745326</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>(2, 2)</td>
<td>2881.184850</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>(2, 1)</td>
<td>2881.215973</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>(0, 3)</td>
<td>2881.552804</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>(0, 2)</td>
<td>2881.934005</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>(1, 1)</td>
<td>2882.021239</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>(1, 3)</td>
<td>2882.411069</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>(3, 1)</td>
<td>2882.880564</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>(2, 3)</td>
<td>2883.178911</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>(3, 3)</td>
<td>2884.999545</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>(3, 2)</td>
<td>2885.215581</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>(0, 1)</td>
<td>2998.204843</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">12</td>
<td>(3, 0)</td>
<td>3059.234951</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">13</td>
<td>(2, 0)</td>
<td>3135.429791</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">14</td>
<td>(1, 0)</td>
<td>3326.498642</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">15</td>
<td>(0, 0)</td>
<td>3894.252408</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<section id="잔차-분석" class="level3">
<h3 class="anchored" data-anchor-id="잔차-분석">잔차 분석</h3>
<div id="ad922785" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SARIMAX(ARMA_1_1, order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), simple_differencing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb9-2">model_fit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit(disp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb9-3"></span>
<span id="cb9-4">model_fit.plot_diagnostics(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb9-5">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/05_files/figure-html/cell-8-output-1.png" width="955" height="673" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="f24ed876" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.stats.diagnostic <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> acorr_ljungbox</span>
<span id="cb10-2"></span>
<span id="cb10-3">tr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> acorr_ljungbox(model_fit.resid, np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>))</span>
<span id="cb10-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tr)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     lb_stat  lb_pvalue
1   0.289153   0.590764
2   2.289623   0.318284
3   2.291207   0.514207
4   2.963817   0.563899
5   3.571527   0.612593
6   3.938499   0.684999
7   5.248137   0.629711
8   7.642936   0.469103
9   8.139031   0.520198
10  8.329570   0.596679</code></pre>
</div>
</div>
</section>
</section>
<section id="예시---대역폭-사용량-예측" class="level2">
<h2 class="anchored" data-anchor-id="예시---대역폭-사용량-예측">예시 - 대역폭 사용량 예측</h2>
<div id="6d9cd719" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/bandwidth.csv'</span>)</span>
<span id="cb12-2">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df.index, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hourly_bandwidth'</span>)</span>
<span id="cb12-3"></span>
<span id="cb12-4">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'시간'</span>)</span>
<span id="cb12-5">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'시간당 대역폭 사용량(MBps)'</span>)</span>
<span id="cb12-6">plt.xticks(</span>
<span id="cb12-7">    np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">730</span>), </span>
<span id="cb12-8">    [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Jan'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Feb'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mar'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Apr'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'May'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Jun'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Jul'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Aug'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sep'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Oct'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Nov'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Dec'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Feb'</span>])</span>
<span id="cb12-9">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/05_files/figure-html/cell-10-output-1.png" width="598" height="434" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="dff2db6a" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">ADF_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfuller(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hourly_bandwidth'</span>])</span>
<span id="cb13-2"></span>
<span id="cb13-3">ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>(-0.8714653199452845, 0.7972240255014515)</code></pre>
</div>
</div>
<div id="a0ac94c2" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">bandwidth_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.diff(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hourly_bandwidth'</span>], n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb15-2"></span>
<span id="cb15-3">ADF_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfuller(bandwidth_diff)</span>
<span id="cb15-4"></span>
<span id="cb15-5">ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>(-20.694853863789028, 0.0)</code></pre>
</div>
</div>
<div id="24ea4779" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">df_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bandwidth_diff'</span>: bandwidth_diff})</span>
<span id="cb17-2">train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_diff.iloc[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">168</span>]</span>
<span id="cb17-3">test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_diff.iloc[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">168</span>:]</span></code></pre></div>
</div>
<div id="f532852f" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">ps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb18-2">qs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb18-3">order_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(product(ps, qs))</span>
<span id="cb18-4">result_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> optimize_ARMA(train[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bandwidth_diff'</span>], order_list)</span>
<span id="cb18-5">result_df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">(p, q)</th>
<th data-quarto-table-cell-role="th">AIC</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>(3, 2)</td>
<td>27991.063879</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>(2, 3)</td>
<td>27991.287509</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>(2, 2)</td>
<td>27991.603598</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>(3, 3)</td>
<td>27993.416924</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>(1, 3)</td>
<td>28003.349550</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>(1, 2)</td>
<td>28051.351401</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>(3, 1)</td>
<td>28071.155496</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>(3, 0)</td>
<td>28095.618186</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>(2, 1)</td>
<td>28097.250766</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>(2, 0)</td>
<td>28098.407664</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>(1, 1)</td>
<td>28172.510044</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>(1, 0)</td>
<td>28941.056983</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">12</td>
<td>(0, 3)</td>
<td>31355.802141</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">13</td>
<td>(0, 2)</td>
<td>33531.179284</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">14</td>
<td>(0, 1)</td>
<td>39402.269523</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">15</td>
<td>(0, 0)</td>
<td>49035.184224</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="b66907b6" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SARIMAX(train[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bandwidth_diff'</span>], order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), simple_differencing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb19-2">model_fit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit(disp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb19-3">model_fit.plot_diagnostics(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/05_files/figure-html/cell-15-output-1.png" width="955" height="673" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/05_files/figure-html/cell-15-output-2.png" width="955" height="673" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="124b0bc8" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">acorr_ljungbox(model_fit.resid, np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">lb_stat</th>
<th data-quarto-table-cell-role="th">lb_pvalue</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">1</td>
<td>0.042190</td>
<td>0.837257</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2</td>
<td>0.418364</td>
<td>0.811247</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">3</td>
<td>0.520271</td>
<td>0.914416</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">4</td>
<td>0.850554</td>
<td>0.931545</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">5</td>
<td>0.850841</td>
<td>0.973678</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">6</td>
<td>1.111754</td>
<td>0.981019</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">7</td>
<td>2.124864</td>
<td>0.952607</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">8</td>
<td>3.230558</td>
<td>0.919067</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">9</td>
<td>3.248662</td>
<td>0.953615</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">10</td>
<td>3.588289</td>
<td>0.964015</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="007b25df" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> rolling_forecast(df: pd.DataFrame, train_len: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, horizon: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, window: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, method: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>:</span>
<span id="cb21-2">    total_len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> horizon</span>
<span id="cb21-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> method <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>:</span>
<span id="cb21-4">        pred_mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb21-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(train_len, total_len, window):</span>
<span id="cb21-6">            mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(df[:i].values)</span>
<span id="cb21-7">            pred_mean.extend(mean <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(window))</span>
<span id="cb21-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pred_mean</span>
<span id="cb21-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> method <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'last'</span>:</span>
<span id="cb21-10">        pred_last_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb21-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(train_len, total_len, window):</span>
<span id="cb21-12">            last_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.iloc[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].values[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb21-13">            pred_last_value.extend(last_value <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(window))</span>
<span id="cb21-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pred_last_value</span>
<span id="cb21-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> method <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ARMA'</span>:</span>
<span id="cb21-16">        pred_MA <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb21-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(train_len, total_len, window):</span>
<span id="cb21-18">            model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SARIMAX(df[:i], order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb21-19">            res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit(disp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb21-20">            predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> res.get_prediction(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> window <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb21-21">            oos_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions.predicted_mean.iloc[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window:]</span>
<span id="cb21-22">            pred_MA.extend(oos_pred)</span>
<span id="cb21-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pred_MA</span>
<span id="cb21-24"></span>
<span id="cb21-25">pred_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test.copy()</span>
<span id="cb21-26">TRAIN_LEN <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(train)</span>
<span id="cb21-27">HORIZON <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(test)</span>
<span id="cb21-28">WINDOW <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb21-29"></span>
<span id="cb21-30">pred_mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rolling_forecast(df_diff, TRAIN_LEN, HORIZON, WINDOW, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>)</span>
<span id="cb21-31">pred_last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rolling_forecast(df_diff, TRAIN_LEN, HORIZON, WINDOW, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'last'</span>)</span>
<span id="cb21-32">pred_ARMA <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rolling_forecast(df_diff, TRAIN_LEN, HORIZON, WINDOW, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ARMA'</span>)</span>
<span id="cb21-33"></span>
<span id="cb21-34">pred_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_mean'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_mean</span>
<span id="cb21-35">pred_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_last'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_last</span>
<span id="cb21-36">pred_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_ARMA'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_ARMA</span>
<span id="cb21-37"></span>
<span id="cb21-38">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_df.index, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bandwidth_diff'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'실제값'</span>)</span>
<span id="cb21-39">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_df.index, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_mean'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'평균 예측'</span>)</span>
<span id="cb21-40">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_df.index, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_last'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'마지막 값 예측'</span>)</span>
<span id="cb21-41">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pred_df.index, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_ARMA'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ARMA(2, 2) 예측'</span>)</span>
<span id="cb21-42">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'시간'</span>)</span>
<span id="cb21-43">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'시간당 대역폭 사용량(MBps)'</span>)</span>
<span id="cb21-44">plt.xticks(</span>
<span id="cb21-45">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9802</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9850</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9898</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9946</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9994</span>],</span>
<span id="cb21-46">    [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020-02-13'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020-02-15'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020-02-17'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020-02-19'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020-02-21'</span>])</span>
<span id="cb21-47">plt.xlim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9999</span>)</span>
<span id="cb21-48">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/05_files/figure-html/cell-17-output-1.png" width="605" height="430" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="5ac9268e" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> mean_squared_error, mean_absolute_error</span>
<span id="cb22-2"></span>
<span id="cb22-3">mse_mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean_squared_error(pred_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bandwidth_diff'</span>], pred_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_mean'</span>])</span>
<span id="cb22-4">mse_last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean_squared_error(pred_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bandwidth_diff'</span>], pred_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_last'</span>])</span>
<span id="cb22-5">mse_ARMA <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean_squared_error(pred_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bandwidth_diff'</span>], pred_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_ARMA'</span>])</span>
<span id="cb22-6">mse_mean, mse_last, mse_ARMA</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<pre><code>(6.306526957989325, 2.2297582947733656, 1.7690462113874967)</code></pre>
</div>
</div>
<section id="역변환" class="level3">
<h3 class="anchored" data-anchor-id="역변환">역변환</h3>
<div id="19218ab7" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_bandwidth'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Series()</span>
<span id="cb24-2">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_bandwidth'</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9832</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hourly_bandwidth'</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9832</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pred_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_ARMA'</span>].cumsum()</span>
<span id="cb24-3"></span>
<span id="cb24-4">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df.index, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hourly_bandwidth'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'실제 값'</span>)</span>
<span id="cb24-5">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df.index, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_bandwidth'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ARMA(2, 2) 예측'</span>)</span>
<span id="cb24-6">plt.xticks(</span>
<span id="cb24-7">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9802</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9850</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9898</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9946</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9994</span>],</span>
<span id="cb24-8">    [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020-02-13'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020-02-15'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020-02-17'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020-02-19'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020-02-21'</span>])</span>
<span id="cb24-9">plt.xlim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9999</span>)</span>
<span id="cb24-10">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/05_files/figure-html/cell-19-output-1.png" width="619" height="434" class="figure-img"></p>
</figure>
</div>
</div>
</div>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률 통계</category>
  <category>시계열 분석</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/05.html</guid>
  <pubDate>Thu, 10 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>자기귀모형</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/04.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<ul>
<li>자기회귀과정: 예측값이 이전 값에만 선형적으로 의존한다고 가정</li>
</ul>
<div id="c523bb8d" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-5"></span>
<span id="cb1-6">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font.family'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Noto Sans KR'</span></span>
<span id="cb1-7"></span>
<span id="cb1-8">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/foot.csv'</span>)</span></code></pre></div>
</div>
<div id="fbf9c67a" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.tsa.stattools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> adfuller</span>
<span id="cb2-2"></span>
<span id="cb2-3">ADF_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfuller(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'foot_traffic'</span>])</span>
<span id="cb2-4">ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>(-1.1758885999240625, 0.6838808917896241)</code></pre>
</div>
</div>
<ul>
<li>비 정상성 발견. 차분 진행</li>
</ul>
<div id="042862ba" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">foot_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.diff(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'foot_traffic'</span>], n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-2"></span>
<span id="cb4-3">ADF_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfuller(foot_diff)</span>
<span id="cb4-4">ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>(-5.268231347422049, 6.369317654781143e-06)</code></pre>
</div>
</div>
<div id="a546ebcf" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.graphics.tsaplots <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plot_acf</span>
<span id="cb6-2"></span>
<span id="cb6-3">plot_acf(foot_diff, lags<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb6-4">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/04_files/figure-html/cell-5-output-1.png" width="583" height="432" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="0052474d" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.tsa.arima_process <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ArmaProcess</span>
<span id="cb7-2"></span>
<span id="cb7-3">ma2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb7-4">ar2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.33</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.50</span>])</span>
<span id="cb7-5">AR2_process <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ArmaProcess(ar2, ma2).generate_sample(nsample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span></code></pre></div>
</div>
<div id="238b5927" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.graphics.tsaplots <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plot_pacf</span>
<span id="cb8-2"></span>
<span id="cb8-3">plot_pacf(AR2_process, lags<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb8-4">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/04_files/figure-html/cell-7-output-1.png" width="583" height="432" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="881e91b0" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">plot_pacf(foot_diff, lags<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb9-2">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/04_files/figure-html/cell-8-output-1.png" width="583" height="432" class="figure-img"></p>
</figure>
</div>
</div>
</div>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률 통계</category>
  <category>시계열 분석</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/04.html</guid>
  <pubDate>Thu, 10 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>이동평균과정 모델링</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/03.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<ul>
<li>이동편균 모델: 현잿 값이 현재와 과거 오차에 선형적으로 비례한다.</li>
</ul>
<div id="d5e02d14" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-5"></span>
<span id="cb1-6">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font.family'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Noto Sans KR'</span></span>
<span id="cb1-7"></span>
<span id="cb1-8">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/widget.csv'</span>)</span>
<span id="cb1-9">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df.index, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'widget_sales'</span>)</span>
<span id="cb1-10">plt.xticks(</span>
<span id="cb1-11">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">87</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">116</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">145</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">175</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">204</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">234</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">264</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">293</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">323</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">352</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">382</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">409</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">439</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">468</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">498</span>], </span>
<span id="cb1-12">    [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Jan 2019'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Feb'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mar'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Apr'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'May'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Jun'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Jul'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Aug'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sep'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Oct'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Nov'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Dec'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Jan 2020'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Feb'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mar'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Apr'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'May'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Jun'</span>])</span>
<span id="cb1-13">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/03_files/figure-html/cell-2-output-1.png" width="583" height="430" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="f610159a" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.tsa.stattools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> adfuller</span>
<span id="cb2-2"></span>
<span id="cb2-3">ADF_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfuller(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'widget_sales'</span>])</span>
<span id="cb2-4"></span>
<span id="cb2-5">ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>(-1.5121662069359054, 0.5274845352272601)</code></pre>
</div>
</div>
<ul>
<li>정상 시계열이 아님. 차분 진행</li>
</ul>
<div id="54e29262" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">diff_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.diff(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'widget_sales'</span>], n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-2"></span>
<span id="cb4-3">ADF_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfuller(diff_df)</span>
<span id="cb4-4">ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], ADF_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>(-10.576657780341959, 7.076922818587193e-19)</code></pre>
</div>
</div>
<div id="6ad03d2b" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.graphics.tsaplots <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plot_acf</span>
<span id="cb6-2"></span>
<span id="cb6-3">plot_acf(diff_df, lags<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb6-4">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/03_files/figure-html/cell-5-output-1.png" width="583" height="432" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>지연 2 이후 유의하지 않음.</li>
<li>MA(2) 진행</li>
</ul>
<div id="2568c04d" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb7-2"></span>
<span id="cb7-3">diff_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'widget_sales_diff'</span>: diff_df})</span>
<span id="cb7-4">train, test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(diff_df, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span></code></pre></div>
</div>
<ul>
<li>MA(q)는 q 크기까지만 예측 가능.</li>
<li>회귀적으로 예측을 진행해야함</li>
</ul>
<div id="9566490a" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.tsa.statespace.sarimax <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SARIMAX</span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> rolling_forecast(df: pd.DataFrame, train_len: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, horizon: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, window: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, method: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>:</span>
<span id="cb8-4">    total_len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> horizon</span>
<span id="cb8-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> method <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>:</span>
<span id="cb8-6">        pred_mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb8-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(train_len, total_len, window):</span>
<span id="cb8-8">            mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(df[:i].values)</span>
<span id="cb8-9">            pred_mean.extend(mean <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(window))</span>
<span id="cb8-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pred_mean</span>
<span id="cb8-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> method <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'last'</span>:</span>
<span id="cb8-12">        pred_last_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb8-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(train_len, total_len, window):</span>
<span id="cb8-14">            last_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.iloc[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].values[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb8-15">            pred_last_value.extend(last_value <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(window))</span>
<span id="cb8-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pred_last_value</span>
<span id="cb8-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> method <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MA'</span>:</span>
<span id="cb8-18">        pred_MA <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb8-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(train_len, total_len, window):</span>
<span id="cb8-20">            model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SARIMAX(df[:i], order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb8-21">            res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit(disp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb8-22">            predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> res.get_prediction(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> window <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb8-23">            oos_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predictions.predicted_mean.iloc[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>window:]</span>
<span id="cb8-24">            pred_MA.extend(oos_pred)</span>
<span id="cb8-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pred_MA</span></code></pre></div>
</div>
<div id="14201aa4" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">pred_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test.copy()</span>
<span id="cb9-2">TRAIN_LEN <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(train)</span>
<span id="cb9-3">HORIZON <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(test)</span>
<span id="cb9-4">WINDOW <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb9-5"></span>
<span id="cb9-6">pred_mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rolling_forecast(diff_df, TRAIN_LEN, HORIZON, WINDOW, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>)</span>
<span id="cb9-7">pred_last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rolling_forecast(diff_df, TRAIN_LEN, HORIZON, WINDOW, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'last'</span>)</span>
<span id="cb9-8">pred_MA <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rolling_forecast(diff_df, TRAIN_LEN, HORIZON, WINDOW, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MA'</span>)</span>
<span id="cb9-9"></span>
<span id="cb9-10">pred_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_mean'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_mean</span>
<span id="cb9-11">pred_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_last'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_last</span>
<span id="cb9-12">pred_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_MA'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_MA</span></code></pre></div>
</div>
<div id="a41a7b9a" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_widget_sales'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Series()</span>
<span id="cb10-2">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_widget_sales'</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'widget_sales'</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pred_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_MA'</span>].cumsum()</span></code></pre></div>
</div>
<div id="33259bb3" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df.index, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'widget_sales'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'실제 값'</span>)</span>
<span id="cb11-2">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df.index, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_widget_sales'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MA(2)'</span>)</span>
<span id="cb11-3">plt.xticks(</span>
<span id="cb11-4">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">409</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">439</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">468</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">498</span>], </span>
<span id="cb11-5">    [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mar'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Apr'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'May'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Jun'</span>])</span>
<span id="cb11-6">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/03_files/figure-html/cell-10-output-1.png" width="583" height="430" class="figure-img"></p>
</figure>
</div>
</div>
</div>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률 통계</category>
  <category>시계열 분석</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/03.html</guid>
  <pubDate>Thu, 10 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>확률보행</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/02.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="what-is-확률보행" class="level2">
<h2 class="anchored" data-anchor-id="what-is-확률보행">what is 확률보행</h2>
<ul>
<li><code>확률보행</code>: 무작위로 상승 또는 하락이 발생할 확률이 동일한 프로세스
<ul>
<li><img src="https://latex.codecogs.com/png.latex?y_t%20=%20C%20+%20y_%7Bt-1%7D%20+%20%CF%B5_t"></li>
<li>C가 0이 아닌 경우 표류가 있는 확률보행</li>
</ul></li>
</ul>
<div id="ad1058b8" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-4"></span>
<span id="cb1-5">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font.family'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Noto Sans KR'</span></span>
<span id="cb1-6"></span>
<span id="cb1-7">steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.standard_normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb1-8">steps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-9">random_walk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.cumsum(steps)</span>
<span id="cb1-10">sns.lineplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.arange(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(random_walk)), y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>random_walk)</span>
<span id="cb1-11">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'시간'</span>)</span>
<span id="cb1-12">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'값'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="35">
<pre><code>Text(0, 0.5, '값')</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/02_files/figure-html/cell-2-output-2.png" width="590" height="430" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="확률보행-식별" class="level2">
<h2 class="anchored" data-anchor-id="확률보행-식별">확률보행 식별</h2>
<ul>
<li>확률보행은 <code>정상적</code>이고 <code>자기상관관계가 없는 시계열</code>로 나타난다.</li>
</ul>
<section id="정상성" class="level3">
<h3 class="anchored" data-anchor-id="정상성">정상성</h3>
<ul>
<li>시간이 지나도 통계적 특성이 변하지 않는 시계열
<ul>
<li>평균과 분산이 상수이고 자기상관관계가 있으며, 이러한 특성들이 시간에 따라 변하지 않는다.</li>
</ul></li>
<li>정상화:
<ul>
<li>평균: 차분</li>
<li>분산: 로그 변환, Box-Cox 변환 등</li>
</ul></li>
<li>정상성 검정:
<ul>
<li>ADF (Augmented Dickey-Fuller) 테스트
<ul>
<li><img src="https://latex.codecogs.com/png.latex?H_0">: 시계열에 단위근<sup>1</sup>이 존재하여 비정상적이다.</li>
<li><img src="https://latex.codecogs.com/png.latex?H_1">: 시계열에 단위근이 존재하지 않아 정상적이다.</li>
</ul></li>
</ul></li>
</ul>
<div id="fa6a622e" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.tsa.stattools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> adfuller</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> simulate_process(alpha: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> np.array:</span>
<span id="cb3-5">    process <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.empty(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">401</span>)</span>
<span id="cb3-6">    process[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>):</span>
<span id="cb3-8">        process[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> alpha <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> process[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.standard_normal()</span>
<span id="cb3-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> process</span>
<span id="cb3-10"></span>
<span id="cb3-11">stationary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> simulate_process(alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb3-12">non_stationary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> simulate_process(alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-13"></span>
<span id="cb3-14">sns.lineplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.arange(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(stationary)), y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>stationary, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'정상성 프로세스'</span>)</span>
<span id="cb3-15">sns.lineplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.arange(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(non_stationary)), y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>non_stationary, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'비정상성 프로세스'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/02_files/figure-html/cell-3-output-1.png" width="572" height="415" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="e83bbb23" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> mean_var_over_time(process: np.array) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> np.array:</span>
<span id="cb4-2">    means <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vars</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(process)):</span>
<span id="cb4-5">        means.append(np.mean(process[:i]))</span>
<span id="cb4-6">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vars</span>.append(np.var(process[:i]))</span>
<span id="cb4-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> means, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vars</span></span>
<span id="cb4-8"></span>
<span id="cb4-9">means_stationary, vars_stationary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean_var_over_time(stationary)</span>
<span id="cb4-10">means_non_stationary, vars_non_stationary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean_var_over_time(non_stationary)</span>
<span id="cb4-11"></span>
<span id="cb4-12">sns.lineplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.arange(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(means_stationary)), y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>means_stationary, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'정상성 평균'</span>)</span>
<span id="cb4-13">sns.lineplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.arange(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(means_non_stationary)), y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>means_non_stationary, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'비정상성 평균'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/02_files/figure-html/cell-4-output-1.png" width="583" height="412" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="11a3d38d" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">sns.lineplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.arange(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(vars_stationary)), y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vars_stationary, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'정상성 분산'</span>)</span>
<span id="cb5-2">sns.lineplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.arange(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(vars_non_stationary)), y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vars_non_stationary, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'비정상성 분산'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/02_files/figure-html/cell-5-output-1.png" width="564" height="412" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="757a5cb0" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">result1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfuller(stationary)</span>
<span id="cb6-2">result2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfuller(non_stationary)</span>
<span id="cb6-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'ADF Statistic: 정상성: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>result1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, 비정상성: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>result2[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb6-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'p-value: 정상성: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>result1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, 비정상성: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>result2[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ADF Statistic: 정상성: -10.182654946345801, 비정상성: -2.2791893442991604
p-value: 정상성: 6.632269182398948e-18, 비정상성: 0.17876768439598817</code></pre>
</div>
</div>
</section>
<section id="자기상관관계" class="level3">
<h3 class="anchored" data-anchor-id="자기상관관계">자기상관관계</h3>
<ul>
<li>자기 상관관계: 시계열의 선행값과 후행값 아이의 선형관계
<ul>
<li>x: 지연 (<img src="https://latex.codecogs.com/png.latex?y_t,%20y_%7Bt-2%7D">의 경우 지연 2)</li>
<li>y: 계수</li>
</ul></li>
<li>추세가 있는 경우: 짧은 지연에서 계수가 높고, 지연이 커질수록 계수가 낮아지는 경향</li>
<li>계절성이 있는 경우: 주기적인 패턴이 나타남.</li>
</ul>
<div id="d3648072" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.graphics.tsaplots <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plot_acf</span>
<span id="cb8-2"></span>
<span id="cb8-3">plot_acf(non_stationary, lags<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="40">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/02_files/figure-html/cell-7-output-1.png" width="583" height="432" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/02_files/figure-html/cell-7-output-2.png" width="583" height="432" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>비정상적 시계열에서 추세가 보인다. 차분을 진행해보자.</li>
</ul>
<div id="95126a88" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.diff(non_stationary, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb9-2"></span>
<span id="cb9-3">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfuller(diff)</span>
<span id="cb9-4">result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="41">
<pre><code>(-19.871934314399926, 0.0)</code></pre>
</div>
</div>
<div id="80dbb7be" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">plot_acf(diff, lags<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="42">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/02_files/figure-html/cell-9-output-1.png" width="583" height="432" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/02_files/figure-html/cell-9-output-2.png" width="583" height="432" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="예시" class="level2">
<h2 class="anchored" data-anchor-id="예시">예시</h2>
<div id="9b70c5e3" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb12-2"></span>
<span id="cb12-3">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/googl.csv'</span>)</span>
<span id="cb12-4">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Date'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Close'</span>)</span>
<span id="cb12-5"></span>
<span id="cb12-6">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'날짜'</span>)</span>
<span id="cb12-7">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'종가'</span>)</span>
<span id="cb12-8"></span>
<span id="cb12-9">plt.xticks([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">46</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">68</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">89</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">110</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">132</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">152</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">174</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">193</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">212</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">235</span>],</span>
<span id="cb12-10">           [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'May'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Jun'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Jul'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Aug'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sep'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Oct'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Nov'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Dec'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Jan'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Feb'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mar'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Apr'</span>],</span>
<span id="cb12-11">           rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>)</span>
<span id="cb12-12">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/02_files/figure-html/cell-10-output-1.png" width="598" height="444" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="0a6d651d" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfuller(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Close'</span>])</span>
<span id="cb13-2"></span>
<span id="cb13-3">result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="44">
<pre><code>(0.16025048664771407, 0.9699419435913058)</code></pre>
</div>
</div>
<div id="417fe7e1" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.diff(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Close'</span>], n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb15-2"></span>
<span id="cb15-3">result_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfuller(diff)</span>
<span id="cb15-4">result_diff[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], result_diff[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="45">
<pre><code>(-5.303439704295227, 5.386530961454778e-06)</code></pre>
</div>
</div>
<div id="733884c2" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">plot_acf(diff, lags<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="46">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/02_files/figure-html/cell-13-output-1.png" width="583" height="432" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/02_files/figure-html/cell-13-output-2.png" width="583" height="432" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="확류보행-예측" class="level2">
<h2 class="anchored" data-anchor-id="확류보행-예측">확류보행 예측</h2>
<div id="ed517e6e" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value'</span>: random_walk})</span>
<span id="cb18-2">train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.iloc[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>]</span>
<span id="cb18-3">test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>:]</span>
<span id="cb18-4"></span>
<span id="cb18-5">mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(train[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value'</span>])</span>
<span id="cb18-6">test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_mean'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean</span>
<span id="cb18-7"></span>
<span id="cb18-8">last_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train.iloc[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value'</span>]</span>
<span id="cb18-9">test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_last'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> last_value</span></code></pre></div>
</div>
<section id="표류-기법" class="level3">
<h3 class="anchored" data-anchor-id="표류-기법">표류 기법</h3>
<div id="22d75af6" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">drift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (train.iloc[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> train.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value'</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(train) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb19-2">drift</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="48">
<pre><code>-0.0073114182124709975</code></pre>
</div>
</div>
<div id="aa1d2d30" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">x_vals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">801</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1001</span>)</span>
<span id="cb21-2">pred_drift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> drift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x_vals</span>
<span id="cb21-3">test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_drift'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_drift</span>
<span id="cb21-4">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df.index, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value'</span>)</span>
<span id="cb21-5">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test.index, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_mean'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'평균 예측'</span>)</span>
<span id="cb21-6">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test.index, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_last'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'마지막 값 예측'</span>)</span>
<span id="cb21-7">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test.index, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_drift'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'표류 예측'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/02_files/figure-html/cell-16-output-1.png" width="590" height="430" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="e7f01675" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> mean_squared_error</span>
<span id="cb22-2"></span>
<span id="cb22-3">mse_mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean_squared_error(test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value'</span>], test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_mean'</span>])</span>
<span id="cb22-4">mse_last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean_squared_error(test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value'</span>], test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_last'</span>])</span>
<span id="cb22-5">mse_drift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean_squared_error(test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value'</span>], test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_drift'</span>])</span>
<span id="cb22-6"></span>
<span id="cb22-7">sns.barplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'평균'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'마지막 값'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'표류'</span>], y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[mse_mean, mse_last, mse_drift])</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/02_files/figure-html/cell-17-output-1.png" width="572" height="412" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="단순-예측법" class="level3">
<h3 class="anchored" data-anchor-id="단순-예측법">단순 예측법</h3>
<div id="069530f1" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">df_shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.shift(periods<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb23-2">mse_one_step <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean_squared_error(test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value'</span>], df_shift[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value'</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>:])</span>
<span id="cb23-3">mse_one_step</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="51">
<pre><code>1.0373151143278658</code></pre>
</div>
</div>


</section>
</section>


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a><div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">각주</h2>

<ol>
<li id="fn1"><p><img src="https://latex.codecogs.com/png.latex?y_t%20=%20C%20+%20%CE%B1y_%7Bt-1%7D%20+%20%CF%B5_t"> 형태의 시계열로, α가 1보다 작은 경우, 과거의 값이 현재 값에 미치는 영향이 작아져 시계열이 정상적이다.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>확률 통계</category>
  <category>시계열 분석</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/02.html</guid>
  <pubDate>Tue, 08 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>단순 미래 예측</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/01.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="베이스라인-모델-정의" class="level2">
<h2 class="anchored" data-anchor-id="베이스라인-모델-정의">베이스라인 모델 정의</h2>
<ul>
<li>단순예측법: 최근의 자료가 미래에 대한 최선의 추정치 <img src="https://latex.codecogs.com/png.latex?%5Chat%7Bp_%7Bt+1%7D%7D%20=%20p_t"></li>
<li>추세분석: 전기와 현기 사이의 추세를 다음 기의 판매예측에 반영하는 방법. <img src="https://latex.codecogs.com/png.latex?%5Chat%7Bp_%7Bt+1%7D%7D%20=%20p_t%20+%20p_t%20-%20p_%7Bt-1%7D"></li>
<li>단순 이동평균법: time window를 계속 이동하면서 평균 구하는거
<ul>
<li>time window ↑: 먼 과거까지 보겠다</li>
</ul></li>
<li>가중 이동평균법: 가중치를 다르게 부여</li>
</ul>
<section id="all-평균-추세" class="level3">
<h3 class="anchored" data-anchor-id="all-평균-추세">all 평균 (추세)</h3>
<div id="8a1c0c83" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-5"></span>
<span id="cb1-6">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font.family'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Noto Sans KR'</span></span>
<span id="cb1-7">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/jj.csv'</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9">train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb1-10">test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:]</span>
<span id="cb1-11"></span>
<span id="cb1-12">historical_mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(train[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>])</span>
<span id="cb1-13">historical_mean</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="53">
<pre><code>4.308499987499999</code></pre>
</div>
</div>
<div id="daf8cb01" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_mean'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> historical_mean</span></code></pre></div>
</div>
<div id="d3a8ddc1" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> mape(y_true, y_pred):</span>
<span id="cb4-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> np.mean(np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(y_true <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y_pred) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> y_true) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb4-3"></span>
<span id="cb4-4">mape_hist_mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mape(test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>], test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_mean'</span>])</span>
<span id="cb4-5">mape_hist_mean</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="55">
<pre><code>70.00752579965119</code></pre>
</div>
</div>
<div id="45240439" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'훈련'</span>)</span>
<span id="cb6-2">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'테스트'</span>)</span>
<span id="cb6-3">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_mean'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'단순 예측'</span>)</span>
<span id="cb6-4">plt.xticks(np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>), np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1960</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1981</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="56">
<pre><code>([&lt;matplotlib.axis.XTick at 0x7d6386b6cc50&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6386b6c3e0&gt;,
  &lt;matplotlib.axis.XTick at 0x7d63871faa50&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6384124b90&gt;,
  &lt;matplotlib.axis.XTick at 0x7d63841262a0&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6384125610&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6384126b40&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6384127fb0&gt;,
  &lt;matplotlib.axis.XTick at 0x7d63841245f0&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6384124f80&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6384127170&gt;],
 [Text(0, 0, '1960'),
  Text(8, 0, '1962'),
  Text(16, 0, '1964'),
  Text(24, 0, '1966'),
  Text(32, 0, '1968'),
  Text(40, 0, '1970'),
  Text(48, 0, '1972'),
  Text(56, 0, '1974'),
  Text(64, 0, '1976'),
  Text(72, 0, '1978'),
  Text(80, 0, '1980')])</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/01_files/figure-html/cell-5-output-2.png" width="583" height="430" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="최근만-평균-추세" class="level3">
<h3 class="anchored" data-anchor-id="최근만-평균-추세">최근만 평균 (추세)</h3>
<div id="eff49d97" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">last_year_mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(train.iloc[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>])</span>
<span id="cb8-2">test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_last_yr_mean'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> last_year_mean</span>
<span id="cb8-3">mape_last_year_mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mape(test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>], test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_last_yr_mean'</span>])</span>
<span id="cb8-4">mape_last_year_mean</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="57">
<pre><code>15.5963680725103</code></pre>
</div>
</div>
<div id="c8275b72" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'훈련'</span>)</span>
<span id="cb10-2">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'테스트'</span>)</span>
<span id="cb10-3">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_last_yr_mean'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'최근 예측'</span>)</span>
<span id="cb10-4">plt.xticks(np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>), np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1960</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1981</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="58">
<pre><code>([&lt;matplotlib.axis.XTick at 0x7d6384149a60&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6386b6ee10&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6384147d40&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6386ba21e0&gt;,
  &lt;matplotlib.axis.XTick at 0x7d63d5ec6930&gt;,
  &lt;matplotlib.axis.XTick at 0x7d63d5ec7b00&gt;,
  &lt;matplotlib.axis.XTick at 0x7d63d5ec4620&gt;,
  &lt;matplotlib.axis.XTick at 0x7d63d5ec45f0&gt;,
  &lt;matplotlib.axis.XTick at 0x7d63d5ec7770&gt;,
  &lt;matplotlib.axis.XTick at 0x7d63d5ec7380&gt;,
  &lt;matplotlib.axis.XTick at 0x7d63d5ec59d0&gt;],
 [Text(0, 0, '1960'),
  Text(8, 0, '1962'),
  Text(16, 0, '1964'),
  Text(24, 0, '1966'),
  Text(32, 0, '1968'),
  Text(40, 0, '1970'),
  Text(48, 0, '1972'),
  Text(56, 0, '1974'),
  Text(64, 0, '1976'),
  Text(72, 0, '1978'),
  Text(80, 0, '1980')])</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/01_files/figure-html/cell-7-output-2.png" width="583" height="430" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="단순-예측법" class="level3">
<h3 class="anchored" data-anchor-id="단순-예측법">단순 예측법</h3>
<div id="bde243c3" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train.iloc[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>]</span>
<span id="cb12-2">test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_last'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> last</span>
<span id="cb12-3">mape_last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mape(test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>], test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_last'</span>])</span>
<span id="cb12-4">mape_last</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="59">
<pre><code>30.457277908606535</code></pre>
</div>
</div>
<div id="6897fd8e" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'훈련'</span>)</span>
<span id="cb14-2">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'테스트'</span>)</span>
<span id="cb14-3">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_last'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'단순 예측'</span>)</span>
<span id="cb14-4">plt.xticks(np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>), np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1960</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1981</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="60">
<pre><code>([&lt;matplotlib.axis.XTick at 0x7d6385e82030&gt;,
  &lt;matplotlib.axis.XTick at 0x7d638413a810&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6385e8f140&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6386ba1ca0&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6385ed0500&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6385ed2ff0&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6385ed0ec0&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6385ed1c10&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6385ceca40&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6385ed3710&gt;,
  &lt;matplotlib.axis.XTick at 0x7d6385ced160&gt;],
 [Text(0, 0, '1960'),
  Text(8, 0, '1962'),
  Text(16, 0, '1964'),
  Text(24, 0, '1966'),
  Text(32, 0, '1968'),
  Text(40, 0, '1970'),
  Text(48, 0, '1972'),
  Text(56, 0, '1974'),
  Text(64, 0, '1976'),
  Text(72, 0, '1978'),
  Text(80, 0, '1980')])</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/01_files/figure-html/cell-9-output-2.png" width="583" height="430" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="계절적-예측" class="level3">
<h3 class="anchored" data-anchor-id="계절적-예측">계절적 예측</h3>
<div id="100847ba" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_last_season'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train.iloc[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>].values</span>
<span id="cb16-2">mape_naive_seasonal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mape(test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>], test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pred_last_season'</span>])</span>
<span id="cb16-3">mape_naive_seasonal</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="61">
<pre><code>11.561658552433654</code></pre>
</div>
</div>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률 통계</category>
  <category>시계열 분석</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/01.html</guid>
  <pubDate>Tue, 08 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Overview</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/00.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="시계열-소개" class="level2">
<h2 class="anchored" data-anchor-id="시계열-소개">시계열 소개</h2>
<ul>
<li>시계열은 단순히 시간에 따라 정렬된 데이터 요소들의 집합이다.</li>
<li><code>분해</code>: 시계열을 서로 다른 여러 <code>구성요소</code>로 분리하는 통계적 작업</li>
</ul>
<section id="구성-요소" class="level3">
<h3 class="anchored" data-anchor-id="구성-요소">구성 요소</h3>
<ul>
<li><code>추세</code>(level)
<ul>
<li>순환?</li>
</ul></li>
<li><code>계절성</code>: 추세에서 벗어나는 변화의 정도</li>
<li><code>잔차</code>(white noise)</li>
</ul>
</section>
</section>
<section id="시계열-vs-회귀" class="level2">
<h2 class="anchored" data-anchor-id="시계열-vs-회귀">시계열 vs 회귀</h2>
<ul>
<li>시계열은 <code>순서</code>가 존재</li>
<li>다른 특징 없이 시계열 정보만 있는 경우도 존재
<ul>
<li>이동평균 모델</li>
<li>자기회귀 모델</li>
</ul></li>
</ul>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률 통계</category>
  <category>시계열 분석</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/time_series/00.html</guid>
  <pubDate>Tue, 08 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>MCMC</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/18.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div id="509ce532" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gamma, poisson</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> empiricaldist <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Pmf</span>
<span id="cb1-4"></span>
<span id="cb1-5">alpha <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.4</span></span>
<span id="cb1-6">dist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gamma(alpha)</span>
<span id="cb1-7"></span>
<span id="cb1-8">lams <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>)</span>
<span id="cb1-9">prior_pmf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pmf(dist.pdf(lams), lams)</span>
<span id="cb1-10">prior_pmf.normalize()</span>
<span id="cb1-11"></span>
<span id="cb1-12">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb1-13">likelihood <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> poisson.pmf(data, lams)</span>
<span id="cb1-14">posterior <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prior_pmf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> likelihood</span>
<span id="cb1-15">posterior.normalize()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>0.05015532557804499</code></pre>
</div>
</div>
<div id="9b9deaa7" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">sample_prior <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dist.rvs(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb3-2">sample_prior</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>array([1.78245428, 1.45342136, 1.56617409, 2.26968618, 2.48739122,
       2.04947673, 0.42657469, 1.59840941, 1.61450781, 1.04473805,
       1.38766769, 1.29342865, 0.10011362, 2.84676252, 2.0907023 ,
       0.501516  , 1.75463547, 0.75424778, 2.35723675, 0.20373931,
       1.12665252, 0.3603877 , 0.40185481, 0.14502238, 2.16084403,
       1.33073581, 2.12610331, 0.47025327, 1.47340163, 4.3584236 ,
       3.93169673, 1.61656859, 0.32971242, 0.71269559, 1.80662831,
       1.18335286, 1.46886129, 0.19924373, 1.42013889, 1.16160252,
       3.44516481, 3.50632314, 0.31767409, 0.10326678, 3.80793668,
       1.68673128, 2.42240728, 1.10211366, 0.85346076, 0.60510763,
       0.78364214, 1.01700125, 0.25109979, 1.45602232, 2.53275259,
       0.67428257, 2.13179357, 0.15602002, 2.40751205, 0.00900921,
       1.09614156, 1.1789723 , 4.50074634, 2.28033616, 1.20313575,
       2.03917054, 0.60637777, 1.00250621, 1.08680873, 1.26979198,
       1.60454441, 0.70143311, 0.20483807, 1.38220482, 0.66860397,
       1.97347913, 0.85348215, 1.61166464, 0.5694026 , 0.77472185,
       2.2469975 , 2.59749612, 1.32358443, 1.3492898 , 0.39975522,
       1.77195451, 0.1514805 , 2.74518891, 1.70943013, 1.06480265,
       0.15751771, 2.42403873, 0.93600165, 0.37081925, 4.95480763,
       4.50244729, 0.99897033, 1.75701265, 0.63303305, 0.75107271,
       1.21914169, 0.56481277, 0.20323012, 4.8281205 , 0.05825477,
       0.8180459 , 0.39507497, 0.39567062, 1.70882689, 1.22333205,
       1.25106454, 1.09135668, 0.59421816, 3.10792611, 1.94096089,
       1.33699676, 3.24004141, 0.20338037, 0.77345422, 0.01109566,
       0.28726445, 0.5188063 , 0.32004225, 0.56189764, 0.78222717,
       0.86536462, 0.75354692, 0.36003061, 2.55631833, 5.37122246,
       1.41387676, 1.31543492, 1.01074796, 3.87677072, 0.5995094 ,
       1.20237366, 1.57964719, 0.58273492, 4.03528673, 1.4019504 ,
       0.97618193, 0.15539856, 4.15005826, 1.06660502, 0.7626793 ,
       1.72684506, 0.0450794 , 0.74543249, 0.09050903, 1.34800622,
       2.92492755, 2.42968827, 2.60138038, 2.90331673, 0.89979192,
       1.19012654, 2.53193949, 2.52008528, 1.11941151, 1.85726849,
       2.76141794, 0.46461223, 2.49662685, 2.35624678, 1.86963077,
       2.41364535, 0.30807995, 1.4061337 , 0.27264207, 2.44446813,
       2.24204357, 2.01689348, 1.12378139, 0.69105913, 0.92202871,
       2.93724754, 0.17141724, 0.60518804, 0.53125454, 1.03206292,
       0.47439733, 1.75277398, 0.23028169, 0.8280134 , 1.93138644,
       2.81545321, 1.56380812, 0.18527356, 0.0984316 , 1.99172578,
       0.81991126, 0.4790343 , 1.90666511, 4.16125993, 0.15915635,
       0.25560981, 0.77757414, 1.02994745, 0.7296187 , 2.77953051,
       0.45302316, 2.61951237, 0.82442108, 2.51345799, 0.28933755,
       0.30471831, 0.63519023, 4.19278344, 0.63981378, 1.50199748,
       1.53171353, 0.05193196, 0.23522131, 1.19337516, 0.62119419,
       0.67090562, 4.87535766, 0.12746862, 1.66727365, 0.61737015,
       0.96103356, 0.63758575, 1.58182367, 1.78805179, 0.14303181,
       0.90088986, 2.41355835, 2.88119186, 3.62656613, 0.57027875,
       0.10181002, 2.55424918, 1.17669901, 5.10656878, 0.60856925,
       2.37935349, 0.97901042, 1.04362086, 1.72180322, 0.56624396,
       3.19632108, 0.50092852, 1.61691302, 0.91491038, 1.57061131,
       0.52779649, 1.22280998, 2.5266366 , 0.86564415, 2.48023759,
       4.8845416 , 0.89407679, 1.22596699, 0.75404211, 0.16527154,
       0.76870535, 1.99984975, 0.90019864, 0.13392852, 0.16678515,
       3.25003003, 0.62330084, 3.52010987, 0.60159782, 3.11350541,
       1.44583984, 0.65523014, 2.8895766 , 0.21520675, 0.66540019,
       1.29101126, 3.48560161, 1.58849289, 0.35755348, 0.87234375,
       0.57700548, 0.30313153, 2.42159878, 2.26150262, 0.3824956 ,
       2.97441566, 0.130601  , 1.1687748 , 0.22204499, 0.11365245,
       0.14389429, 1.01204286, 2.34458005, 1.15306329, 0.22943553,
       1.75475892, 0.85484513, 1.95672875, 1.64233556, 1.43204869,
       0.65810987, 1.11893247, 0.42048471, 1.67412056, 1.72722623,
       2.14945311, 0.41395448, 0.74699141, 0.52283731, 2.56181903,
       0.6571291 , 1.08812639, 0.92454495, 1.84451687, 0.5554823 ,
       0.61896596, 0.30390847, 1.06271335, 0.19606563, 1.52173132,
       0.85162107, 1.12267304, 1.35894119, 0.85057098, 0.90606912,
       1.50407866, 0.40416076, 0.63258919, 1.83349409, 3.07069563,
       3.13453365, 3.36162901, 0.91476133, 2.4607268 , 1.37933747,
       1.41308005, 1.40098989, 0.09314009, 1.15655232, 1.35956324,
       0.9562359 , 4.25017262, 1.58582269, 0.88988051, 0.66225242,
       3.1478352 , 0.1912415 , 0.43079422, 1.60481873, 3.48793288,
       3.29679857, 1.42527886, 0.14327117, 1.78002169, 1.60884479,
       1.34999623, 0.41873708, 1.06218268, 3.00648362, 1.35459038,
       0.62904508, 0.68680944, 0.8259365 , 0.43216401, 0.06517087,
       0.76928278, 0.29646467, 0.47003658, 0.49210669, 2.21807655,
       0.8815014 , 1.82491166, 0.38739385, 1.11630756, 2.47541734,
       3.31111865, 3.00380241, 2.0328079 , 0.77396742, 0.62406382,
       1.70915789, 1.16173553, 0.29018906, 2.8465662 , 2.12208868,
       1.23529682, 0.23832301, 0.74280795, 0.42489782, 0.83071628,
       0.10585368, 0.88082506, 1.1422167 , 0.45012877, 0.96804109,
       0.69669037, 1.75769205, 1.79921145, 1.0469775 , 1.27638059,
       1.44456316, 3.18230869, 0.31115153, 2.90534957, 1.09384762,
       0.73737181, 0.73153375, 0.80130282, 0.93084067, 2.82910308,
       2.11995971, 3.48271261, 1.2508142 , 0.77078057, 0.27005484,
       2.30816112, 1.48304143, 2.3197458 , 2.87177339, 0.37235907,
       0.08439045, 1.80168299, 1.27580988, 0.1376812 , 0.72410959,
       1.2551965 , 0.52931964, 1.18787009, 0.42532437, 0.7374523 ,
       0.82102856, 0.82465968, 1.43241383, 1.57478286, 0.98243462,
       1.41672022, 2.12126751, 0.51028047, 0.264361  , 0.17359669,
       3.49280959, 0.28799884, 1.93231242, 0.20307447, 0.67579587,
       0.32516326, 0.66475116, 0.16775069, 1.49053435, 0.48362181,
       1.88346664, 0.7367098 , 1.28901807, 0.41609368, 2.81952939,
       1.92616636, 0.3233559 , 0.43425742, 1.20022375, 1.37352912,
       1.81814333, 0.71787827, 0.20092714, 1.37301219, 1.96938137,
       0.22785241, 1.92048134, 1.11241357, 1.40346287, 2.21565625,
       0.70134262, 0.36980475, 0.88515598, 0.39391247, 2.41861256,
       1.42008427, 0.25944955, 0.98063703, 1.3591506 , 1.06245797,
       2.18967405, 1.14497289, 2.41920052, 1.22700078, 2.14015952,
       3.50280141, 0.32285136, 0.12346727, 0.8337781 , 0.13989125,
       1.66263551, 0.39415498, 2.78120238, 0.24714151, 0.66741164,
       0.32704671, 1.83887574, 4.45999199, 0.7774285 , 0.41141288,
       2.02693585, 0.05295953, 1.66546587, 0.32911593, 0.30873302,
       1.2914885 , 0.14691859, 2.12207068, 0.51315365, 0.80032371,
       2.34913407, 3.4095474 , 0.33763934, 1.22953585, 0.23075278,
       0.7374652 , 0.91715679, 0.39236151, 1.58367854, 0.95839352,
       3.06733169, 0.91288509, 0.19102102, 0.11115259, 3.11374855,
       1.30481605, 0.74220086, 0.77310277, 0.30451101, 1.30518641,
       2.30149429, 0.35855988, 0.89185888, 0.37207391, 1.77390799,
       3.5280598 , 1.96202531, 1.91611586, 0.23112386, 2.80806439,
       0.10056925, 0.11788967, 0.66522683, 2.87382961, 0.68619677,
       2.17313528, 0.9558771 , 1.17700941, 0.94207278, 1.53238011,
       0.99653946, 0.85299825, 0.7120591 , 1.94878342, 0.60649798,
       0.18151201, 0.72210506, 0.90348217, 1.88356921, 0.06351328,
       2.9767626 , 0.59317537, 1.80871685, 0.11252428, 1.13556851,
       0.95026968, 0.58921063, 1.08746956, 0.37980344, 2.12101607,
       1.59854286, 0.12085816, 0.22008041, 1.64744616, 3.37383142,
       2.64912841, 1.68066142, 1.78559911, 3.76130028, 3.00240492,
       0.13001163, 0.04030774, 1.40844236, 0.55993878, 0.19412716,
       0.87202483, 1.25664671, 1.19941488, 7.17456765, 2.52034946,
       1.04923498, 1.0045098 , 1.39849648, 1.06626886, 1.81495584,
       0.22072722, 0.42678823, 0.17427896, 0.31374976, 0.94881118,
       0.11695164, 0.23673133, 0.54695901, 0.5640094 , 1.31881685,
       3.02020657, 0.73039081, 3.26285507, 0.47588791, 1.14561038,
       3.08471669, 1.79722984, 0.71204969, 1.14314614, 0.33993976,
       0.69468141, 1.13031585, 0.20245588, 0.06412572, 0.7679586 ,
       1.08179364, 1.74875858, 0.13766512, 1.02392835, 1.29577827,
       0.09105422, 0.17627404, 1.4013938 , 0.92428193, 1.964099  ,
       0.48575707, 0.22956195, 2.34847801, 1.47081282, 0.05469313,
       6.37212418, 1.58318943, 0.6007103 , 0.24392092, 1.54535754,
       5.88259622, 0.58528123, 0.40431939, 0.20934691, 0.83563943,
       2.18714582, 0.17075649, 0.68424449, 1.29319222, 0.7661801 ,
       0.36229985, 3.38192096, 1.21570705, 0.75593531, 0.72948589,
       0.29429465, 0.24672329, 0.24379611, 5.02651607, 2.94806746,
       2.21708485, 0.4614484 , 1.71470044, 0.51920825, 3.94565173,
       0.708636  , 0.57923338, 2.96705406, 0.2944275 , 1.25637226,
       1.22096943, 0.18290153, 1.77017348, 1.63520181, 1.75808304,
       0.73410077, 5.82731507, 1.52510495, 0.03736303, 0.24150383,
       0.82206031, 0.26913806, 2.28554287, 1.45268443, 0.21564075,
       2.18622272, 0.08782493, 0.54652373, 0.69412775, 1.6556548 ,
       0.27665459, 0.70821905, 1.30150644, 0.53504482, 2.24914298,
       3.48785426, 0.82334135, 0.67226148, 0.54208502, 0.84640797,
       1.11280929, 1.21401206, 1.62551353, 0.20391175, 0.07203695,
       0.04048055, 2.90846273, 0.3421185 , 2.13861689, 5.09107539,
       1.40477632, 1.12705544, 1.71155139, 0.44224997, 0.06196968,
       0.17224229, 0.71676445, 0.86271074, 0.43271951, 1.24696646,
       0.14112179, 2.08775182, 0.79544149, 1.6654211 , 2.12324338,
       2.81877089, 1.25563189, 3.48923833, 0.1365598 , 0.39880259,
       0.20177009, 0.48194506, 1.52881059, 2.32429724, 1.66280629,
       1.83099818, 1.74067556, 3.30083543, 1.8308614 , 1.1145482 ,
       3.32710777, 0.66102754, 1.50616104, 2.36224778, 3.02144457,
       8.86162098, 2.27128422, 1.92403156, 4.45066817, 2.56433866,
       0.21695367, 1.2403261 , 2.52689656, 5.2685631 , 1.84526002,
       0.98541833, 1.15096267, 1.03645475, 0.81933851, 0.3934846 ,
       1.21499941, 1.60832082, 3.18128774, 2.1095381 , 3.8934185 ,
       1.79109006, 1.3959264 , 0.38306127, 1.32617665, 0.08432029,
       2.0966402 , 1.8667662 , 3.3558948 , 0.14799817, 2.14552212,
       1.25160298, 0.91576209, 1.1691564 , 2.29722509, 0.6127987 ,
       4.17148409, 0.85662604, 2.57904496, 2.9415721 , 0.21121228,
       1.09210864, 1.78375426, 2.79602724, 1.05356592, 3.57150381,
       3.26658441, 0.29256895, 1.18776403, 0.87495308, 2.00343635,
       2.06267891, 2.31240083, 5.67768676, 1.90715169, 0.81179953,
       0.86165212, 1.6245984 , 3.67096281, 2.10937595, 1.30683289,
       0.48036824, 3.39090841, 4.63791219, 4.19824051, 2.71398943,
       0.86266062, 0.1049414 , 0.47116751, 1.87292779, 1.40398141,
       3.44842299, 2.04297218, 1.23114444, 0.38680855, 2.4343798 ,
       0.24587911, 1.0012706 , 1.50570632, 2.06932207, 0.68841968,
       0.48475363, 0.2370504 , 1.85823636, 0.99650605, 0.18724216,
       0.31248844, 0.51720466, 1.36847445, 4.38848338, 0.40028451,
       0.57817147, 2.33715831, 0.19275902, 1.14346875, 1.30225192,
       0.78136161, 0.29358472, 1.98502703, 0.51967865, 0.28196284,
       0.88626531, 0.33166157, 2.06054915, 0.25269865, 1.33403699,
       0.0607662 , 0.26593347, 2.59447086, 1.50757733, 0.31869501,
       1.90951547, 1.18127502, 2.99410786, 2.11297465, 3.37042564,
       2.64052509, 1.36346991, 0.68539065, 1.03361491, 0.90540307,
       1.76845903, 2.11128979, 1.78173859, 2.79023275, 0.64396541,
       0.87610746, 5.23750049, 3.41102649, 3.18833522, 1.20921241,
       2.07238565, 1.23863862, 5.66405728, 3.07347514, 0.98414824,
       1.12368196, 1.3060482 , 1.02938722, 1.96038754, 0.81355828,
       1.65056426, 0.11725298, 2.1493593 , 0.49300763, 1.26171529,
       0.27856461, 1.83922204, 0.97770842, 1.27751732, 5.5191054 ,
       2.21460443, 1.72701543, 1.80123051, 1.27982277, 1.69996599,
       0.41897369, 0.56141662, 1.59944028, 1.28269957, 1.09464645,
       0.91348711, 0.83844011, 0.06779634, 1.59391636, 0.92909009,
       0.2249008 , 0.37235769, 3.54665899, 0.69076408, 0.464155  ,
       0.93546219, 1.72142044, 0.65844905, 4.33013673, 0.08389357,
       5.05809403, 0.47798695, 0.63148799, 2.26068668, 0.99370813,
       4.69218164, 2.03889133, 1.06071617, 3.99596801, 2.76045249,
       2.53195504, 6.34568204, 1.79466828, 1.17214677, 0.63195367,
       3.12500801, 2.98122107, 2.74994727, 1.85120285, 0.31523191,
       0.03039504, 2.39494752, 0.05283476, 1.40513227, 0.27310686,
       2.78295955, 2.78503277, 0.17889362, 0.21993918, 2.47193703,
       0.09961994, 0.98290001, 2.87897453, 1.04654061, 1.44689139,
       0.75053196, 1.90072161, 0.07337072, 1.08005232, 1.76350391,
       1.13444569, 2.38286551, 1.20792944, 2.59251206, 3.83880974,
       1.4713979 , 0.82968679, 0.96234638, 0.3518984 , 1.53537545,
       1.53714678, 0.91555435, 0.17847465, 1.04501305, 1.62623627,
       0.56511931, 0.27666544, 1.02573777, 1.76343823, 0.09543004,
       3.27791113, 4.09629567, 1.00900773, 3.87704081, 1.24957286,
       1.9460308 , 0.64492968, 1.87331116, 0.57686789, 0.82118049,
       1.19346087, 0.42413331, 1.62276897, 0.20517721, 0.98301327,
       3.5662663 , 0.61798656, 0.6370218 , 1.46742942, 0.94152712,
       1.78928848, 1.46753359, 1.3924947 , 0.35489384, 9.00032173])</code></pre>
</div>
</div>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률 통계</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/18.html</guid>
  <pubDate>Mon, 07 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>두 변수의 연관성과 독립성</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/Nonparametric/03.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">overview</h2>
<p>표본 상관계수를 대체할 수 있는 <code>비모수적 상관계수</code>와 이를 이용한 <code>두 변수에 대한 독립성 검정법</code>을 알아본다.</p>
</section>
<section id="상관계수와-단순선형회귀" class="level2">
<h2 class="anchored" data-anchor-id="상관계수와-단순선형회귀">상관계수와 단순선형회귀</h2>
<section id="스피어만-순위상관" class="level3">
<h3 class="anchored" data-anchor-id="스피어만-순위상관">스피어만 순위상관</h3>
<ul>
<li>두 변수를 순위변환 한 뒤 표본상관계수를 계산</li>
<li>비선형 추세일지라도 순증가 또는 순감소하는 추세를 측정할 수 있다.</li>
<li>순서가 있는 범주형일 때도 적용할 수 있다.</li>
</ul>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률 통계</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/Nonparametric/03.html</guid>
  <pubDate>Mon, 07 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>검정</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/09.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div id="91f606a2" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> empiricaldist <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Pmf</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> binom</span>
<span id="cb1-4"></span>
<span id="cb1-5">k, n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">140</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span></span>
<span id="cb1-6">like_fair <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> binom.pmf(k, n, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
</div>
<div id="7113f188" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">ramp_up <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb2-2">ramp_down <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-3">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.append(ramp_up, ramp_down)</span>
<span id="cb2-4"></span>
<span id="cb2-5">xs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>)</span>
<span id="cb2-6">triangle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pmf(a, xs)</span>
<span id="cb2-7">triangle.normalize()</span>
<span id="cb2-8">biased_triangle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> triangle.copy()</span>
<span id="cb2-9">biased_triangle[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-10">biased_triangle.normalize()</span>
<span id="cb2-11"></span>
<span id="cb2-12">likelihood <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> binom.pmf(k, n, xs)</span>
<span id="cb2-13">like_triangle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(biased_triangle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> likelihood)</span></code></pre></div>
</div>
<div id="54e820f7" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> like_fair <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> like_triangle</span>
<span id="cb3-2">k, k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">
<pre><code>(1.1970766535647133, 0.5448497446015277)</code></pre>
</div>
</div>
<ul>
<li>250번 중 140번이 앞면이 나왔는데도 여전히 공정할 확률이 높다. (왜?)</li>
</ul>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률 통계</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/09.html</guid>
  <pubDate>Sat, 05 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>의사결정분석</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/08.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div id="36abfab9" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"></span>
<span id="cb1-5">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font.family'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Noto Sans KR'</span></span>
<span id="cb1-6">df1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/AllenDowney/ThinkBayes2/master/data/showcases.2011.csv'</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, skiprows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]).dropna().transpose()</span>
<span id="cb1-7">df2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/AllenDowney/ThinkBayes2/master/data/showcases.2012.csv'</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, skiprows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]).dropna().transpose()</span>
<span id="cb1-8">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([df1, df2], ignore_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb1-9">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Showcase 1</th>
<th data-quarto-table-cell-role="th">Showcase 2</th>
<th data-quarto-table-cell-role="th">Bid 1</th>
<th data-quarto-table-cell-role="th">Bid 2</th>
<th data-quarto-table-cell-role="th">Difference 1</th>
<th data-quarto-table-cell-role="th">Difference 2</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>50969.0</td>
<td>45429.0</td>
<td>42000.0</td>
<td>34000.0</td>
<td>8969.0</td>
<td>11429.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>21901.0</td>
<td>34061.0</td>
<td>14000.0</td>
<td>59900.0</td>
<td>7901.0</td>
<td>-25839.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>32815.0</td>
<td>53186.0</td>
<td>32000.0</td>
<td>45000.0</td>
<td>815.0</td>
<td>8186.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>44432.0</td>
<td>31428.0</td>
<td>27000.0</td>
<td>38000.0</td>
<td>17432.0</td>
<td>-6572.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>24273.0</td>
<td>22320.0</td>
<td>18750.0</td>
<td>23000.0</td>
<td>5523.0</td>
<td>-680.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">308</td>
<td>25375.0</td>
<td>31986.0</td>
<td>36000.0</td>
<td>32000.0</td>
<td>-10625.0</td>
<td>-14.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">309</td>
<td>24949.0</td>
<td>30696.0</td>
<td>20500.0</td>
<td>31000.0</td>
<td>4449.0</td>
<td>-304.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">310</td>
<td>23662.0</td>
<td>22329.0</td>
<td>26000.0</td>
<td>20000.0</td>
<td>-2338.0</td>
<td>2329.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">311</td>
<td>23704.0</td>
<td>34325.0</td>
<td>23800.0</td>
<td>34029.0</td>
<td>-96.0</td>
<td>296.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">312</td>
<td>20898.0</td>
<td>23876.0</td>
<td>28000.0</td>
<td>25000.0</td>
<td>-7102.0</td>
<td>-1124.0</td>
</tr>
</tbody>
</table>

<p>313 rows × 6 columns</p>
</div>
</div>
</div>
<div id="6f71b5e7" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gaussian_kde</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> empiricaldist <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Pmf</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> kde_from_sample(sample, qs):</span>
<span id="cb2-5">    kde <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gaussian_kde(sample)</span>
<span id="cb2-6">    ps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kde(qs)</span>
<span id="cb2-7">    pmf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pmf(ps, qs)</span>
<span id="cb2-8">    pmf.normalize()</span>
<span id="cb2-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pmf</span>
<span id="cb2-10"></span>
<span id="cb2-11">qs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">81</span>)</span>
<span id="cb2-12">prior1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kde_from_sample(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Showcase 1'</span>], qs)</span>
<span id="cb2-13">prior2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kde_from_sample(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Showcase 2'</span>], qs)</span>
<span id="cb2-14"></span>
<span id="cb2-15">prior1.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'진열대 1번의 사전확률'</span>)</span>
<span id="cb2-16">prior2.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'진열대 2번의 사전확률'</span>)</span>
<span id="cb2-17">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'진열대 물건 총 금액'</span>)</span>
<span id="cb2-18">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PMF'</span>)</span>
<span id="cb2-19">plt.legend()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/08_files/figure-html/cell-3-output-1.png" width="594" height="430" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="10f21673" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">sample_diff1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Bid 1'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Showcase 1'</span>]</span>
<span id="cb3-2">sample_diff2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Bid 2'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Showcase 2'</span>]</span>
<span id="cb3-3"></span>
<span id="cb3-4">qs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">61</span>)</span>
<span id="cb3-5">kde_diff1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kde_from_sample(sample_diff1, qs)</span>
<span id="cb3-6">kde_diff2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kde_from_sample(sample_diff2, qs)</span>
<span id="cb3-7"></span>
<span id="cb3-8">kde_diff1.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1번의 차이'</span>)</span>
<span id="cb3-9">kde_diff2.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2번의 차이'</span>)</span>
<span id="cb3-10">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'차이 금액'</span>)</span>
<span id="cb3-11">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PMF'</span>)</span>
<span id="cb3-12">plt.legend()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/08_files/figure-html/cell-4-output-1.png" width="594" height="433" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="ff176e79" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> norm</span>
<span id="cb4-2"></span>
<span id="cb4-3">std_diff1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_diff1.std()</span>
<span id="cb4-4">std_diff2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_diff2.std()</span>
<span id="cb4-5"></span>
<span id="cb4-6">error_dist1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> norm(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, std_diff1)</span>
<span id="cb4-7">error_dist2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> norm(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, std_diff2)</span>
<span id="cb4-8"></span>
<span id="cb4-9">guess1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23000</span></span>
<span id="cb4-10">error1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> guess1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> prior1.qs</span>
<span id="cb4-11">likelihood1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> error_dist1.pdf(error1)</span>
<span id="cb4-12">posterior1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prior1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> likelihood1</span>
<span id="cb4-13">posterior1.normalize()</span>
<span id="cb4-14"></span>
<span id="cb4-15">guess2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38000</span></span>
<span id="cb4-16">error2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> guess2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> prior2.qs</span>
<span id="cb4-17">likelihood2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> error_dist2.pdf(error2)</span>
<span id="cb4-18">posterior2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prior2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> likelihood2</span>
<span id="cb4-19">posterior2.normalize()</span>
<span id="cb4-20"></span>
<span id="cb4-21">posterior1.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1번의 사후분포'</span>)</span>
<span id="cb4-22">posterior2.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2번의 사후분포'</span>)</span>
<span id="cb4-23">plt.legend()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/08_files/figure-html/cell-5-output-1.png" width="575" height="412" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="8873c4d6" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> compute_prob_win(my_diff, op_diff):</span>
<span id="cb5-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> my_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb5-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb5-4">    p1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(op_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-5">    p2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(op_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> my_diff)</span>
<span id="cb5-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> p1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p2</span>
<span id="cb5-7"></span>
<span id="cb5-8">xs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">121</span>)</span>
<span id="cb5-9">ys1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [compute_prob_win(x, sample_diff2) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> xs]</span>
<span id="cb5-10">ys2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [compute_prob_win(x, sample_diff1) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> xs]</span>
<span id="cb5-11"></span>
<span id="cb5-12">plt.plot(xs, ys1, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1번 참가자가 이길 확률'</span>)</span>
<span id="cb5-13">plt.plot(xs, ys2, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2번 참가자가 이길 확률'</span>)</span>
<span id="cb5-14">plt.legend()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/08_files/figure-html/cell-6-output-1.png" width="568" height="412" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="e95276f6" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> total_prob_win(bid, posterior, op_diff):</span>
<span id="cb6-2">    total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb6-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> price, prob <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> posterior.items():</span>
<span id="cb6-4">        diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> price</span>
<span id="cb6-5">        total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> compute_prob_win(diff, op_diff)</span>
<span id="cb6-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> total</span>
<span id="cb6-7"></span>
<span id="cb6-8">bids1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> posterior1.qs</span>
<span id="cb6-9">probs1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [total_prob_win(bid, posterior1, sample_diff2) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bid <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> bids1]</span>
<span id="cb6-10">prob1_wins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Series(probs1, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bids1)</span>
<span id="cb6-11"></span>
<span id="cb6-12">bids2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> posterior2.qs</span>
<span id="cb6-13">probs2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [total_prob_win(bid, posterior2, sample_diff1) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bid <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> bids2]</span>
<span id="cb6-14">prob2_wins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Series(probs2, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bids2)</span>
<span id="cb6-15"></span>
<span id="cb6-16">prob1_wins.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'1번 참가자의 이길 확률 (최적: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prob1_wins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>idxmax()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb6-17">plt.axvline(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prob1_wins.idxmax(), color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':'</span>)</span>
<span id="cb6-18"></span>
<span id="cb6-19">prob2_wins.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'2번 참가자의 이길 확률 (최적: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prob2_wins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>idxmax()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb6-20">plt.axvline(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prob2_wins.idxmax(), color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':'</span>)</span>
<span id="cb6-21"></span>
<span id="cb6-22">plt.legend()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/08_files/figure-html/cell-7-output-1.png" width="568" height="412" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<section id="연습문제" class="level2">
<h2 class="anchored" data-anchor-id="연습문제">연습문제</h2>
<section id="section" class="level3">
<h3 class="anchored" data-anchor-id="section">9-6</h3>
<p><strong>열차 도착 시간에 대한 분포(z)</strong></p>
<div id="4834e037" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">observed_gap_times <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb7-2">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">428.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">705.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">407.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">465.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">433.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">425.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">204.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">506.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">143.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">351.0</span>, </span>
<span id="cb7-3">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">450.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">598.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">464.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">749.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">341.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">586.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">754.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">256.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">378.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">435.0</span>, </span>
<span id="cb7-4">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">176.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">405.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">360.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">519.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">648.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">374.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">483.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">537.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">578.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">534.0</span>, </span>
<span id="cb7-5">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">577.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">619.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">538.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">331.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">186.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">629.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">193.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">360.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">660.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">484.0</span>, </span>
<span id="cb7-6">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">512.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">315.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">457.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">404.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">740.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">388.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">357.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">485.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">567.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">160.0</span>, </span>
<span id="cb7-7">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">428.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">387.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">901.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">187.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">622.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">616.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">585.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">474.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">442.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">499.0</span>, </span>
<span id="cb7-8">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">437.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">620.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">351.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">286.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">373.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">232.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">393.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">745.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">636.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">758.0</span>]</span>
<span id="cb7-9">zs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(observed_gap_times) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span></span>
<span id="cb7-10">qs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>)</span>
<span id="cb7-11">pmf_z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kde_from_sample(zs, qs)</span>
<span id="cb7-12"></span>
<span id="cb7-13">likelihood <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pmf_z.qs</span>
<span id="cb7-14">posterior_z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pmf_z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> likelihood</span>
<span id="cb7-15">posterior_z.normalize()</span>
<span id="cb7-16"></span>
<span id="cb7-17">pmf_z.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'사전분포 (평균: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pmf_z<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>mean()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb7-18">plt.axvline(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pmf_z.mean(), color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':'</span>)</span>
<span id="cb7-19"></span>
<span id="cb7-20">posterior_z.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'사후분포 (평균: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>posterior_z<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>mean()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb7-21">plt.axvline(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>posterior_z.mean(), color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':'</span>)</span>
<span id="cb7-22">plt.legend()</span>
<span id="cb7-23">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'열차 도착 시간 간격'</span>)</span>
<span id="cb7-24">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'시간'</span>)</span>
<span id="cb7-25">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PMF'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>Text(0, 0.5, 'PMF')</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/08_files/figure-html/cell-8-output-2.png" width="601" height="451" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>내가 관찰하는 열차 지연 시간은 실제 열차 지연시간보다 더 길다.</li>
<li>예를들어 5분 간격의 길이와 15분 간격의 길이가 있다면, 더 긴 간격의 중간에 내가 도착할 확률이 더 높기 때문</li>
<li>그래서 사후분포가 오른쪽으로 이동함. (신기하네)</li>
</ul>
<p><strong>내가 도착했을 때 이미 지난 시간에 대한 분포(x)</strong></p>
<div id="081c43f6" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> make_mixture(pmf, pmf_seq):</span>
<span id="cb9-2">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(pmf_seq).fillna(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).transpose()</span>
<span id="cb9-3">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> np.array(pmf)</span>
<span id="cb9-4">    total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb9-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> Pmf(total)</span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> make_elapsed_dist(gap, qs):</span>
<span id="cb9-8">    qs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> qs[qs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> gap]</span>
<span id="cb9-9">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(qs)</span>
<span id="cb9-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> Pmf(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n, qs)</span>
<span id="cb9-11"></span>
<span id="cb9-12">qs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> posterior_z.qs</span>
<span id="cb9-13">pmf_seq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [make_elapsed_dist(gap, qs) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> gap <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> qs]</span>
<span id="cb9-14">pmf_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_mixture(posterior_z, pmf_seq)</span></code></pre></div>
</div>
<ul>
<li>z의 각 간격별 지난 시간을 균등분포로 지정</li>
</ul>
<div id="366a1c6b" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> poisson</span>
<span id="cb10-2"></span>
<span id="cb10-3">lam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb10-4">num_passengers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb10-5">likelihood <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> poisson(lam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pmf_x.qs).pmf(num_passengers)</span>
<span id="cb10-6">posterior_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pmf_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> likelihood</span>
<span id="cb10-7">posterior_x.normalize()</span>
<span id="cb10-8">pmf_x.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'사전분포'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C1'</span>)</span>
<span id="cb10-9">posterior_x.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'사후분포'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C2'</span>)</span>
<span id="cb10-10">plt.legend()</span>
<span id="cb10-11">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'10명이 기다리고 있는것을 관찰한 이전과 이후 분포'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>Text(0.5, 1.0, '10명이 기다리고 있는것을 관찰한 이전과 이후 분포')</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/08_files/figure-html/cell-10-output-2.png" width="575" height="432" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>일반적으로 분당 2명의 승객이 기다림. 가능도는 포아송 분포를 따름.</li>
<li>10명이 기다리고 있는것을 관찰했을 때의 사후분포를 구해준다.</li>
</ul>
<p><strong>다음 열차 도착까지의 남은 시간에 대한 분포</strong></p>
<div id="c7c89f47" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">posterior_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pmf.sub_dist(posterior_z, posterior_x)</span>
<span id="cb12-2">nonneg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (posterior_y.qs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb12-3">posterior_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pmf(posterior_y[nonneg])</span>
<span id="cb12-4">posterior_y.normalize()</span>
<span id="cb12-5"></span>
<span id="cb12-6">posterior_x.make_cdf().plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x의 사후분포'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C2'</span>)</span>
<span id="cb12-7">posterior_y.make_cdf().plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y의 사후분포'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C3'</span>)</span>
<span id="cb12-8">posterior_z.make_cdf().plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'z의 사후분포'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C4'</span>)</span>
<span id="cb12-9">plt.legend()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/08_files/figure-html/cell-11-output-1.png" width="568" height="412" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p><strong>결정 분석</strong></p>
<div id="b0e3b9f6" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> posterior_z.sample(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">260</span>)</span>
<span id="cb13-2">delays <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>]</span>
<span id="cb13-3">augmented_sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.append(sample, delays)</span>
<span id="cb13-4"></span>
<span id="cb13-5">qs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>)</span>
<span id="cb13-6">augmented_posterior_z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kde_from_sample(augmented_sample, qs)</span>
<span id="cb13-7">augmented_posterior_z.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'보강된 z의 사후분포'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C4'</span>)</span>
<span id="cb13-8">plt.legend()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/08_files/figure-html/cell-12-output-1.png" width="575" height="412" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>이전 데이터에서는 긴 지연시간에 대한 데이터가 없기 때문에 sampling을 통해 임의로 만들어줌</li>
</ul>
<div id="c16ffb1e" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">qs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> augmented_posterior_z.qs</span>
<span id="cb14-2">pmf_seq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [make_elapsed_dist(gap, qs) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> gap <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> qs]</span>
<span id="cb14-3">pmf_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_mixture(augmented_posterior_z, pmf_seq)</span>
<span id="cb14-4">lam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb14-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> compute_posterior_y(num_passengers):</span>
<span id="cb14-6">    likelihood <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> poisson(lam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> qs).pmf(num_passengers)</span>
<span id="cb14-7">    posterior_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pmf_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> likelihood</span>
<span id="cb14-8">    posterior_x.normalize()</span>
<span id="cb14-9">    posterior_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pmf.sub_dist(augmented_posterior_z, posterior_x)</span>
<span id="cb14-10">    nonneg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (posterior_y.qs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb14-11">    posterior_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pmf(posterior_y[nonneg])</span>
<span id="cb14-12">    posterior_y.normalize()</span>
<span id="cb14-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> posterior_y</span>
<span id="cb14-14"></span>
<span id="cb14-15">nums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb14-16">posteriors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [compute_posterior_y(num) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> nums]</span>
<span id="cb14-17">mean_wait <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [posterior_y.mean()</span>
<span id="cb14-18">             <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> posterior_y <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> posteriors]</span>
<span id="cb14-19">plt.plot(nums, mean_wait)</span>
<span id="cb14-20">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'승객 수에 따른 예상 대기 시간'</span>)</span>
<span id="cb14-21">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'승객 수'</span>)</span>
<span id="cb14-22">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'예상 다음 도착 시간'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre><code>Text(0, 0.5, '예상 다음 도착 시간')</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/08_files/figure-html/cell-13-output-2.png" width="576" height="451" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="b362b2fe" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">prob_late <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> posterior_y.make_cdf()(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>) </span>
<span id="cb16-2">             <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> posterior_y <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> posteriors]</span>
<span id="cb16-3">plt.plot(nums, prob_late)</span>
<span id="cb16-4">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'승객 수'</span>)</span>
<span id="cb16-5">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'늦을 확률'</span>)</span>
<span id="cb16-6">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'승객 수에 따른 늦을 확률'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>Text(0.5, 1.0, '승객 수에 따른 늦을 확률')</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/08_files/figure-html/cell-14-output-2.png" width="594" height="451" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>lam이 만약 알려져 있지 않을 경우, lam에 대해서도 분포를 계산해야함 (쉽지 않네)</li>
</ul>
</section>
<section id="section-1" class="level3">
<h3 class="anchored" data-anchor-id="section-1">9-7</h3>
<div id="443773c7" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> print_cost(printed):</span>
<span id="cb18-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> printed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>:</span>
<span id="cb18-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> printed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb18-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb18-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> printed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.5</span></span>
<span id="cb18-6"></span>
<span id="cb18-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> total_income(printed, orders):</span>
<span id="cb18-8">    sold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(printed, np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(orders))</span>
<span id="cb18-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> sold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb18-10"></span>
<span id="cb18-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> inventory_cost(printed, orders):</span>
<span id="cb18-12">    excess <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> printed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(orders)</span>
<span id="cb18-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> excess <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb18-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> excess <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb18-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb18-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb18-17"></span>
<span id="cb18-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> out_of_stock_cost(printed, orders):</span>
<span id="cb18-19">    weeks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(orders)</span>
<span id="cb18-20">    total_orders <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.cumsum(orders)</span>
<span id="cb18-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, total <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(total_orders):</span>
<span id="cb18-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> printed:</span>
<span id="cb18-23">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (weeks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb18-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb18-25"></span>
<span id="cb18-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> compute_profit(printed, orders):</span>
<span id="cb18-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (total_income(printed, orders) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb18-28">            print_cost(printed)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb18-29">            out_of_stock_cost(printed, orders) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb18-30">            inventory_cost(printed, orders))</span></code></pre></div>
</div>
<div id="3bf49156" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gamma</span>
<span id="cb19-2"></span>
<span id="cb19-3">alpha <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span></span>
<span id="cb19-4">qs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>)</span>
<span id="cb19-5">ps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gamma.pdf(qs, alpha)</span>
<span id="cb19-6">pmf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pmf(ps, qs)</span>
<span id="cb19-7">pmf.normalize()</span>
<span id="cb19-8">pmf.mean()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre><code>8.998788382371902</code></pre>
</div>
</div>
<div id="454bb4fc" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">rates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pmf.choice(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb21-2">np.mean(rates)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>9.05375</code></pre>
</div>
</div>
<div id="d69f903e" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">order_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.poisson(rates, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)).transpose()</span>
<span id="cb23-2">order_array[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, :]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<pre><code>array([[10, 16,  3,  3,  8, 10, 13, 14],
       [ 9,  8,  5,  3,  6,  8,  7,  9],
       [10, 12,  9,  7, 14, 12,  7, 10],
       [ 4, 11,  6, 11,  6,  7,  4,  8],
       [ 5,  4, 12, 12, 10,  6,  3, 12]])</code></pre>
</div>
</div>
<div id="e4b66e8b" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> compute_expected_profits(printed, order_array):</span>
<span id="cb25-2">    profits <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [compute_profit(printed, orders)</span>
<span id="cb25-3">               <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> orders <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> order_array]</span>
<span id="cb25-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> np.mean(profits)</span></code></pre></div>
</div>
<div id="e71749ca" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">compute_expected_profits(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, order_array)</span>
<span id="cb26-2">compute_expected_profits(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, order_array)</span>
<span id="cb26-3">compute_expected_profits(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>, order_array)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">
<pre><code>175.142</code></pre>
</div>
</div>
<div id="95d54163" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">printed_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">110</span>)</span>
<span id="cb28-2">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [compute_expected_profits(printed, order_array)</span>
<span id="cb28-3">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> printed <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> printed_array]</span>
<span id="cb28-4">expected_profits <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Series(t, printed_array)</span></code></pre></div>
</div>
<div id="52d10801" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">expected_profits.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/08_files/figure-html/cell-22-output-1.png" width="572" height="412" class="figure-img"></p>
</figure>
</div>
</div>
</div>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률 통계</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/08.html</guid>
  <pubDate>Sat, 05 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>포아송 과정</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/07.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="연습문제" class="level2">
<h2 class="anchored" data-anchor-id="연습문제">연습문제</h2>
<section id="section" class="level3">
<h3 class="anchored" data-anchor-id="section">8-1</h3>
<div id="0bbdbfd2" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gamma</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> empiricaldist <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Pmf</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-5"></span>
<span id="cb1-6">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font.family'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Noto Sans KR'</span></span>
<span id="cb1-7"></span>
<span id="cb1-8">alpha <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.4</span></span>
<span id="cb1-9">qs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>)</span>
<span id="cb1-10">ps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gamma.pdf(qs, alpha)</span>
<span id="cb1-11">prior <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pmf(ps, qs)</span>
<span id="cb1-12">prior.normalize()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="26">
<pre><code>9.889360237140306</code></pre>
</div>
</div>
<div id="914130ed" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> expo_pdf(t, lam):</span>
<span id="cb3-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> lam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.exp(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>lam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> t)</span>
<span id="cb3-3"></span>
<span id="cb3-4">t1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span></span>
<span id="cb3-5">likelihood1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expo_pdf(t1, prior.qs)</span>
<span id="cb3-6">post1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prior <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> likelihood1</span>
<span id="cb3-7">post1.normalize()</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 지수분포에서 모든 시행은 독립적</span></span>
<span id="cb3-10">t2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span></span>
<span id="cb3-11">likelihood2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expo_pdf(t2, post1.qs)</span>
<span id="cb3-12">post2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> post1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> likelihood2</span>
<span id="cb3-13">post2.normalize()</span>
<span id="cb3-14"></span>
<span id="cb3-15">prior.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"사전분포"</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb3-16">post1.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1골 득점 후 사후분포"</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb3-17">post2.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2골 득점 후 사후분포"</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb3-18">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"λ (게임당 골 수)"</span>)</span>
<span id="cb3-19">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"확률밀도"</span>)</span>
<span id="cb3-20">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"독일의 골 득점률 분포"</span>)</span>
<span id="cb3-21">plt.legend()</span>
<span id="cb3-22">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/07_files/figure-html/cell-3-output-1.png" width="594" height="451" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="f07661e8" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> poisson</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> make_poisson_pmf(lam, qs):</span>
<span id="cb4-6">    ps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> poisson.pmf(qs, lam)</span>
<span id="cb4-7">    pmf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pmf(ps, qs)</span>
<span id="cb4-8">    pmf.normalize()</span>
<span id="cb4-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pmf</span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> make_mixture(pmf, pmf_seq):</span>
<span id="cb4-12">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(pmf_seq).fillna(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).transpose()</span>
<span id="cb4-13">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> np.array(pmf)</span>
<span id="cb4-14">    total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> Pmf(total)</span>
<span id="cb4-16"></span>
<span id="cb4-17">remaining_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span></span>
<span id="cb4-18">goals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)</span>
<span id="cb4-19">pmf_seq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [make_poisson_pmf(lam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> remaining_time, goals) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> lam <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> post2.qs]</span>
<span id="cb4-20">pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_mixture(post2, pmf_seq)</span>
<span id="cb4-21"></span>
<span id="cb4-22"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"예상 골 수: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(pred.qs[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pred.ps[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(pred.qs)))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">골"</span>)</span>
<span id="cb4-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 표준편차 수동 계산</span></span>
<span id="cb4-24">mean_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(pred.qs[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pred.ps[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(pred.qs)))</span>
<span id="cb4-25">variance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>((pred.qs[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mean_val)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pred.ps[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(pred.qs)))</span>
<span id="cb4-26">std_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> variance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb4-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"표준편차: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>std_val<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">골"</span>)</span>
<span id="cb4-28"></span>
<span id="cb4-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5골 이상 득점할 확률 계산</span></span>
<span id="cb4-30">prob_5_or_more <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(pred.ps[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(pred.ps))))</span>
<span id="cb4-31"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5골 이상 득점할 확률: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prob_5_or_more<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prob_5_or_more<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%)"</span>)</span>
<span id="cb4-32"></span>
<span id="cb4-33">pred.plot(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb4-34">plt.axvline(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'orange'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5골'</span>)</span>
<span id="cb4-35"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb4-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 수동으로 평균 계산</span></span>
<span id="cb4-37">    mean_goals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(pred.qs[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pred.ps[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(pred.qs)))</span>
<span id="cb4-38">    plt.axvline(mean_goals, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'평균 (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mean_goals<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">골)'</span>)</span>
<span id="cb4-39"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span>:</span>
<span id="cb4-40">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"평균 계산 중 오류 발생"</span>)</span>
<span id="cb4-41">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"골 수"</span>)</span>
<span id="cb4-42">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"확률"</span>)</span>
<span id="cb4-43">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"남은 시간 동안의 예상 골 수 분포"</span>)</span>
<span id="cb4-44">plt.legend()</span>
<span id="cb4-45">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>예상 골 수: 2.01골
표준편차: 1.78골

5골 이상 득점할 확률: 0.0939 (9.39%)</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/07_files/figure-html/cell-4-output-2.png" width="594" height="451" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="section-1" class="level3">
<h3 class="anchored" data-anchor-id="section-1">8-2</h3>
<div id="94cc532c" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update_goal(prior, data):</span>
<span id="cb6-2">    posterior <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prior.copy()</span>
<span id="cb6-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> goals <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> data:</span>
<span id="cb6-4">        likelihood <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [poisson.pmf(goals, lam) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> lam <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> posterior.qs]</span>
<span id="cb6-5">        posterior <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> posterior <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> likelihood</span>
<span id="cb6-6">        posterior.normalize()</span>
<span id="cb6-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> posterior</span></code></pre></div>
</div>
<div id="c1a061bf" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">france <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> update_goal(prior, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb7-2">croatia <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> update_goal(prior, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb7-3"></span>
<span id="cb7-4">qs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>)</span>
<span id="cb7-5">likelihood <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expo_pdf(qs, prior.qs)</span>
<span id="cb7-6"></span>
<span id="cb7-7">france_post <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> france <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> likelihood</span>
<span id="cb7-8">france_post.normalize()</span>
<span id="cb7-9">croatia_post <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> croatia <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> likelihood</span>
<span id="cb7-10">croatia_post.normalize()</span>
<span id="cb7-11"></span>
<span id="cb7-12">Pmf.prob_lt(france_post, croatia_post)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="30">
<pre><code>0.2633977680689847</code></pre>
</div>
</div>
</section>
<section id="section-2" class="level3">
<h3 class="anchored" data-anchor-id="section-2">8-3</h3>
<div id="11abb6ba" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">alpha <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.8</span></span>
<span id="cb9-2">qs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>)</span>
<span id="cb9-3"></span>
<span id="cb9-4">prior <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pmf(gamma.pdf(qs, alpha), qs)</span>
<span id="cb9-5">prior.normalize()</span>
<span id="cb9-6"></span>
<span id="cb9-7"></span>
<span id="cb9-8">boston_posterior <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> update_goal(prior, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb9-9">vancouver_posterior <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> update_goal(prior, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb9-10"></span>
<span id="cb9-11">prior.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prior'</span>)</span>
<span id="cb9-12">boston_posterior.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'boston'</span>)</span>
<span id="cb9-13">vancouver_posterior.plot(label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vancouver'</span>)</span>
<span id="cb9-14">plt.legend()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/07_files/figure-html/cell-7-output-1.png" width="575" height="412" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="7ede4cc2" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">pmf_seq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [make_poisson_pmf(lam, goals) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> lam <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> prior.qs]</span>
<span id="cb10-2">pred_boston <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_mixture(boston_posterior, pmf_seq)</span>
<span id="cb10-3">pred_vancouver <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_mixture(vancouver_posterior, pmf_seq)</span>
<span id="cb10-4">win <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pmf.prob_gt(pred_boston, pred_vancouver)</span>
<span id="cb10-5">win</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="32">
<pre><code>0.703863141313654</code></pre>
</div>
</div>
<p>챔피언십 우승 확률은 아직은 못 구하겠다.</p>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률 통계</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/bayse/07.html</guid>
  <pubDate>Thu, 03 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Titanic</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/machine_learning/00.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="preprocessing" class="level2">
<h2 class="anchored" data-anchor-id="preprocessing">Preprocessing</h2>
<section id="data-load" class="level3">
<h3 class="anchored" data-anchor-id="data-load">Data load</h3>
<div id="940ce690" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> warnings</span>
<span id="cb1-7"></span>
<span id="cb1-8">warnings.filterwarnings(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ignore'</span>)</span>
<span id="cb1-9">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font.family'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Noto Sans KR'</span></span>
<span id="cb1-10"></span>
<span id="cb1-11">train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/train.csv'</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-12">test_X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/test.csv'</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-13">train_X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Survived'</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-14">train_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</div>
</section>
<section id="결측치-처리" class="level3">
<h3 class="anchored" data-anchor-id="결측치-처리">결측치 처리</h3>
<div id="7c84a433" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">train_X.info(), test_X.info()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
Index: 891 entries, 1 to 891
Data columns (total 10 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   Pclass    891 non-null    int64  
 1   Name      891 non-null    object 
 2   Sex       891 non-null    object 
 3   Age       714 non-null    float64
 4   SibSp     891 non-null    int64  
 5   Parch     891 non-null    int64  
 6   Ticket    891 non-null    object 
 7   Fare      891 non-null    float64
 8   Cabin     204 non-null    object 
 9   Embarked  889 non-null    object 
dtypes: float64(2), int64(3), object(5)
memory usage: 76.6+ KB
&lt;class 'pandas.core.frame.DataFrame'&gt;
Index: 418 entries, 892 to 1309
Data columns (total 10 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   Pclass    418 non-null    int64  
 1   Name      418 non-null    object 
 2   Sex       418 non-null    object 
 3   Age       332 non-null    float64
 4   SibSp     418 non-null    int64  
 5   Parch     418 non-null    int64  
 6   Ticket    418 non-null    object 
 7   Fare      417 non-null    float64
 8   Cabin     91 non-null     object 
 9   Embarked  418 non-null    object 
dtypes: float64(2), int64(3), object(5)
memory usage: 35.9+ KB</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>(None, None)</code></pre>
</div>
</div>
<ul>
<li>결측치가 있는 column은 Age, Cabin, Embarked, Fare</li>
<li>Cabin은 너무 많으니까 걍 삭제하자</li>
</ul>
<div id="a61def00" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">train_X.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Cabin'</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-2">test_X.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Cabin'</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</div>
<ul>
<li>Age, Fare랑 Embarked는 일단 지워보자</li>
</ul>
<div id="bab8b80e" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">train_X.dropna(subset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Embarked'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Age'</span>], inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb6-2">test_X.dropna(subset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Fare'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Age'</span>], inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb6-3">train_X.info(), test_X.info()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
Index: 712 entries, 1 to 891
Data columns (total 9 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   Pclass    712 non-null    int64  
 1   Name      712 non-null    object 
 2   Sex       712 non-null    object 
 3   Age       712 non-null    float64
 4   SibSp     712 non-null    int64  
 5   Parch     712 non-null    int64  
 6   Ticket    712 non-null    object 
 7   Fare      712 non-null    float64
 8   Embarked  712 non-null    object 
dtypes: float64(2), int64(3), object(4)
memory usage: 55.6+ KB
&lt;class 'pandas.core.frame.DataFrame'&gt;
Index: 331 entries, 892 to 1307
Data columns (total 9 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   Pclass    331 non-null    int64  
 1   Name      331 non-null    object 
 2   Sex       331 non-null    object 
 3   Age       331 non-null    float64
 4   SibSp     331 non-null    int64  
 5   Parch     331 non-null    int64  
 6   Ticket    331 non-null    object 
 7   Fare      331 non-null    float64
 8   Embarked  331 non-null    object 
dtypes: float64(2), int64(3), object(4)
memory usage: 25.9+ KB</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>(None, None)</code></pre>
</div>
</div>
</section>
<section id="eda" class="level3">
<h3 class="anchored" data-anchor-id="eda">EDA</h3>
<div id="2a6d3df4" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">train_X.describe()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Pclass</th>
<th data-quarto-table-cell-role="th">Age</th>
<th data-quarto-table-cell-role="th">SibSp</th>
<th data-quarto-table-cell-role="th">Parch</th>
<th data-quarto-table-cell-role="th">Fare</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">count</td>
<td>712.000000</td>
<td>712.000000</td>
<td>712.000000</td>
<td>712.000000</td>
<td>712.000000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">mean</td>
<td>2.240169</td>
<td>29.642093</td>
<td>0.514045</td>
<td>0.432584</td>
<td>34.567251</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">std</td>
<td>0.836854</td>
<td>14.492933</td>
<td>0.930692</td>
<td>0.854181</td>
<td>52.938648</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">min</td>
<td>1.000000</td>
<td>0.420000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>0.000000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">25%</td>
<td>1.000000</td>
<td>20.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>8.050000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">50%</td>
<td>2.000000</td>
<td>28.000000</td>
<td>0.000000</td>
<td>0.000000</td>
<td>15.645850</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">75%</td>
<td>3.000000</td>
<td>38.000000</td>
<td>1.000000</td>
<td>1.000000</td>
<td>33.000000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">max</td>
<td>3.000000</td>
<td>80.000000</td>
<td>5.000000</td>
<td>6.000000</td>
<td>512.329200</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<ul>
<li>Pclass: 명목 1, 2, 3</li>
<li>Sex: 명목 male, female</li>
<li>Age: 연속형 (0.42~80)</li>
<li>SibSp: 명목, 0, 1, 2, 3, 4, 5</li>
<li>Parch: 명목, 0, 1, 2, 3, 4, 5, 6</li>
<li>Ticket: 541개 짜리 명목</li>
<li>Fare: 연속 (34.56~512.32)</li>
<li>Embarked: 명목 S C Q</li>
</ul>
<div id="54559e2d" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">bindo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(train_X[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Pclass'</span>].value_counts())</span>
<span id="cb10-2"></span>
<span id="cb10-3">sns.barplot(bindo, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pclass"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"count"</span>, legend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/machine_learning/00_files/figure-html/cell-7-output-1.png" width="590" height="430" class="figure-img"></p>
</figure>
</div>
</div>
</div>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률 통계</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/machine_learning/00.html</guid>
  <pubDate>Wed, 02 Jul 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>순열검정과 전통적인 비모수통계</title>
  <link>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/Nonparametric/01.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="부호검정이항검정" class="level2">
<h2 class="anchored" data-anchor-id="부호검정이항검정">부호검정(이항검정)</h2>
<ul>
<li>모집단 분포가 정규분포가 아니고, 대칭이 아닐경우 사용</li>
<li>어떤 분포라도 중앙값이 존재한다.</li>
<li>표본 중 절반은 중앙값보다 작고, 절반은 크다.</li>
<li>검정통계량은 <img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bi=1%7D%5E%7Bn%7DI(X_i%20%3E%20%CE%B8_0)"></li>
<li>영분포는 B(n, 1/2)를 따른다.</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?P(S%E2%89%A5c_%7Bval%7D%20%7C%20H_0)%20=%20%5Csum_%7Bk=c_%7Bval%7D%7D%5E%7Bn%7DnCk(%5Cfrac%7B1%7D%7B2%7D)%5En%20%E2%89%A4%20%CE%B1"></p>
<p><img src="https://latex.codecogs.com/png.latex?c_%7Bval%7D%20=%20Q_%7B1-%CE%B1%7D%20+%201"></p>
<ul>
<li>만약 이산형 변수여서 <img src="https://latex.codecogs.com/png.latex?%CE%B8_0">와 같은 값이 m개 이면 n - m개에 대해서만 검정을 진행</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">sign_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(S0, sample, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'two'</span>) {</span>
<span id="cb1-2">    n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(sample <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> S0)</span>
<span id="cb1-3">    Sobs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(sample <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> S0)</span>
<span id="cb1-4">    </span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (dir <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'greater'</span>) {</span>
<span id="cb1-6">        pvalue <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pbinom</span>(Sobs<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-7">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (dir <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'less'</span>) {</span>
<span id="cb1-8">        pvalue <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pbinom</span>(Sobs, n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-9">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb1-10">        prob_lower <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pbinom</span>(Sobs, n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-11">        prob_upper <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pbinom</span>(Sobs<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-12">        pvalue <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(prob_lower, prob_upper)</span>
<span id="cb1-13">    }</span>
<span id="cb1-14">    </span>
<span id="cb1-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(pvalue)</span>
<span id="cb1-16">}</span>
<span id="cb1-17"></span>
<span id="cb1-18">S0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb1-19">iq <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">98</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">121</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">110</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">89</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">109</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">108</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">102</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">92</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">131</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114</span>)</span>
<span id="cb1-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sign_test</span>(S0, iq, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'greater'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.171875</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(iq, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  95% 
126.5 </code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sign_test</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">127.5</span>, iq, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'greater'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.9990234</code></pre>
</div>
</div>
<section id="부호검정의-영분포-시각화" class="level3">
<h3 class="anchored" data-anchor-id="부호검정의-영분포-시각화">부호검정의 영분포 시각화</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 부호검정 영분포 plotting 함수</span></span>
<span id="cb7-4">plot_sign_test_null <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(sample, S0, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'two'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) {</span>
<span id="cb7-5">    n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(sample <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> S0)</span>
<span id="cb7-6">    Sobs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(sample <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> S0)</span>
<span id="cb7-7">    </span>
<span id="cb7-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이항분포 B(n, 0.5)의 가능한 값들</span></span>
<span id="cb7-9">    x_vals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n</span>
<span id="cb7-10">    probs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbinom</span>(x_vals, n, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb7-11">    </span>
<span id="cb7-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터프레임 생성</span></span>
<span id="cb7-13">    df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_vals, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> probs)</span>
<span id="cb7-14">    </span>
<span id="cb7-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># p-value 계산 및 영역 표시를 위한 색상 설정</span></span>
<span id="cb7-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (dir <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'greater'</span>) {</span>
<span id="cb7-17">        critical_region <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x_vals <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> Sobs</span>
<span id="cb7-18">        pvalue <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pbinom</span>(Sobs<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, n, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb7-19">        title_suffix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(우측검정)"</span></span>
<span id="cb7-20">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (dir <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'less'</span>) {</span>
<span id="cb7-21">        critical_region <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x_vals <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> Sobs</span>
<span id="cb7-22">        pvalue <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pbinom</span>(Sobs, n, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb7-23">        title_suffix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(좌측검정)"</span></span>
<span id="cb7-24">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb7-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 양측검정</span></span>
<span id="cb7-26">        prob_lower <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pbinom</span>(Sobs, n, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb7-27">        prob_upper <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pbinom</span>(Sobs<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, n, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb7-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (prob_lower <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> prob_upper) {</span>
<span id="cb7-29">            critical_region <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x_vals <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> Sobs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> x_vals <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> (n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Sobs)</span>
<span id="cb7-30">        } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb7-31">            critical_region <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x_vals <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> Sobs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> x_vals <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> (n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Sobs)</span>
<span id="cb7-32">        }</span>
<span id="cb7-33">        pvalue <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(prob_lower, prob_upper)</span>
<span id="cb7-34">        title_suffix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(양측검정)"</span></span>
<span id="cb7-35">    }</span>
<span id="cb7-36">    </span>
<span id="cb7-37">    df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>region <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(critical_region, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p-value 영역"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"채택역"</span>)</span>
<span id="cb7-38">    </span>
<span id="cb7-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프 생성</span></span>
<span id="cb7-40">    p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> prob)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-41">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> region), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-42">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Sobs, ], </span>
<span id="cb7-43">                   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> prob), </span>
<span id="cb7-44">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-45">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p-value 영역"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"채택역"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-46">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb7-47">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"부호검정의 영분포 B("</span>, n, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", 0.5) "</span>, title_suffix),</span>
<span id="cb7-48">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"관찰값 S = "</span>, Sobs, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", p-value = "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(pvalue, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)),</span>
<span id="cb7-49">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"검정통계량 S (중앙값보다 큰 값의 개수)"</span>,</span>
<span id="cb7-50">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"확률"</span>,</span>
<span id="cb7-51">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"영역"</span></span>
<span id="cb7-52">        ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-53">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-54">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb7-55">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>),</span>
<span id="cb7-56">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.subtitle =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>),</span>
<span id="cb7-57">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span></span>
<span id="cb7-58">        ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-59">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> x_vals)</span>
<span id="cb7-60">    </span>
<span id="cb7-61">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(p)</span>
<span id="cb7-62">}</span>
<span id="cb7-63"></span>
<span id="cb7-64">S0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb7-65">iq <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">98</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">121</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">110</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">89</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">109</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">108</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">102</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">92</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">131</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114</span>)</span>
<span id="cb7-66"></span>
<span id="cb7-67"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_sign_test_null</span>(iq, S0, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'greater'</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/Nonparametric/01_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_sign_test_null</span>(iq, S0, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'two'</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/Nonparametric/01_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_sign_test_null</span>(iq, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">127.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'less'</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/Nonparametric/01_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>α를 정확하게 통제할 수 없다.
<ul>
<li>대표본의 경우 이산형 분포가 정규분포로 근사할 수 있기 때문에, 근사해서 검정 진행해서 α 통제</li>
</ul></li>
</ul>
</section>
<section id="신뢰구간" class="level3">
<h3 class="anchored" data-anchor-id="신뢰구간">신뢰구간</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 신뢰구간 계산</span></span>
<span id="cb10-2">a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb10-3">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(iq)</span>
<span id="cb10-4">l <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qbinom</span>(a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb10-5">u <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> l</span>
<span id="cb10-6">sorted_iq <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(iq)</span>
<span id="cb10-7">(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ci =</span> sorted_iq[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(l, u)])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  92 121</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 실제 신뢰도 계산 (이산분포 특성상 정확히 95%가 아님)</span></span>
<span id="cb12-2">(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coverage =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbinom</span>(l<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(u<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>), n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.9785156</code></pre>
</div>
</div>
<p><strong>왜 비대칭 분포에서도 유효한가?</strong></p>
<ol type="1">
<li><strong>중앙값의 불변성</strong>: 분포가 비대칭이어도 중앙값은 여전히 모집단을 반으로 나누는 점</li>
<li><strong>부호의 독립성</strong>: 각 관측값이 중앙값보다 클 확률은 항상 0.5 (연속분포 가정)</li>
<li><strong>순서통계량의 분포</strong>: 순서통계량들 사이의 확률적 관계는 분포 형태와 무관</li>
</ol>
<p><strong>시뮬레이션 검증: 비대칭 분포에서의 신뢰구간</strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 부호검정 신뢰구간 함수</span></span>
<span id="cb14-2">sign_ci <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(sample, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) {</span>
<span id="cb14-3">    n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sample)</span>
<span id="cb14-4">    l <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qbinom</span>(alpha <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, n, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb14-5">    u <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> l</span>
<span id="cb14-6">    sorted_sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(sample)</span>
<span id="cb14-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> sorted_sample[l], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">upper =</span> sorted_sample[u]))</span>
<span id="cb14-8">}</span>
<span id="cb14-9"></span>
<span id="cb14-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 비대칭 분포 시뮬레이션</span></span>
<span id="cb14-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb14-12">n_sim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb14-13">n_sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb14-14">coverage_results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb14-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">distribution =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">character</span>(),</span>
<span id="cb14-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true_median =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(),</span>
<span id="cb14-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coverage_rate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(),</span>
<span id="cb14-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stringsAsFactors =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb14-19">)</span>
<span id="cb14-20"></span>
<span id="cb14-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. 정규분포 (대칭)</span></span>
<span id="cb14-22">true_median_normal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb14-23">coverage_normal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb14-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n_sim) {</span>
<span id="cb14-25">    sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n_sample, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb14-26">    ci <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sign_ci</span>(sample)</span>
<span id="cb14-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (true_median_normal <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> ci[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> true_median_normal <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> ci[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) {</span>
<span id="cb14-28">        coverage_normal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> coverage_normal <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb14-29">    }</span>
<span id="cb14-30">}</span>
<span id="cb14-31">coverage_results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(coverage_results, </span>
<span id="cb14-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">distribution =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"정규분포"</span>, </span>
<span id="cb14-33">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true_median =</span> true_median_normal,</span>
<span id="cb14-34">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coverage_rate =</span> coverage_normal <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> n_sim))</span>
<span id="cb14-35"></span>
<span id="cb14-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. 지수분포 (오른쪽 비대칭)</span></span>
<span id="cb14-37">true_median_exp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 지수분포의 중앙값</span></span>
<span id="cb14-38">coverage_exp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb14-39"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n_sim) {</span>
<span id="cb14-40">    sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rexp</span>(n_sample, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rate =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb14-41">    ci <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sign_ci</span>(sample)</span>
<span id="cb14-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (true_median_exp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> ci[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> true_median_exp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> ci[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) {</span>
<span id="cb14-43">        coverage_exp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> coverage_exp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb14-44">    }</span>
<span id="cb14-45">}</span>
<span id="cb14-46">coverage_results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(coverage_results, </span>
<span id="cb14-47">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">distribution =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"지수분포"</span>, </span>
<span id="cb14-48">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true_median =</span> true_median_exp,</span>
<span id="cb14-49">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coverage_rate =</span> coverage_exp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> n_sim))</span>
<span id="cb14-50"></span>
<span id="cb14-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. 베타분포 (왼쪽 비대칭)</span></span>
<span id="cb14-52">true_median_beta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qbeta</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb14-53">coverage_beta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb14-54"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n_sim) {</span>
<span id="cb14-55">    sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbeta</span>(n_sample, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb14-56">    ci <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sign_ci</span>(sample)</span>
<span id="cb14-57">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (true_median_beta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> ci[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> true_median_beta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> ci[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) {</span>
<span id="cb14-58">        coverage_beta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> coverage_beta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb14-59">    }</span>
<span id="cb14-60">}</span>
<span id="cb14-61">coverage_results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(coverage_results, </span>
<span id="cb14-62">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">distribution =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"베타분포(5,2)"</span>, </span>
<span id="cb14-63">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true_median =</span> true_median_beta,</span>
<span id="cb14-64">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coverage_rate =</span> coverage_beta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> n_sim))</span>
<span id="cb14-65"></span>
<span id="cb14-66"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(coverage_results)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   distribution true_median coverage_rate
1      정규분포   0.0000000         0.952
2      지수분포   0.6931472         0.971
3 베타분포(5,2)   0.7355500         0.961</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 분포의 형태와 중앙값 시각화</span></span>
<span id="cb16-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb16-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gridExtra)</span>
<span id="cb16-4"></span>
<span id="cb16-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb16-6">x_normal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb16-7">x_exp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rexp</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb16-8">x_beta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbeta</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb16-9"></span>
<span id="cb16-10">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_normal), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"정규분포 (대칭)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"값"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"빈도"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"중앙값 = 0"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.
ℹ Please use `linewidth` instead.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">p2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb18-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_exp), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"지수분포 (오른쪽 비대칭)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"값"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"빈도"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"중앙값 ="</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span>
<span id="cb18-6"></span>
<span id="cb18-7">p3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb18-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_beta), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qbeta</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"베타분포(5,2) (왼쪽 비대칭)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"값"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"빈도"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"중앙값 ="</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qbeta</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span>
<span id="cb18-12"></span>
<span id="cb18-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grid.arrange</span>(p1, p2, p3, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/adp_실기/notes/Nonparametric/01_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p><strong>결론</strong>: 시뮬레이션 결과에서 볼 수 있듯이, 분포가 대칭이든 비대칭이든 부호검정의 신뢰구간 포함률(coverage rate)은 명목 신뢰수준(95%)에 근접합니다. 이는 부호검정 신뢰구간이 <strong>분포무관(distribution-free)</strong> 성질을 가지기 때문입니다.</p>
</section>
<section id="부호검정-사용-시-주의사항" class="level3">
<h3 class="anchored" data-anchor-id="부호검정-사용-시-주의사항">부호검정 사용 시 주의사항</h3>
<ol type="1">
<li><strong>동일한 값 처리</strong>: 중앙값과 정확히 같은 값들은 검정에서 제외</li>
<li><strong>표본 크기</strong>: 작은 표본에서는 정확한 이항분포 사용, 큰 표본에서는 정규분포 근사</li>
<li><strong>검정 방향</strong>: 양측검정 vs 단측검정 선택 중요</li>
<li><strong>가정</strong>: 표본이 연속분포에서 추출되었다고 가정</li>
</ol>
</section>
</section>
<section id="윌콕슨-부호순위검정" class="level2">
<h2 class="anchored" data-anchor-id="윌콕슨-부호순위검정">윌콕슨 부호순위검정</h2>
<ul>
<li>모집단이 대칭인 경우 사용 가능</li>
<li>rank가 동점인 경우 평균으로 처리</li>
<li>영분포는 잘 알려져 있지 않은 분포</li>
<li>평균: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bn(n+1)%7D%7B4%7D"></li>
<li>분산: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bn(n+1)(2n+1)%7D%7B24%7D"></li>
<li>일반적으로 resampling 방식으로 구하고, 수가 많아지면 표준정규분포로 근사해서 계산(Lyapunov의 중심극한정리)</li>
</ul>
<section id="중앙값-추정과-신뢰구간" class="level3">
<h3 class="anchored" data-anchor-id="중앙값-추정과-신뢰구간">중앙값 추정과 신뢰구간</h3>
<ul>
<li>왈시평균: <img src="https://latex.codecogs.com/png.latex?W_%7Bij%7D%20=%20%5Cfrac%7BX_i%20+%20X_j%7D%7B2%7D"></li>
<li><img src="https://latex.codecogs.com/png.latex?SR_%7B+%7D(%CE%B8)%20=%20%5C#%7BW_%7Bij%7D%20%3E%20%CE%B8%7D"></li>
</ul>
</section>
</section>
<section id="순열-검정" class="level2">
<h2 class="anchored" data-anchor-id="순열-검정">순열 검정</h2>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률 통계</category>
  <guid>https://cryscham123.github.io/posts/01_projects/adp_실기/notes/Nonparametric/01.html</guid>
  <pubDate>Tue, 01 Jul 2025 15:00:00 GMT</pubDate>
</item>
</channel>
</rss>
