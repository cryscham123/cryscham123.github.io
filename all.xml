<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>김형훈의 학습 블로그</title>
<link>https://cryscham123.github.io/all.html</link>
<atom:link href="https://cryscham123.github.io/all.xml" rel="self" type="application/rss+xml"/>
<description>안녕하세요. 김형훈의 학습 블로그 입니다.</description>
<image>
<url>https://cryscham123.github.io/profile.jpg</url>
<title>김형훈의 학습 블로그</title>
<link>https://cryscham123.github.io/all.html</link>
</image>
<generator>quarto-1.5.56</generator>
<lastBuildDate>Sat, 12 Apr 2025 15:00:00 GMT</lastBuildDate>
<item>
  <title>Dataminig 1차 발표 ppt</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/12.html</link>
  <description><![CDATA[ 




<iframe src="dataminig_presentation.pdf" width="800px" height="600px">
</iframe>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>data mining</category>
  <category>보고서</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/12.html</guid>
  <pubDate>Sat, 12 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/05.pdf</link>
  <description><![CDATA[ undefined ]]></description>
  <category>보고서</category>
  <category>데이터 마이닝</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/05.pdf</guid>
  <pubDate>Fri, 11 Apr 2025 23:47:51 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/09.pdf</link>
  <description><![CDATA[ undefined ]]></description>
  <category>보고서</category>
  <category>OR</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/09.pdf</guid>
  <pubDate>Thu, 10 Apr 2025 09:49:46 GMT</pubDate>
</item>
<item>
  <title>Homework - 2</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/11.html</link>
  <description><![CDATA[ 




<div id="64feb5e7" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> warnings</span>
<span id="cb1-3"></span>
<span id="cb1-4">warnings.filterwarnings(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ignore'</span>)</span>
<span id="cb1-5"></span>
<span id="cb1-6">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./_data/class/FFvote.csv"</span>, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'utf-8'</span>)</span>
<span id="cb1-7">dataset.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Unnamed: 0</th>
<th data-quarto-table-cell-role="th">gender_female</th>
<th data-quarto-table-cell-role="th">gender_male</th>
<th data-quarto-table-cell-role="th">region_Chuncheung</th>
<th data-quarto-table-cell-role="th">region_Honam</th>
<th data-quarto-table-cell-role="th">region_Sudo</th>
<th data-quarto-table-cell-role="th">region_Youngnam</th>
<th data-quarto-table-cell-role="th">region_others</th>
<th data-quarto-table-cell-role="th">edu</th>
<th data-quarto-table-cell-role="th">income</th>
<th data-quarto-table-cell-role="th">age</th>
<th data-quarto-table-cell-role="th">score_gov</th>
<th data-quarto-table-cell-role="th">score_progress</th>
<th data-quarto-table-cell-role="th">score_intention</th>
<th data-quarto-table-cell-role="th">vote</th>
<th data-quarto-table-cell-role="th">parties</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>1.0</td>
<td>0.666667</td>
<td>0.666667</td>
<td>0.25</td>
<td>0.25</td>
<td>0.75</td>
<td>1</td>
<td>2</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>0.5</td>
<td>0.666667</td>
<td>0.666667</td>
<td>0.25</td>
<td>0.75</td>
<td>0.50</td>
<td>0</td>
<td>3</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0.0</td>
<td>0.333333</td>
<td>1.000000</td>
<td>0.00</td>
<td>0.50</td>
<td>0.45</td>
<td>1</td>
<td>4</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>3</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0.5</td>
<td>0.000000</td>
<td>0.666667</td>
<td>1.00</td>
<td>0.75</td>
<td>0.40</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>4</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0.0</td>
<td>0.333333</td>
<td>1.000000</td>
<td>0.75</td>
<td>0.50</td>
<td>0.35</td>
<td>1</td>
<td>1</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="50fd98ac" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset.loc[:, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gender_female'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'score_intention'</span>].values</span>
<span id="cb2-2">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vote'</span>].values</span></code></pre></div>
</div>
<p>어떻게 하면 scaling을 간단하게 처리할 수 있을까 고민하던 중 <a href="https://scikit-learn.org/stable/modules/compose.html#pipeline-chaining-estimators">sklearn pipeline 문서</a>의 Safety 부분을 참고해서 작성해봤습니다.</p>
<div id="1127f4ac" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KFold</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cross_val_score</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.neighbors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KNeighborsClassifier</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StandardScaler</span>
<span id="cb3-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.pipeline <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> make_pipeline</span>
<span id="cb3-6"></span>
<span id="cb3-7">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_pipeline(</span>
<span id="cb3-8">      StandardScaler(),</span>
<span id="cb3-9">      KNeighborsClassifier(n_neighbors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb3-10">)</span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>):</span>
<span id="cb3-13">      kf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> KFold(n_splits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>k, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb3-14">      accuracies <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cross_val_score(pipeline, X, y, cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>kf, scoring<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accuracy'</span>)</span>
<span id="cb3-15">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Accuracy for K=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>k<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">round</span>(accuracies.mean(), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Accuracy for K=3: 0.71
Accuracy for K=4: 0.71
Accuracy for K=5: 0.72</code></pre>
</div>
</div>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>data mining</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/11.html</guid>
  <pubDate>Thu, 10 Apr 2025 00:54:37 GMT</pubDate>
</item>
<item>
  <title>프로세스 성과에 미치는 변동성의 영향: 대기시간 문제</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/07.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<p>다다음주 월요일 - 수업 x</p>
<ul>
<li><p>변동성을 고려해야 한다.</p></li>
<li><p>재고, 대기시간, 산출손실에 영향을 줌</p></li>
</ul>
<p>IU가 100 이하여도 대기가 발생할 수 있음</p>
<ul>
<li>변동성의 원인
<ol type="1">
<li>흐름단위의 input</li>
<li>processing time의 변동성</li>
<li>자원의 무작위적 가용성</li>
<li>복수의 흐름단위가 무작위적 경로결정</li>
</ol></li>
</ul>
<section id="대기시간-예측-단일-자원" class="level2">
<h2 class="anchored" data-anchor-id="대기시간-예측-단일-자원">대기시간 예측 (단일 자원)</h2>
<ul>
<li><p>if D &gt; C, 대기 - 처리능력 부족 (+ 변동성)</p></li>
<li><p>if D &lt; C, 대기 - 변동성</p></li>
<li><p>안정적 도착: 평균 고객 수가 시점에 의존하지 않고, 길이에만 의존함</p></li>
</ul>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>생산시스템관리</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/07.html</guid>
  <pubDate>Tue, 08 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/08.pdf</link>
  <description><![CDATA[ undefined ]]></description>
  <category>보고서</category>
  <category>OR</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/08.pdf</guid>
  <pubDate>Sun, 06 Apr 2025 14:06:38 GMT</pubDate>
</item>
<item>
  <title>Coding pipeline</title>
  <link>https://cryscham123.github.io/posts/02_areas/air_flow/notes/01.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="dag-skeleton" class="level2">
<h2 class="anchored" data-anchor-id="dag-skeleton">DAG skeleton</h2>
<div id="8ad61bde" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> airflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DAG</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> DAG(</span>
<span id="cb1-5">    dag_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'example_dag'</span>,</span>
<span id="cb1-6">    schedule<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'@daily'</span>,</span>
<span id="cb1-7">    start_date<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>datetime(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>),</span>
<span id="cb1-8">    catchup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb1-9">) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dag:</span>
<span id="cb1-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span></code></pre></div>
</div>
<ul>
<li>DAG는 start_date / last_execution time + schedule_interval에 실행된다.</li>
</ul>
</section>
<section id="operator" class="level2">
<h2 class="anchored" data-anchor-id="operator">Operator</h2>
<ul>
<li>operator 하나 당 하나의 task만 실행하는게 좋다.</li>
</ul>
<section id="operator-type" class="level3">
<h3 class="anchored" data-anchor-id="operator-type">operator type</h3>
<ul>
<li>Action operators
<ul>
<li>BashOperator</li>
<li>PythonOperator</li>
</ul></li>
<li>Transfer operators</li>
<li>Sensor operators</li>
</ul>
</section>
</section>
<section id="providers" class="level2">
<h2 class="anchored" data-anchor-id="providers">Providers</h2>
<ul>
<li>Airflow providers are a set of packages that contain operators, sensors, hooks, and other utilities to interact with external platforms and services.</li>
<li>Providers are installed separately from Airflow and can be added to your environment as needed.</li>
<li>In Airflow core, Bash and Python operators, … are included</li>
</ul>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> airflow.providers.postgres.operators.postgres <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PostgresOperator</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> DAG(</span>
<span id="cb2-4">    dag_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'example_db'</span>,</span>
<span id="cb2-5">    schedule<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'@daily'</span>,</span>
<span id="cb2-6">    start_date<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>datetime(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>),</span>
<span id="cb2-7">    catchup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb2-8">) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dag:</span>
<span id="cb2-9">    create_table <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PostgresOperator(</span>
<span id="cb2-10">        task_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'create_table'</span>,</span>
<span id="cb2-11">        postgres_conn_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'postgres'</span>,</span>
<span id="cb2-12">        sql<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb2-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            CREATE TABLE IF NOT EXISTS example_table (</span></span>
<span id="cb2-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                id SERIAL PRIMARY KEY,</span></span>
<span id="cb2-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                name VARCHAR(50)</span></span>
<span id="cb2-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            );</span></span>
<span id="cb2-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        """</span>,</span>
<span id="cb2-18">    )</span></code></pre></div>
<ul>
<li>DB에 접속하기 위해서 connection을 설정해야 한다.</li>
</ul>
</section>
<section id="hook" class="level2">
<h2 class="anchored" data-anchor-id="hook">Hook</h2>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>Air flow</category>
  <guid>https://cryscham123.github.io/posts/02_areas/air_flow/notes/01.html</guid>
  <pubDate>Fri, 04 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Simplex 표 계산</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/01.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<ul>
<li>노가다 계산 지옥에 지쳐 simplex 표를 계산하는 코드를 작성해보았다.</li>
</ul>
<section id="general" class="level2">
<h2 class="anchored" data-anchor-id="general">General</h2>
<div id="b01a4c9a" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fractions <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Fraction</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tabulate <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tabulate</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert all elements to Fraction</span></span>
<span id="cb1-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> to_fraction(array):</span>
<span id="cb1-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [Fraction(x).limit_denominator() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(x, (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> x <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> array]</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 초기 설정</span></span>
<span id="cb1-10">obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb1-11">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb1-12">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, Fraction(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb1-13">    [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Fraction(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],</span>
<span id="cb1-14">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, Fraction(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-15">]</span>
<span id="cb1-16">basic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-17">non_basic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 초기 배열을 분수로 변환</span></span>
<span id="cb1-20">obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> to_fraction(obj)</span>
<span id="cb1-21">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [to_fraction(row) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> A]</span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> print_table():</span>
<span id="cb1-24">    headers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RHS"</span>]</span>
<span id="cb1-25">    table <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> obj]]</span>
<span id="cb1-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(A)):</span>
<span id="cb1-27">        row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>basic[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> A[i]]</span>
<span id="cb1-28">        table.append(row)</span>
<span id="cb1-29">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Current Simplex Tableau:"</span>)</span>
<span id="cb1-30">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tabulate(table, headers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>headers, tablefmt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grid"</span>))</span>
<span id="cb1-31"></span>
<span id="cb1-32"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> simplex():</span>
<span id="cb1-33">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">global</span> obj, A, basic, non_basic</span>
<span id="cb1-34">    </span>
<span id="cb1-35">    iteration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb1-37">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Iteration </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>iteration<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-38">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb1-39">        print_table()</span>
<span id="cb1-40"></span>
<span id="cb1-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 음의 계수 찾기 (entering variable)</span></span>
<span id="cb1-42">        min_rc_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb1-43">        min_rc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Fraction(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-44">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># RHS 제외</span></span>
<span id="cb1-45">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> obj[j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> min_rc:</span>
<span id="cb1-46">                min_rc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obj[j]</span>
<span id="cb1-47">                min_rc_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> j</span>
<span id="cb1-48">        </span>
<span id="cb1-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 종료 조건: 음수 계수가 없으면 최적</span></span>
<span id="cb1-50">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> min_rc_idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> min_rc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb1-51">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Optimal solution reached."</span>)</span>
<span id="cb1-52">            solution <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>: Fraction(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)}</span>
<span id="cb1-53">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, var_idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(basic):</span>
<span id="cb1-54">                solution[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>var_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A[i][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-55">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Optimal Solution:"</span>)</span>
<span id="cb1-56">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> var, val <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> solution.items():</span>
<span id="cb1-57">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>var<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>val<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-58">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Objective Value = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>obj[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-59">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb1-60"></span>
<span id="cb1-61">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pivot 열 선택 및 ratio 계산</span></span>
<span id="cb1-62">        ratios <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-63">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(A)):</span>
<span id="cb1-64">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> A[i][min_rc_idx] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb1-65">                ratios.append((A[i][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> A[i][min_rc_idx], i))</span>
<span id="cb1-66">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb1-67">                ratios.append((<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inf'</span>), i))</span>
<span id="cb1-68">        </span>
<span id="cb1-69">        min_ratio, pivot_row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(ratios)</span>
<span id="cb1-70">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> min_ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inf'</span>):</span>
<span id="cb1-71">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unbounded solution detected."</span>)</span>
<span id="cb1-72">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb1-73"></span>
<span id="cb1-74">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Entering variable: x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>min_rc_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-75">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Leaving variable: x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>basic[pivot_row] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-76"></span>
<span id="cb1-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pivot 연산</span></span>
<span id="cb1-78">        pivot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A[pivot_row][min_rc_idx]</span>
<span id="cb1-79">        A[pivot_row] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> pivot <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> A[pivot_row]]</span>
<span id="cb1-80">        </span>
<span id="cb1-81">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다른 행 업데이트</span></span>
<span id="cb1-82">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(A)):</span>
<span id="cb1-83">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> pivot_row:</span>
<span id="cb1-84">                factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A[i][min_rc_idx]</span>
<span id="cb1-85">                A[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [A[i][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> A[pivot_row][j] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj))]</span>
<span id="cb1-86">        </span>
<span id="cb1-87">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 목적함수 업데이트</span></span>
<span id="cb1-88">        factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obj[min_rc_idx]</span>
<span id="cb1-89">        obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [obj[j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> A[pivot_row][j] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj))]</span>
<span id="cb1-90">        </span>
<span id="cb1-91">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기본 변수 업데이트</span></span>
<span id="cb1-92">        leaving_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> basic[pivot_row]</span>
<span id="cb1-93">        basic[pivot_row] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min_rc_idx</span>
<span id="cb1-94">        non_basic[non_basic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> min_rc_idx] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> leaving_var</span>
<span id="cb1-95">        </span>
<span id="cb1-96">        iteration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-97"></span>
<span id="cb1-98">simplex()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Iteration 1
============================================================

Current Simplex Tableau:
+----+-----+------+------+------+------+------+------+-------+
|    |   Z |   x1 |   x2 | x3   |   x4 |   x5 |   x6 |   RHS |
+====+=====+======+======+======+======+======+======+=======+
| Z  |   1 |   -6 |   -1 | -2   |    0 |    0 |    0 |     0 |
+----+-----+------+------+------+------+------+------+-------+
| x4 |   0 |    2 |    2 | 1/2  |    1 |    0 |    0 |     2 |
+----+-----+------+------+------+------+------+------+-------+
| x5 |   0 |   -4 |   -2 | -3/2 |    0 |    1 |    0 |     3 |
+----+-----+------+------+------+------+------+------+-------+
| x6 |   0 |    1 |    2 | 1/2  |    0 |    0 |    1 |     1 |
+----+-----+------+------+------+------+------+------+-------+
Entering variable: x1
Leaving variable: x4

Iteration 2
============================================================

Current Simplex Tableau:
+----+-----+------+------+------+------+------+------+-------+
|    |   Z |   x1 |   x2 | x3   | x4   |   x5 |   x6 |   RHS |
+====+=====+======+======+======+======+======+======+=======+
| Z  |   1 |    0 |    5 | -1/2 | 3    |    0 |    0 |     6 |
+----+-----+------+------+------+------+------+------+-------+
| x1 |   0 |    1 |    1 | 1/4  | 1/2  |    0 |    0 |     1 |
+----+-----+------+------+------+------+------+------+-------+
| x5 |   0 |    0 |    2 | -1/2 | 2    |    1 |    0 |     7 |
+----+-----+------+------+------+------+------+------+-------+
| x6 |   0 |    0 |    1 | 1/4  | -1/2 |    0 |    1 |     0 |
+----+-----+------+------+------+------+------+------+-------+
Entering variable: x3
Leaving variable: x6

Iteration 3
============================================================

Current Simplex Tableau:
+----+-----+------+------+------+------+------+------+-------+
|    |   Z |   x1 |   x2 |   x3 |   x4 |   x5 |   x6 |   RHS |
+====+=====+======+======+======+======+======+======+=======+
| Z  |   1 |    0 |    7 |    0 |    2 |    0 |    2 |     6 |
+----+-----+------+------+------+------+------+------+-------+
| x1 |   0 |    1 |    0 |    0 |    1 |    0 |   -1 |     1 |
+----+-----+------+------+------+------+------+------+-------+
| x5 |   0 |    0 |    4 |    0 |    1 |    1 |    2 |     7 |
+----+-----+------+------+------+------+------+------+-------+
| x3 |   0 |    0 |    4 |    1 |   -2 |    0 |    4 |     0 |
+----+-----+------+------+------+------+------+------+-------+
Optimal solution reached.
Optimal Solution:
x1 = 1
x2 = 0
x3 = 0
x4 = 0
x5 = 7
x6 = 0
Objective Value = 6</code></pre>
</div>
</div>
</section>
<section id="big-m-method" class="level2">
<h2 class="anchored" data-anchor-id="big-m-method">Big M Method</h2>
<div id="0f230ea8" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fractions <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Fraction</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tabulate <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tabulate</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sympy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> symbols, simplify, oo</span>
<span id="cb3-5"></span>
<span id="cb3-6">M <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> symbols(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'M'</span>)</span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 초기 설정</span></span>
<span id="cb3-9">obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, M, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, M, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb3-10">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb3-11">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>],</span>
<span id="cb3-12">    [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]</span>
<span id="cb3-13">]</span>
<span id="cb3-14">basic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x5, x6</span></span>
<span id="cb3-15">non_basic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x1, x2, x3, x4</span></span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> to_fraction(array):</span>
<span id="cb3-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [Fraction(x).limit_denominator() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(x, (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> x <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> array]</span>
<span id="cb3-19"></span>
<span id="cb3-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 초기 배열을 분수로 변환</span></span>
<span id="cb3-21">obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> to_fraction(obj)</span>
<span id="cb3-22">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [to_fraction(row) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> A]</span>
<span id="cb3-23"></span>
<span id="cb3-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> print_table():</span>
<span id="cb3-25">    headers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RHS"</span>]</span>
<span id="cb3-26">    table <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> obj]]</span>
<span id="cb3-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(A)):</span>
<span id="cb3-28">        row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>basic[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> A[i]]</span>
<span id="cb3-29">        table.append(row)</span>
<span id="cb3-30">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Current Simplex Tableau:"</span>)</span>
<span id="cb3-31">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tabulate(table, headers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>headers, tablefmt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grid"</span>))</span>
<span id="cb3-32"></span>
<span id="cb3-33"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> adjust_obj_for_big_m():</span>
<span id="cb3-34">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">global</span> obj</span>
<span id="cb3-35">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Adjusting Objective Function for Big M Method"</span>)</span>
<span id="cb3-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(basic)):</span>
<span id="cb3-37">        basic_var_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> basic[i]</span>
<span id="cb3-38">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> obj[basic_var_idx] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 인공변수일 경우(M이 포함된 경우)</span></span>
<span id="cb3-39">            factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obj[basic_var_idx]</span>
<span id="cb3-40">            obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [simplify(obj[j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> A[i][j]) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj))]</span>
<span id="cb3-41"></span>
<span id="cb3-42"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> simplex():</span>
<span id="cb3-43">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">global</span> obj, A, basic, non_basic</span>
<span id="cb3-44">    </span>
<span id="cb3-45">    adjust_obj_for_big_m()</span>
<span id="cb3-46">    print_table()</span>
<span id="cb3-47">    </span>
<span id="cb3-48">    iteration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb3-50">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Iteration </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>iteration<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-51">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb3-52">        print_table()</span>
<span id="cb3-53"></span>
<span id="cb3-54">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 음의 계수 찾기 (entering variable)</span></span>
<span id="cb3-55">        eval_obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [x.evalf(subs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{M: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span>}) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x.has(M) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> obj[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb3-56">        min_rc_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> j: eval_obj[j])</span>
<span id="cb3-57">        </span>
<span id="cb3-58">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> eval_obj[min_rc_idx] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb3-59">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Optimal solution reached."</span>)</span>
<span id="cb3-60">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최적 해 출력</span></span>
<span id="cb3-61">            solution <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)}</span>
<span id="cb3-62">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, var_idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(basic):</span>
<span id="cb3-63">                solution[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>var_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A[i][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb3-64">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Optimal Solution:"</span>)</span>
<span id="cb3-65">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> var, val <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> solution.items():</span>
<span id="cb3-66">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>var<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>val<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-67">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Objective Value = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>obj[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-68">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb3-69"></span>
<span id="cb3-70">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pivot 열 선택 및 ratio 계산</span></span>
<span id="cb3-71">        ratios <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb3-72">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(A)):</span>
<span id="cb3-73">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> A[i][min_rc_idx] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb3-74">                ratios.append((A[i][<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> A[i][min_rc_idx], i))</span>
<span id="cb3-75">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb3-76">                ratios.append((oo, i))</span>
<span id="cb3-77">        </span>
<span id="cb3-78">        min_ratio, pivot_row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(ratios)</span>
<span id="cb3-79">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> min_ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> oo:</span>
<span id="cb3-80">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unbounded solution detected."</span>)</span>
<span id="cb3-81">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb3-82"></span>
<span id="cb3-83">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Entering variable: x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>min_rc_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-84">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Leaving variable: x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>basic[pivot_row] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-85"></span>
<span id="cb3-86">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pivot 연산</span></span>
<span id="cb3-87">        pivot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A[pivot_row][min_rc_idx]</span>
<span id="cb3-88">        A[pivot_row] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [simplify(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> pivot) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> A[pivot_row]]</span>
<span id="cb3-89">        </span>
<span id="cb3-90">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다른 행 업데이트</span></span>
<span id="cb3-91">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(A)):</span>
<span id="cb3-92">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> pivot_row:</span>
<span id="cb3-93">                factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A[i][min_rc_idx]</span>
<span id="cb3-94">                A[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [simplify(A[i][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> A[pivot_row][j]) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj))]</span>
<span id="cb3-95">        </span>
<span id="cb3-96">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 목적함수 업데이트</span></span>
<span id="cb3-97">        factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obj[min_rc_idx]</span>
<span id="cb3-98">        obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [simplify(obj[j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> A[pivot_row][j]) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obj))]</span>
<span id="cb3-99">        </span>
<span id="cb3-100">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기본 변수 업데이트</span></span>
<span id="cb3-101">        leaving_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> basic[pivot_row]</span>
<span id="cb3-102">        basic[pivot_row] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min_rc_idx</span>
<span id="cb3-103">        non_basic[non_basic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> min_rc_idx] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> leaving_var</span>
<span id="cb3-104">        </span>
<span id="cb3-105">        iteration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-106"></span>
<span id="cb3-107">simplex()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Adjusting Objective Function for Big M Method

Current Simplex Tableau:
+----+-----+---------+---------+---------+------+------+------+------+-------+
|    |   Z | x1      | x2      | x3      | x4   |   x5 | x6   |   x7 | RHS   |
+====+=====+=========+=========+=========+======+======+======+======+=======+
| Z  |   1 | 2 - 4*M | 3 - 6*M | 1 - 2*M | M    |    0 | M    |    0 | -14*M |
+----+-----+---------+---------+---------+------+------+------+------+-------+
| x5 |   0 | 1       | 4       | 2       | -1   |    1 | 0    |    0 | 8     |
+----+-----+---------+---------+---------+------+------+------+------+-------+
| x7 |   0 | 3       | 2       | 0       | 0    |    0 | -1   |    1 | 6     |
+----+-----+---------+---------+---------+------+------+------+------+-------+

Iteration 1
============================================================

Current Simplex Tableau:
+----+-----+---------+---------+---------+------+------+------+------+-------+
|    |   Z | x1      | x2      | x3      | x4   |   x5 | x6   |   x7 | RHS   |
+====+=====+=========+=========+=========+======+======+======+======+=======+
| Z  |   1 | 2 - 4*M | 3 - 6*M | 1 - 2*M | M    |    0 | M    |    0 | -14*M |
+----+-----+---------+---------+---------+------+------+------+------+-------+
| x5 |   0 | 1       | 4       | 2       | -1   |    1 | 0    |    0 | 8     |
+----+-----+---------+---------+---------+------+------+------+------+-------+
| x7 |   0 | 3       | 2       | 0       | 0    |    0 | -1   |    1 | 6     |
+----+-----+---------+---------+---------+------+------+------+------+-------+
Entering variable: x2
Leaving variable: x5

Iteration 2
============================================================

Current Simplex Tableau:
+----+-----+-------------+------+---------+-----------+-------------+------+------+----------+
|    |   Z | x1          |   x2 | x3      | x4        | x5          | x6   |   x7 | RHS      |
+====+=====+=============+======+=========+===========+=============+======+======+==========+
| Z  |   1 | 5/4 - 5*M/2 |    0 | M - 1/2 | 3/4 - M/2 | 3*M/2 - 3/4 | M    |    0 | -2*M - 6 |
+----+-----+-------------+------+---------+-----------+-------------+------+------+----------+
| x2 |   0 | 1/4         |    1 | 1/2     | -1/4      | 1/4         | 0    |    0 | 2        |
+----+-----+-------------+------+---------+-----------+-------------+------+------+----------+
| x7 |   0 | 5/2         |    0 | -1      | 1/2       | -1/2        | -1   |    1 | 2        |
+----+-----+-------------+------+---------+-----------+-------------+------+------+----------+
Entering variable: x1
Leaving variable: x7

Iteration 3
============================================================

Current Simplex Tableau:
+----+-----+------+------+------+-------+---------+------+---------+-------+
|    |   Z |   x1 |   x2 | x3   | x4    | x5      | x6   | x7      | RHS   |
+====+=====+======+======+======+=======+=========+======+=========+=======+
| Z  |   1 |    0 |    0 | 0    | 1/2   | M - 1/2 | 1/2  | M - 1/2 | -7    |
+----+-----+------+------+------+-------+---------+------+---------+-------+
| x2 |   0 |    0 |    1 | 3/5  | -3/10 | 3/10    | 1/10 | -1/10   | 9/5   |
+----+-----+------+------+------+-------+---------+------+---------+-------+
| x1 |   0 |    1 |    0 | -2/5 | 1/5   | -1/5    | -2/5 | 2/5     | 4/5   |
+----+-----+------+------+------+-------+---------+------+---------+-------+
Optimal solution reached.
Optimal Solution:
x1 = 4/5
x2 = 9/5
x3 = 0
x4 = 0
x5 = 0
x6 = 0
x7 = 0
Objective Value = -7</code></pre>
</div>
</div>
</section>
<section id="grubi" class="level2">
<h2 class="anchored" data-anchor-id="grubi">Grubi</h2>
<div id="508f36bf" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> gurobipy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb5-2"></span>
<span id="cb5-3">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Model(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ex4.4-6"</span>)</span>
<span id="cb5-4">model.setParam(GRB.Param.OutputFlag, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-5"></span>
<span id="cb5-6">x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.addVar(vtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>GRB.CONTINUOUS, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x1"</span>)</span>
<span id="cb5-7">x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.addVar(vtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>GRB.CONTINUOUS, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x2"</span>)</span>
<span id="cb5-8"></span>
<span id="cb5-9">model.setObjective(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x2, GRB.MINIMIZE)</span>
<span id="cb5-10"></span>
<span id="cb5-11">model.addConstr(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb5-12">model.addConstr(x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb5-13"></span>
<span id="cb5-14">model.optimize()</span>
<span id="cb5-15"></span>
<span id="cb5-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> var <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> model.getVars():</span>
<span id="cb5-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>var<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>varName<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>var<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb5-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Obj: "</span>, model.objVal)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>x1: 1.0
x2: 2.0
Obj:  40.0</code></pre>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>OR</category>
  <category>학부 정리</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/01.html</guid>
  <pubDate>Wed, 02 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>배치 생산 및 경제적 주문량 모형</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/06.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<ul>
<li>부품을 만드는 공정에 대해 알아봄</li>
</ul>
<section id="setup과-생산주기" class="level2">
<h2 class="anchored" data-anchor-id="setup과-생산주기">setup과 생산주기</h2>
<ul>
<li>Milling machine: 깎아서 만드는 기계</li>
<li>setup: 기계를 준비하는데 필요한 것
<ul>
<li>정확히 하나의 제품을 만드는 경우에도 setup이 필요함</li>
<li>생산하는 양에 관계없이 setup 시간이 일정함</li>
<li>sequence dependent setup: 순서에 따라 setup 시간이 달라짐</li>
</ul></li>
<li>생산주기(production cycle): setup + 생산의 과정을 반복
<ul>
<li>setup은 아무것도 못하고 시간을 버림</li>
</ul></li>
</ul>
</section>
<section id="배치-생산과정" class="level2">
<h2 class="anchored" data-anchor-id="배치-생산과정">배치 생산과정</h2>
<ul>
<li>batch: 흐름 단위들의 집합
<ul>
<li>처리능력: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bbatch%20size%7D%7Bsetup%20time%20+%20(batch%20size%20x%20processing%20time%20per%20unit)%7D">
<ul>
<li>batch size가 무한히 커질수록 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7Bp%7D">로 수렴</li>
<li>setuptime이 0이여도 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7Bp%7D"></li>
</ul></li>
</ul></li>
<li>batch는 클 수록 좋은가?
<ul>
<li>batch size가 커질수록 처리능력이 증가하지만 재고가 많아짐</li>
<li>→ bottleneck의 경우 batch size를 늘리고, non-bottleneck의 경우 batch size를 줄이는게 좋음</li>
<li>→ <img src="https://latex.codecogs.com/png.latex?frac%7BB%7D%7BS%20+%20Bp%7D%20=%20R%20%E2%86%92%20B%20=%20%5Cfrac%7BSR%7D%7B1%20-%20Rp%7D"></li>
</ul></li>
<li>생산주기와 demand를 맞추지 못하면 재고가 무한히 늘어남</li>
</ul>
</section>
<section id="경제적-주문량-모형" class="level2">
<h2 class="anchored" data-anchor-id="경제적-주문량-모형">경제적 주문량 모형</h2>
<ul>
<li>외부 공급자에게 부품을 주문하여 생산 및 배송이 이루어지는 경우</li>
</ul>
<ol type="1">
<li>구매비용(purchase cost / variable cost)</li>
<li>단위 재고 비용</li>
<li>셋업(주문) 비용 (Fixed cost)</li>
</ol>
</section>
<section id="buffer-or-suffer" class="level2">
<h2 class="anchored" data-anchor-id="buffer-or-suffer">buffer or suffer</h2>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>생산시스템관리</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/06.html</guid>
  <pubDate>Tue, 01 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Transformation</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/10.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<ol type="1">
<li>concat</li>
</ol>
<ul>
<li>axis=0 row</li>
<li>axis=1 column</li>
</ul>
<ol start="2" type="1">
<li>to_csv</li>
</ol>
<section id="train-test-split" class="level2">
<h2 class="anchored" data-anchor-id="train-test-split">train test split</h2>
<ol type="1">
<li>Hold out method: sub sampling</li>
</ol>
<ul>
<li>validation data set: 하이퍼파라미터를 튜닝</li>
<li>층화추출법: stratified sampling</li>
</ul>
<ol type="1">
<li>resampling method: Hold out을 여러번 반복. variance 극복 bias 극복 x
<ol type="1">
<li>cross validation</li>
</ol>
<ul>
<li>k-fold</li>
<li>leave-one-out:</li>
</ul>
<ol type="1">
<li>bootstrap</li>
</ol></li>
</ol>
</section>
<section id="data의-특성" class="level2">
<h2 class="anchored" data-anchor-id="data의-특성">data의 특성</h2>
<p>volume - Data size big - Data size small(long data) velocity variety veracity(정확성) value</p>
<div id="e5249bf7" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LeaveOneOut</span>
<span id="cb1-3">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]])</span>
<span id="cb1-4">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span>])</span>
<span id="cb1-5">loo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LeaveOneOut()</span>
<span id="cb1-6">loo.get_n_splits(X)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>3</code></pre>
</div>
</div>
<div id="fd598cd2" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KFold</span>
<span id="cb3-2"></span>
<span id="cb3-3">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">39</span>]])</span>
<span id="cb3-4">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb3-5">kf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> KFold(n_splits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7">kf.get_n_splits(X)</span>
<span id="cb3-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> train_index, test_index <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> kf.split(X):</span>
<span id="cb3-9">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRAIN:"</span>, train_index, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TEST:"</span>, test_index)</span>
<span id="cb3-10">    X_train, X_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> X[train_index], X[test_index]</span>
<span id="cb3-11">    y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y[train_index], y[test_index]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>TRAIN: [2 3 4 5] TEST: [0 1]
TRAIN: [0 1 4 5] TEST: [2 3]
TRAIN: [0 1 2 3] TEST: [4 5]</code></pre>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>data mining</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/10.html</guid>
  <pubDate>Tue, 01 Apr 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Homework</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/09.html</link>
  <description><![CDATA[ 




<div id="5c6c0723" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> warnings</span>
<span id="cb1-5"></span>
<span id="cb1-6">warnings.filterwarnings(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ignore'</span>)</span>
<span id="cb1-7"></span>
<span id="cb1-8">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_data/class/carprices.csv"</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10">dataset</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Car Model</th>
<th data-quarto-table-cell-role="th">Mileage</th>
<th data-quarto-table-cell-role="th">Sell Price($)</th>
<th data-quarto-table-cell-role="th">Age(yrs)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>BMW X5</td>
<td>69000</td>
<td>18000</td>
<td>6</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>BMW X5</td>
<td>35000</td>
<td>34000</td>
<td>3</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>BMW X5</td>
<td>57000</td>
<td>26100</td>
<td>5</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>BMW X5</td>
<td>22500</td>
<td>40000</td>
<td>2</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>BMW X5</td>
<td>46000</td>
<td>31500</td>
<td>4</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>Audi A5</td>
<td>59000</td>
<td>29400</td>
<td>5</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>Audi A5</td>
<td>52000</td>
<td>32000</td>
<td>5</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>Audi A5</td>
<td>72000</td>
<td>19300</td>
<td>6</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>Audi A5</td>
<td>91000</td>
<td>12000</td>
<td>8</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>Mercedez Benz C class</td>
<td>67000</td>
<td>22000</td>
<td>6</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>Mercedez Benz C class</td>
<td>83000</td>
<td>20000</td>
<td>7</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>Mercedez Benz C class</td>
<td>79000</td>
<td>21000</td>
<td>7</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">12</td>
<td>Mercedez Benz C class</td>
<td>59000</td>
<td>33000</td>
<td>5</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>scatter plot을 이용해 선형성을 확인하겠습니다.</p>
<p>연속형 변수인 <strong>Mileage</strong>와 <strong>Sell Price($)</strong>에 대해 확인하겠습니다.</p>
<div id="66c9b208" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb2-2"></span>
<span id="cb2-3">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].scatter(dataset.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], dataset.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb2-4">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mileage"</span>)</span>
<span id="cb2-5">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sell Price($)"</span>)</span>
<span id="cb2-6">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mileage vs Sell Price($)"</span>)</span>
<span id="cb2-7"></span>
<span id="cb2-8">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].scatter(dataset.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], dataset.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb2-9">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Age(yrs)"</span>)</span>
<span id="cb2-10">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Price($)"</span>)</span>
<span id="cb2-11">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Age(yrs) vs Price($)"</span>)</span>
<span id="cb2-12"></span>
<span id="cb2-13">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/09_files/figure-html/cell-3-output-1.png" width="982" height="449" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>선형성이 보입니다.<br>
두 변수 모두 linear regression을 적용할 수 있어 보입니다.</p>
<div id="902dce37" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sell Price($)'</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).values</span>
<span id="cb3-2">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset.iloc[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].values</span></code></pre></div>
</div>
<p>독립 변수와 종속 변수를 저장해줍니다.</p>
<div id="25682816" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.compose <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ColumnTransformer</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> OneHotEncoder</span>
<span id="cb4-3"></span>
<span id="cb4-4">ct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ColumnTransformer(transformers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'encoder'</span>, OneHotEncoder(), [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])], remainder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'passthrough'</span>)</span>
<span id="cb4-5">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(ct.fit_transform(x))</span></code></pre></div>
</div>
<p>범주형 변수 <strong>Car Model</strong>에 대해 <strong>one hot encoding</strong>을 적용하였습니다.</p>
<div id="3567fea8" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb5-2"></span>
<span id="cb5-3">X_train, X_test, y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(x, y, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)</span>
<span id="cb5-4">X_train</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>array([[0.0, 1.0, 0.0, 46000, 4],
       [1.0, 0.0, 0.0, 91000, 8],
       [0.0, 0.0, 1.0, 59000, 5],
       [0.0, 1.0, 0.0, 35000, 3],
       [0.0, 1.0, 0.0, 22500, 2],
       [0.0, 0.0, 1.0, 67000, 6],
       [1.0, 0.0, 0.0, 52000, 5],
       [0.0, 0.0, 1.0, 79000, 7],
       [1.0, 0.0, 0.0, 72000, 6],
       [0.0, 1.0, 0.0, 57000, 5]], dtype=object)</code></pre>
</div>
</div>
<div id="e0465df1" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StandardScaler</span>
<span id="cb7-2"></span>
<span id="cb7-3">sc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StandardScaler()</span>
<span id="cb7-4">X_train[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sc.fit_transform(X_train[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:])</span>
<span id="cb7-5">X_test[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sc.transform(X_test[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:])</span>
<span id="cb7-6">X_train</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>array([[0.0, 1.0, 0.0, -0.6199306919491117, -0.6470588235294114],
       [1.0, 0.0, 0.0, 1.695163178400268, 1.7058823529411762],
       [0.0, 0.0, 1.0, 0.048874203929598015, -0.05882352941176448],
       [0.0, 1.0, 0.0, -1.1858425269234045, -1.2352941176470584],
       [0.0, 1.0, 0.0, -1.82892415757601, -1.8235294117647052],
       [0.0, 0.0, 1.0, 0.46044644754726555, 0.5294117647058825],
       [1.0, 0.0, 0.0, -0.31125150923586103, -0.05882352941176448],
       [0.0, 0.0, 1.0, 1.0778048129737667, 1.1176470588235294],
       [1.0, 0.0, 0.0, 0.7176790998083077, 0.5294117647058825],
       [0.0, 1.0, 0.0, -0.05401885697481886, -0.05882352941176448]],
      dtype=object)</code></pre>
</div>
</div>
<p>train set과 test set을 나눈 뒤 연속형 변수에 대해 feature scailing을 진행해줍니다.</p>
<div id="38a3376c" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LinearRegression</span>
<span id="cb9-2"></span>
<span id="cb9-3">regressor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LinearRegression()</span>
<span id="cb9-4">regressor.fit(X_train, y_train)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<style>#sk-container-id-1 {
  /* Definition of color scheme common for light and dark mode */
  --sklearn-color-text: black;
  --sklearn-color-line: gray;
  /* Definition of color scheme for unfitted estimators */
  --sklearn-color-unfitted-level-0: #fff5e6;
  --sklearn-color-unfitted-level-1: #f6e4d2;
  --sklearn-color-unfitted-level-2: #ffe0b3;
  --sklearn-color-unfitted-level-3: chocolate;
  /* Definition of color scheme for fitted estimators */
  --sklearn-color-fitted-level-0: #f0f8ff;
  --sklearn-color-fitted-level-1: #d4ebff;
  --sklearn-color-fitted-level-2: #b3dbfd;
  --sklearn-color-fitted-level-3: cornflowerblue;

  /* Specific color for light theme */
  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));
  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));
  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));
  --sklearn-color-icon: #696969;

  @media (prefers-color-scheme: dark) {
    /* Redefinition of color scheme for dark theme */
    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));
    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));
    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));
    --sklearn-color-icon: #878787;
  }
}

#sk-container-id-1 {
  color: var(--sklearn-color-text);
}

#sk-container-id-1 pre {
  padding: 0;
}

#sk-container-id-1 input.sk-hidden--visually {
  border: 0;
  clip: rect(1px 1px 1px 1px);
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

#sk-container-id-1 div.sk-dashed-wrapped {
  border: 1px dashed var(--sklearn-color-line);
  margin: 0 0.4em 0.5em 0.4em;
  box-sizing: border-box;
  padding-bottom: 0.4em;
  background-color: var(--sklearn-color-background);
}

#sk-container-id-1 div.sk-container {
  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`
     but bootstrap.min.css set `[hidden] { display: none !important; }`
     so we also need the `!important` here to be able to override the
     default hidden behavior on the sphinx rendered scikit-learn.org.
     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */
  display: inline-block !important;
  position: relative;
}

#sk-container-id-1 div.sk-text-repr-fallback {
  display: none;
}

div.sk-parallel-item,
div.sk-serial,
div.sk-item {
  /* draw centered vertical line to link estimators */
  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));
  background-size: 2px 100%;
  background-repeat: no-repeat;
  background-position: center center;
}

/* Parallel-specific style estimator block */

#sk-container-id-1 div.sk-parallel-item::after {
  content: "";
  width: 100%;
  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);
  flex-grow: 1;
}

#sk-container-id-1 div.sk-parallel {
  display: flex;
  align-items: stretch;
  justify-content: center;
  background-color: var(--sklearn-color-background);
  position: relative;
}

#sk-container-id-1 div.sk-parallel-item {
  display: flex;
  flex-direction: column;
}

#sk-container-id-1 div.sk-parallel-item:first-child::after {
  align-self: flex-end;
  width: 50%;
}

#sk-container-id-1 div.sk-parallel-item:last-child::after {
  align-self: flex-start;
  width: 50%;
}

#sk-container-id-1 div.sk-parallel-item:only-child::after {
  width: 0;
}

/* Serial-specific style estimator block */

#sk-container-id-1 div.sk-serial {
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: var(--sklearn-color-background);
  padding-right: 1em;
  padding-left: 1em;
}


/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is
clickable and can be expanded/collapsed.
- Pipeline and ColumnTransformer use this feature and define the default style
- Estimators will overwrite some part of the style using the `sk-estimator` class
*/

/* Pipeline and ColumnTransformer style (default) */

#sk-container-id-1 div.sk-toggleable {
  /* Default theme specific background. It is overwritten whether we have a
  specific estimator or a Pipeline/ColumnTransformer */
  background-color: var(--sklearn-color-background);
}

/* Toggleable label */
#sk-container-id-1 label.sk-toggleable__label {
  cursor: pointer;
  display: block;
  width: 100%;
  margin-bottom: 0;
  padding: 0.5em;
  box-sizing: border-box;
  text-align: center;
}

#sk-container-id-1 label.sk-toggleable__label-arrow:before {
  /* Arrow on the left of the label */
  content: "▸";
  float: left;
  margin-right: 0.25em;
  color: var(--sklearn-color-icon);
}

#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {
  color: var(--sklearn-color-text);
}

/* Toggleable content - dropdown */

#sk-container-id-1 div.sk-toggleable__content {
  max-height: 0;
  max-width: 0;
  overflow: hidden;
  text-align: left;
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-0);
}

#sk-container-id-1 div.sk-toggleable__content.fitted {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-0);
}

#sk-container-id-1 div.sk-toggleable__content pre {
  margin: 0.2em;
  border-radius: 0.25em;
  color: var(--sklearn-color-text);
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-0);
}

#sk-container-id-1 div.sk-toggleable__content.fitted pre {
  /* unfitted */
  background-color: var(--sklearn-color-fitted-level-0);
}

#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {
  /* Expand drop-down */
  max-height: 200px;
  max-width: 100%;
  overflow: auto;
}

#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {
  content: "▾";
}

/* Pipeline/ColumnTransformer-specific style */

#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {
  color: var(--sklearn-color-text);
  background-color: var(--sklearn-color-unfitted-level-2);
}

#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {
  background-color: var(--sklearn-color-fitted-level-2);
}

/* Estimator-specific style */

/* Colorize estimator box */
#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-2);
}

#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-2);
}

#sk-container-id-1 div.sk-label label.sk-toggleable__label,
#sk-container-id-1 div.sk-label label {
  /* The background is the default theme color */
  color: var(--sklearn-color-text-on-default-background);
}

/* On hover, darken the color of the background */
#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {
  color: var(--sklearn-color-text);
  background-color: var(--sklearn-color-unfitted-level-2);
}

/* Label box, darken color on hover, fitted */
#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {
  color: var(--sklearn-color-text);
  background-color: var(--sklearn-color-fitted-level-2);
}

/* Estimator label */

#sk-container-id-1 div.sk-label label {
  font-family: monospace;
  font-weight: bold;
  display: inline-block;
  line-height: 1.2em;
}

#sk-container-id-1 div.sk-label-container {
  text-align: center;
}

/* Estimator-specific */
#sk-container-id-1 div.sk-estimator {
  font-family: monospace;
  border: 1px dotted var(--sklearn-color-border-box);
  border-radius: 0.25em;
  box-sizing: border-box;
  margin-bottom: 0.5em;
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-0);
}

#sk-container-id-1 div.sk-estimator.fitted {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-0);
}

/* on hover */
#sk-container-id-1 div.sk-estimator:hover {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-2);
}

#sk-container-id-1 div.sk-estimator.fitted:hover {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-2);
}

/* Specification for estimator info (e.g. "i" and "?") */

/* Common style for "i" and "?" */

.sk-estimator-doc-link,
a:link.sk-estimator-doc-link,
a:visited.sk-estimator-doc-link {
  float: right;
  font-size: smaller;
  line-height: 1em;
  font-family: monospace;
  background-color: var(--sklearn-color-background);
  border-radius: 1em;
  height: 1em;
  width: 1em;
  text-decoration: none !important;
  margin-left: 1ex;
  /* unfitted */
  border: var(--sklearn-color-unfitted-level-1) 1pt solid;
  color: var(--sklearn-color-unfitted-level-1);
}

.sk-estimator-doc-link.fitted,
a:link.sk-estimator-doc-link.fitted,
a:visited.sk-estimator-doc-link.fitted {
  /* fitted */
  border: var(--sklearn-color-fitted-level-1) 1pt solid;
  color: var(--sklearn-color-fitted-level-1);
}

/* On hover */
div.sk-estimator:hover .sk-estimator-doc-link:hover,
.sk-estimator-doc-link:hover,
div.sk-label-container:hover .sk-estimator-doc-link:hover,
.sk-estimator-doc-link:hover {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-3);
  color: var(--sklearn-color-background);
  text-decoration: none;
}

div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,
.sk-estimator-doc-link.fitted:hover,
div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,
.sk-estimator-doc-link.fitted:hover {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-3);
  color: var(--sklearn-color-background);
  text-decoration: none;
}

/* Span, style for the box shown on hovering the info icon */
.sk-estimator-doc-link span {
  display: none;
  z-index: 9999;
  position: relative;
  font-weight: normal;
  right: .2ex;
  padding: .5ex;
  margin: .5ex;
  width: min-content;
  min-width: 20ex;
  max-width: 50ex;
  color: var(--sklearn-color-text);
  box-shadow: 2pt 2pt 4pt #999;
  /* unfitted */
  background: var(--sklearn-color-unfitted-level-0);
  border: .5pt solid var(--sklearn-color-unfitted-level-3);
}

.sk-estimator-doc-link.fitted span {
  /* fitted */
  background: var(--sklearn-color-fitted-level-0);
  border: var(--sklearn-color-fitted-level-3);
}

.sk-estimator-doc-link:hover span {
  display: block;
}

/* "?"-specific style due to the `<a>` HTML tag */

#sk-container-id-1 a.estimator_doc_link {
  float: right;
  font-size: 1rem;
  line-height: 1em;
  font-family: monospace;
  background-color: var(--sklearn-color-background);
  border-radius: 1rem;
  height: 1rem;
  width: 1rem;
  text-decoration: none;
  /* unfitted */
  color: var(--sklearn-color-unfitted-level-1);
  border: var(--sklearn-color-unfitted-level-1) 1pt solid;
}

#sk-container-id-1 a.estimator_doc_link.fitted {
  /* fitted */
  border: var(--sklearn-color-fitted-level-1) 1pt solid;
  color: var(--sklearn-color-fitted-level-1);
}

/* On hover */
#sk-container-id-1 a.estimator_doc_link:hover {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-3);
  color: var(--sklearn-color-background);
  text-decoration: none;
}

#sk-container-id-1 a.estimator_doc_link.fitted:hover {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-3);
}
</a></style><div id="sk-container-id-1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br>On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden=""><div class="sk-item"><div class="sk-estimator fitted sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-1" type="checkbox" checked=""><label for="sk-estimator-id-1" class="sk-toggleable__label fitted sk-toggleable__label-arrow fitted">&nbsp;&nbsp;LinearRegression<a class="sk-estimator-doc-link fitted" rel="noreferrer" target="_blank" href="https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html">?<span>Documentation for LinearRegression</span></a><span class="sk-estimator-doc-link fitted">i<span>Fitted</span></span></label><div class="sk-toggleable__content fitted"><pre>LinearRegression()</pre></div> </div></div></div></div>
</div>
</div>
<p>모델을 학습시킵니다.</p>
<section id="section" class="level2">
<h2 class="anchored" data-anchor-id="section">1</h2>
<div id="12b4baf0" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ct.transform([[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mercedez Benz C class'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]])</span>
<span id="cb10-2">target[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sc.transform(target[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:])</span>
<span id="cb10-3">y_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> regressor.predict(target)</span>
<span id="cb10-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(y_pred)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[36216.12684278]</code></pre>
</div>
</div>
</section>
<section id="section-1" class="level2">
<h2 class="anchored" data-anchor-id="section-1">2</h2>
<div id="61989431" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ct.transform([[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'BMW X5'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">86000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]])</span>
<span id="cb12-2">target[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sc.transform(target[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:])</span>
<span id="cb12-3">y_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> regressor.predict(target)</span>
<span id="cb12-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(y_pred)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[11152.07829935]</code></pre>
</div>
</div>
</section>
<section id="section-2" class="level2">
<h2 class="anchored" data-anchor-id="section-2">3</h2>
<div id="76cd0041" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(regressor.score(X_test, y_test))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0.8409834346492212</code></pre>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>data mining</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/09.html</guid>
  <pubDate>Mon, 31 Mar 2025 11:45:37 GMT</pubDate>
</item>
<item>
  <title>인건비 추정과 감축</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/05.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="조립공정의-분석" class="level2">
<h2 class="anchored" data-anchor-id="조립공정의-분석">조립공정의 분석</h2>
<ul>
<li>X개를 생산하는데 걸리는 시간
<ul>
<li>가동중인 생산 시스템: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7BX%7D%7BR%7D"></li>
<li>비어있는 생산 시스템: 비어있는 시스템을 흘러 가는데 걸리는 시간 + <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7BX%20-%201%7D%7BR%7D"></li>
</ul></li>
</ul>
<section id="비어있는-시스템을-흘러가는데-걸리는-시간" class="level3">
<h3 class="anchored" data-anchor-id="비어있는-시스템을-흘러가는데-걸리는-시간">비어있는 시스템을 흘러가는데 걸리는 시간</h3>
<ul>
<li><p>Worker-paced process: 모든 작업의 처리시간의 합</p></li>
<li><p>Machine-paced process: 프로세스상의 단계 수 * 병목공정의 처리시간<sup>1</sup></p></li>
</ul>
<ol type="1">
<li><strong>Worker-paced process (작업자 중심 공정)</strong>:
<ul>
<li>각 작업자가 개별적으로 작업을 완료한 후 다음 작업자에게 제품을 전달합니다.</li>
<li>각 작업은 순차적으로 발생하고, 서로 독립적인 속도로 진행됩니다.</li>
<li>따라서 제품이 전체 시스템을 통과하는 시간은 각 작업 단계의 처리 시간의 합입니다.</li>
<li>예: 수작업 조립 라인, 각 작업자가 자신의 작업을 마치고 다음 작업자에게 전달하는 방식</li>
</ul></li>
<li><strong>Machine-paced process (기계 중심 공정)</strong>:
<ul>
<li>모든 작업 단계가 동일한 속도(보통 병목 공정의 속도)로 움직입니다.</li>
<li>컨베이어 벨트와 같이 정해진 사이클 타임으로 모든 작업이 동시에 진행됩니다.</li>
<li>제품이 시스템을 통과하는 총 시간은 [단계 수 × 사이클 타임]으로 계산됩니다.</li>
<li>사이클 타임은 보통 병목 공정의 처리 시간에 의해 결정됩니다.</li>
<li>예: 자동차 조립 라인, 음식 가공 공장의 컨베이어 벨트 시스템</li>
</ul></li>
</ol>
</section>
</section>
<section id="노동량과-유휴시간" class="level2">
<h2 class="anchored" data-anchor-id="노동량과-유휴시간">노동량과 유휴시간</h2>
<ul>
<li>직접 노동 인건비= <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%EB%8B%A8%EC%9C%84%EC%8B%9C%EA%B0%84%EB%8B%B9%20%EC%B4%9D%20%EC%9E%84%EA%B8%88%7D%7B%EB%8B%A8%EC%9C%84%EC%8B%9C%EA%B0%84%EB%8B%B9%20%ED%9D%90%EB%A6%84%EB%A5%A0%7D">
<ul>
<li>실제 노동시간 + 유휴시간(idle time)</li>
</ul></li>
</ul>
<section id="유휴시간-종류" class="level3">
<h3 class="anchored" data-anchor-id="유휴시간-종류">유휴시간 종류</h3>
<ol type="1">
<li>bottleneck에 맞추기 위한 유휴시간</li>
<li>수요에 맞추기 위해 발생하는 유휴시간</li>
</ol>
</section>
<section id="cycle-time주기-시간" class="level3">
<h3 class="anchored" data-anchor-id="cycle-time주기-시간">Cycle time(주기 시간)</h3>
<ul>
<li>flow rate의 역수</li>
<li>1인 작업자의 유휴시간 = cycle time - 작업시간</li>
</ul>
</section>
<section id="평균-노동-활용률" class="level3">
<h3 class="anchored" data-anchor-id="평균-노동-활용률">평균 노동 활용률</h3>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%EB%85%B8%EB%8F%99%EB%9F%89%7D%7B%EB%85%B8%EB%8F%99%EB%9F%89%20+%20%EB%AA%A8%EB%93%A0%20%EC%9E%91%EC%97%85%EC%9E%90%EC%9D%98%20%EC%9C%A0%ED%9C%B4%EC%8B%9C%EA%B0%84%20%EC%B4%9D%ED%95%A9%7D"></li>
</ul>
</section>
</section>
<section id="line-balancing" class="level2">
<h2 class="anchored" data-anchor-id="line-balancing">Line Balancing</h2>
<ul>
<li>프로세스 내부적인 수요와 공급을 맞추는 것</li>
</ul>
<section id="대량생산으로의-확장" class="level3">
<h3 class="anchored" data-anchor-id="대량생산으로의-확장">대량생산으로의 확장</h3>
<ol type="1">
<li>라인의 병렬적 배치</li>
<li>프로세스 단계별 작업자 추가</li>
<li>과업의 분화 및 전문화
<ul>
<li>전문화될수록 라인 밸런싱이 어려워짐</li>
</ul></li>
</ol>


</section>
</section>


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a><div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">각주</h2>

<ol>
<li id="fn1"><p>왜 달라?↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>생산시스템관리</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/05.html</guid>
  <pubDate>Sun, 30 Mar 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>통계적 가설검정</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/statistics/02.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="가설검정" class="level2">
<h2 class="anchored" data-anchor-id="가설검정">가설검정</h2>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?H_0">: 귀무가설. α의 값을 상한으로 지정하고 보수적으로 고려</li>
<li>Type 1 error를 보통 보수적으로 지정하기 때문에 Type 2 error는 높아진다.
<ul>
<li>둘 다 줄이고 싶다면 n을 늘려야 한다.</li>
<li>일반적으로 α(Type 1 error)를 고정하고 원하는 β(Type 2 error)를 만족하는 표본의 크기를 결정한다.</li>
</ul></li>
</ul>
</section>
<section id="대표본-가설검정-표본-크기" class="level2">
<h2 class="anchored" data-anchor-id="대표본-가설검정-표본-크기">대표본 가설검정 표본 크기</h2>
<ul>
<li><p><img src="https://latex.codecogs.com/png.latex?n%20=%20%5Cfrac%7B(z_%7B1%20-%20%5Calpha%7D%20+%20z_%7B1%20-%20%5Cbeta%7D)%5E2%5Csigma%5E2%7D%7B(%5Cmu_1%20-%20%5Cmu_2)%5E2%7D"></p></li>
<li><p>p-value: <img src="https://latex.codecogs.com/png.latex?H_0">를 기각시킬 수 있는 가장 작은 유의수준 α의 값</p></li>
</ul>
</section>
<section id="소표본-가설검정" class="level2">
<h2 class="anchored" data-anchor-id="소표본-가설검정">소표본 가설검정</h2>
<ul>
<li>쌍체표본: 두 집단이 독립이 아니고 서로 연관되어 있는 경우
<ul>
<li>각 쌍의 차이를 계산하여 단일 표본으로 변환 후 분석할 수 있습니다.</li>
</ul></li>
</ul>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>확률과 통계</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/statistics/02.html</guid>
  <pubDate>Wed, 26 Mar 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>제품 설계 기법 및 기업 프로세스 유형</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/04.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="제품-설계-및-개발" class="level2">
<h2 class="anchored" data-anchor-id="제품-설계-및-개발">제품 설계 및 개발</h2>
<section id="설계의-중요성" class="level3">
<h3 class="anchored" data-anchor-id="설계의-중요성">설계의 중요성</h3>
<ul>
<li>총 제품 비용 중 설계가 치지하는 비중은 적지만, 설계의 영향을 받는 비중이 높다.</li>
</ul>
</section>
<section id="제품-설계-프로세스" class="level3">
<h3 class="anchored" data-anchor-id="제품-설계-프로세스">제품 설계 프로세스</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/img/2025-03-30-18-20-54.png" class="img-fluid figure-img"></p>
<figcaption>제품 설계 프로세스</figcaption>
</figure>
</div>
<ul>
<li>아이디어 선정: 소비자의 니즈, 경쟁사 제품 등 벤치마킹(reverse engineering)</li>
<li>제품 선정: 시장 분석, 경제성 분석, 기술 분석</li>
</ul>
</section>
<section id="제조-고려-설계" class="level3">
<h3 class="anchored" data-anchor-id="제조-고려-설계">제조 고려 설계</h3>
<ul>
<li>조립 뿐만아니라 재활용, 분해 단계도 고려</li>
<li>subtract manufacturing보단 additive manufacturing(적층제조, DFAM)을 고려</li>
</ul>
</section>
<section id="표준화-모듈화" class="level3">
<h3 class="anchored" data-anchor-id="표준화-모듈화">표준화 모듈화</h3>
<ul>
<li>표준화: 부품 호환성 및 운영 효율성</li>
<li>모듈화: 표준화된 부품의 집합 &lt;-&gt; integral</li>
</ul>
</section>
<section id="지연전략" class="level3">
<h3 class="anchored" data-anchor-id="지연전략">지연전략</h3>
<ul>
<li>차별화 지연 전략: 수요를 알기 전까지 많은 종류 생산은 지연</li>
</ul>
</section>
</section>
<section id="생산-프로세스의-유형" class="level2">
<h2 class="anchored" data-anchor-id="생산-프로세스의-유형">생산 프로세스의 유형</h2>
<section id="주문충족-방식에-따른-분류" class="level3">
<h3 class="anchored" data-anchor-id="주문충족-방식에-따른-분류">주문충족 방식에 따른 분류</h3>
<ul>
<li>make to stock: 수요가 발생하기 전에 생산. 수요가 예측이 쉬울 경우 적합 (push)</li>
<li>assemble / configure / build to order: 제품 구성요소를 재고로 보유. 고객의 요구에 따라 조립하여 생산. 지연 전략에 맞닿아 있다 (pull)</li>
<li>make to order: 주문에 따른 생산. 옵션이 많거나 고가 제품에 적합 (push-pull)</li>
<li>engineer to order<sup>1</sup>: 고객의 요구에 따라 설계 및 생산. 일회성 프로젝트에 적합 (pull)</li>
</ul>
<p>위로 갈 수록 제공 시간은 짧아지고, 아래로 갈 수록 유연성이 높아진다.</p>
</section>
<section id="생산-흐름에-따른-분류" class="level3">
<h3 class="anchored" data-anchor-id="생산-흐름에-따른-분류">생산 흐름에 따른 분류</h3>
<ul>
<li>프로젝트 프로세스: 일회성 생산. 흐름이라고 할 수는 없다.</li>
<li>개별작업 프로세스(job shop): 공정별 배치. 높은 유연성, 낮은 규모</li>
<li>배치 프로세스: job shop과 라인 프로세스의 중간 형태. batch 수가 맞춰지기 전까지 대기 / 유휴시간 존재.</li>
<li>라인 프로세스<sup>2</sup>: 제품별 배치. 낮은 유연성, 대규모</li>
<li>연속 흐름 프로세스: 멈춤, 수정, 변경 최소화</li>
</ul>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/img/2025-03-30-19-00-39.png" class="img-fluid"></p>
<ul>
<li>다양한 유형의 프로세스와 설비배치를 혼합 적용하는 것이 일반적</li>
</ul>
</section>
<section id="다품종소량생산-개인맞춤생산-시대-도래" class="level3">
<h3 class="anchored" data-anchor-id="다품종소량생산-개인맞춤생산-시대-도래">다품종소량생산, 개인맞춤생산 시대 도래</h3>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/img/2025-03-30-19-03-42.png" class="img-fluid"></p>
<ul>
<li>reconfigurable manufacturing system: 다양한 제품을 생산할 수 있는 유연한 생산 시스템</li>
</ul>
</section>
<section id="cell-manufacturing" class="level3">
<h3 class="anchored" data-anchor-id="cell-manufacturing">cell manufacturing</h3>
<ul>
<li>line process랑 job shop이 혼합된거</li>
<li>비슷한 작업이 필요한 부품들을 하나의 그룹으로 묶어서 전용 셀에서 생산</li>
</ul>


</section>
</section>


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a><div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">각주</h2>

<ol>
<li id="fn1"><p>mto랑 eto 뭐가 다르지. 그냥 대충 뭐 eto가 더 세부적인 그런 느낌인가↩︎</p></li>
<li id="fn2"><p>라인 프로세스랑 연속흐름 프로세스는 뭐가 다르지 → 연속 흐름은 계속 흘러서 멈추기 힘듦↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>생산시스템관리</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/04.html</guid>
  <pubDate>Tue, 25 Mar 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>preprocessing</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/08.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div id="ea21ad9f" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> chardet</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_data/class/2012년_1당사자_법규위반별_주야별_교통사고.csv"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rb"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb1-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(chardet.detect(f.read()))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'encoding': 'EUC-KR', 'confidence': 0.99, 'language': 'Korean'}</code></pre>
</div>
</div>
<div id="cd8ebb07" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb3-2"></span>
<span id="cb3-3">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(</span>
<span id="cb3-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_data/class/2012년_1당사자_법규위반별_주야별_교통사고.csv"</span>, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EUC-KR"</span></span>
<span id="cb3-5">)</span>
<span id="cb3-6">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">법규위반</th>
<th data-quarto-table-cell-role="th">주야</th>
<th data-quarto-table-cell-role="th">발생건수</th>
<th data-quarto-table-cell-role="th">사망자수</th>
<th data-quarto-table-cell-role="th">부상자수</th>
<th data-quarto-table-cell-role="th">중상</th>
<th data-quarto-table-cell-role="th">경상</th>
<th data-quarto-table-cell-role="th">부상신고</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>과속</td>
<td>주</td>
<td>159</td>
<td>34</td>
<td>334</td>
<td>140</td>
<td>178</td>
<td>16</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>과속</td>
<td>야</td>
<td>218</td>
<td>73</td>
<td>348</td>
<td>200</td>
<td>139</td>
<td>9</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>교차로 통행방법 위반</td>
<td>주</td>
<td>8817</td>
<td>82</td>
<td>14031</td>
<td>3915</td>
<td>9530</td>
<td>586</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>교차로 통행방법 위반</td>
<td>야</td>
<td>5904</td>
<td>29</td>
<td>9728</td>
<td>2401</td>
<td>6884</td>
<td>443</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>기타</td>
<td>주</td>
<td>9388</td>
<td>141</td>
<td>14070</td>
<td>4271</td>
<td>9217</td>
<td>582</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>기타</td>
<td>야</td>
<td>6073</td>
<td>56</td>
<td>9218</td>
<td>2348</td>
<td>6457</td>
<td>413</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>보행자 보호의무 위반</td>
<td>주</td>
<td>3772</td>
<td>80</td>
<td>3914</td>
<td>2063</td>
<td>1729</td>
<td>122</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>보행자 보호의무 위반</td>
<td>야</td>
<td>3334</td>
<td>94</td>
<td>3535</td>
<td>1802</td>
<td>1626</td>
<td>107</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>신호위반</td>
<td>주</td>
<td>12552</td>
<td>210</td>
<td>20396</td>
<td>6816</td>
<td>12765</td>
<td>815</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>신호위반</td>
<td>야</td>
<td>12755</td>
<td>179</td>
<td>21724</td>
<td>7177</td>
<td>13749</td>
<td>798</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>안전거리 미확보</td>
<td>주</td>
<td>12408</td>
<td>57</td>
<td>22392</td>
<td>4509</td>
<td>16882</td>
<td>1001</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>안전거리 미확보</td>
<td>야</td>
<td>9867</td>
<td>40</td>
<td>17422</td>
<td>3025</td>
<td>13644</td>
<td>753</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">12</td>
<td>안전운전 의무 불이행</td>
<td>주</td>
<td>62608</td>
<td>1740</td>
<td>91076</td>
<td>28081</td>
<td>58472</td>
<td>4523</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">13</td>
<td>안전운전 의무 불이행</td>
<td>야</td>
<td>62783</td>
<td>2132</td>
<td>92942</td>
<td>26451</td>
<td>62209</td>
<td>4282</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">14</td>
<td>중앙선 침범</td>
<td>주</td>
<td>6825</td>
<td>243</td>
<td>12427</td>
<td>4658</td>
<td>7339</td>
<td>430</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">15</td>
<td>중앙선 침범</td>
<td>야</td>
<td>6193</td>
<td>202</td>
<td>11008</td>
<td>3846</td>
<td>6770</td>
<td>392</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="0c1963b5" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_data/class/vote.csv"</span>)</span>
<span id="cb4-2">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">gender</th>
<th data-quarto-table-cell-role="th">region</th>
<th data-quarto-table-cell-role="th">edu</th>
<th data-quarto-table-cell-role="th">income</th>
<th data-quarto-table-cell-role="th">age</th>
<th data-quarto-table-cell-role="th">score_gov</th>
<th data-quarto-table-cell-role="th">score_progress</th>
<th data-quarto-table-cell-role="th">score_intention</th>
<th data-quarto-table-cell-role="th">vote</th>
<th data-quarto-table-cell-role="th">parties</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>1</td>
<td>4</td>
<td>3</td>
<td>3</td>
<td>3</td>
<td>2</td>
<td>2</td>
<td>4.0</td>
<td>1</td>
<td>2</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>1</td>
<td>5</td>
<td>2</td>
<td>3</td>
<td>3</td>
<td>2</td>
<td>4</td>
<td>3.0</td>
<td>0</td>
<td>3</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>1</td>
<td>3</td>
<td>1</td>
<td>2</td>
<td>4</td>
<td>1</td>
<td>3</td>
<td>2.8</td>
<td>1</td>
<td>4</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2</td>
<td>1</td>
<td>2</td>
<td>1</td>
<td>3</td>
<td>5</td>
<td>4</td>
<td>2.6</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>2</td>
<td>4</td>
<td>4</td>
<td>3</td>
<td>2.4</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">206</td>
<td>1</td>
<td>4</td>
<td>1</td>
<td>4</td>
<td>4</td>
<td>3</td>
<td>3</td>
<td>1.8</td>
<td>1</td>
<td>2</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">207</td>
<td>1</td>
<td>1</td>
<td>2</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>2.6</td>
<td>1</td>
<td>4</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">208</td>
<td>1</td>
<td>2</td>
<td>2</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>3</td>
<td>2.6</td>
<td>1</td>
<td>2</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">209</td>
<td>1</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>3</td>
<td>2</td>
<td>4.0</td>
<td>1</td>
<td>4</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">210</td>
<td>2</td>
<td>1</td>
<td>2</td>
<td>2</td>
<td>2</td>
<td>3</td>
<td>3</td>
<td>3.8</td>
<td>1</td>
<td>2</td>
</tr>
</tbody>
</table>

<p>211 rows × 10 columns</p>
</div>
</div>
</div>
<div id="8429638d" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.iloc[:, :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]</span>
<span id="cb5-2">x</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">gender</th>
<th data-quarto-table-cell-role="th">region</th>
<th data-quarto-table-cell-role="th">edu</th>
<th data-quarto-table-cell-role="th">income</th>
<th data-quarto-table-cell-role="th">age</th>
<th data-quarto-table-cell-role="th">score_gov</th>
<th data-quarto-table-cell-role="th">score_progress</th>
<th data-quarto-table-cell-role="th">score_intention</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>1</td>
<td>4</td>
<td>3</td>
<td>3</td>
<td>3</td>
<td>2</td>
<td>2</td>
<td>4.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>1</td>
<td>5</td>
<td>2</td>
<td>3</td>
<td>3</td>
<td>2</td>
<td>4</td>
<td>3.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>1</td>
<td>3</td>
<td>1</td>
<td>2</td>
<td>4</td>
<td>1</td>
<td>3</td>
<td>2.8</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2</td>
<td>1</td>
<td>2</td>
<td>1</td>
<td>3</td>
<td>5</td>
<td>4</td>
<td>2.6</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>2</td>
<td>4</td>
<td>4</td>
<td>3</td>
<td>2.4</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">206</td>
<td>1</td>
<td>4</td>
<td>1</td>
<td>4</td>
<td>4</td>
<td>3</td>
<td>3</td>
<td>1.8</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">207</td>
<td>1</td>
<td>1</td>
<td>2</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>2.6</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">208</td>
<td>1</td>
<td>2</td>
<td>2</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>3</td>
<td>2.6</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">209</td>
<td>1</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>3</td>
<td>2</td>
<td>4.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">210</td>
<td>2</td>
<td>1</td>
<td>2</td>
<td>2</td>
<td>2</td>
<td>3</td>
<td>3</td>
<td>3.8</td>
</tr>
</tbody>
</table>

<p>211 rows × 8 columns</p>
</div>
</div>
</div>
<div id="46c5cc81" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vote"</span>]</span>
<span id="cb6-2">y</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>0      1
1      0
2      1
3      1
4      1
      ..
206    1
207    1
208    1
209    1
210    1
Name: vote, Length: 211, dtype: int64</code></pre>
</div>
</div>
<div id="311d08f3" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb8-2"></span>
<span id="cb8-3">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_data/class/Car-selling price.csv"</span>)</span>
<span id="cb8-4">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Mileage</th>
<th data-quarto-table-cell-role="th">Age(yrs)</th>
<th data-quarto-table-cell-role="th">Sell Price($)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>69000</td>
<td>6</td>
<td>18000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>35000</td>
<td>3</td>
<td>34000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>57000</td>
<td>5</td>
<td>26100</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>22500</td>
<td>2</td>
<td>40000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>46000</td>
<td>4</td>
<td>31500</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>59000</td>
<td>5</td>
<td>26750</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>52000</td>
<td>5</td>
<td>32000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>72000</td>
<td>6</td>
<td>19300</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>91000</td>
<td>8</td>
<td>12000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>67000</td>
<td>6</td>
<td>22000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>83000</td>
<td>7</td>
<td>18700</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>79000</td>
<td>7</td>
<td>19500</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">12</td>
<td>59000</td>
<td>5</td>
<td>26000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">13</td>
<td>58780</td>
<td>4</td>
<td>27500</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">14</td>
<td>82450</td>
<td>7</td>
<td>19400</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">15</td>
<td>25400</td>
<td>3</td>
<td>35000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">16</td>
<td>28000</td>
<td>2</td>
<td>35500</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">17</td>
<td>69000</td>
<td>5</td>
<td>19700</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">18</td>
<td>87600</td>
<td>8</td>
<td>12800</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">19</td>
<td>52000</td>
<td>5</td>
<td>18200</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="eef02a28" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scatter Diagram"</span>)</span>
<span id="cb9-2">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mileage"</span>)</span>
<span id="cb9-3">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sell Price($)"</span>)</span>
<span id="cb9-4">plt.scatter(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mileage"</span>], df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sell Price($)"</span>])</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/08_files/figure-html/cell-8-output-1.png" width="610" height="449" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="5384c7bc" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb10-2"></span>
<span id="cb10-3">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mileage"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Age(yrs)"</span>]]</span>
<span id="cb10-4">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sell Price($)"</span>]</span>
<span id="cb10-5"></span>
<span id="cb10-6">X_train, X_test, y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(x, y, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)</span></code></pre></div>
</div>
<div id="0deac85d" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Binarizer</span>
<span id="cb11-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb11-3"></span>
<span id="cb11-4">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span>], [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.2</span>], [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.3</span>], [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.4</span>], [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span>]])</span>
<span id="cb11-5">scaler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Binarizer(threshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>)</span>
<span id="cb11-6">scaler.fit(data)</span>
<span id="cb11-7">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler.transform(data)</span>
<span id="cb11-8">result</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>array([[0.],
       [0.],
       [1.],
       [1.],
       [1.]])</code></pre>
</div>
</div>
<div id="f1883459" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MinMaxScaler</span>
<span id="cb13-2"></span>
<span id="cb13-3">scaler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MinMaxScaler()</span>
<span id="cb13-4">scaler.fit(data)</span>
<span id="cb13-5">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler.transform(data)</span>
<span id="cb13-6">result</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>array([[0.  ],
       [0.25],
       [0.5 ],
       [0.75],
       [1.  ]])</code></pre>
</div>
</div>
<div id="8deacbb8" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb15-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Normalizer</span>
<span id="cb15-3"></span>
<span id="cb15-4">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>], [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>], [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.0</span>], [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.0</span>], [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.0</span>]])</span>
<span id="cb15-5"></span>
<span id="cb15-6">scaler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Normalizer(norm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l2'</span>)</span>
<span id="cb15-7">X_transformed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler.fit_transform(data.T).T</span>
<span id="cb15-8">X_transformed</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>array([[0.13483997, 0.21081851],
       [0.26967994, 0.31622777],
       [0.40451992, 0.42163702],
       [0.53935989, 0.52704628],
       [0.67419986, 0.63245553]])</code></pre>
</div>
</div>
<div id="00037616" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MinMaxScaler</span>
<span id="cb17-2">minmax_scaler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MinMaxScaler(feature_range<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb17-3">minmax_scaler.fit_transform(data)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre><code>array([[0.  , 0.  ],
       [0.25, 0.25],
       [0.5 , 0.5 ],
       [0.75, 0.75],
       [1.  , 1.  ]])</code></pre>
</div>
</div>
<div id="b3f95cc0" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_data/class/homeprices.csv'</span>)</span>
<span id="cb19-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(data)</span>
<span id="cb19-3"></span>
<span id="cb19-4">dummies <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.get_dummies(df.town)</span>
<span id="cb19-5">merged <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([df, dummies], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span>
<span id="cb19-6">merged</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">town</th>
<th data-quarto-table-cell-role="th">area</th>
<th data-quarto-table-cell-role="th">price</th>
<th data-quarto-table-cell-role="th">monroe township</th>
<th data-quarto-table-cell-role="th">robinsville</th>
<th data-quarto-table-cell-role="th">west windsor</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>monroe township</td>
<td>2600</td>
<td>550000</td>
<td>True</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>monroe township</td>
<td>3000</td>
<td>565000</td>
<td>True</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>monroe township</td>
<td>3200</td>
<td>610000</td>
<td>True</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>monroe township</td>
<td>3600</td>
<td>680000</td>
<td>True</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>monroe township</td>
<td>4000</td>
<td>725000</td>
<td>True</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>west windsor</td>
<td>2600</td>
<td>585000</td>
<td>False</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>west windsor</td>
<td>2800</td>
<td>615000</td>
<td>False</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>west windsor</td>
<td>3300</td>
<td>650000</td>
<td>False</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>west windsor</td>
<td>3600</td>
<td>710000</td>
<td>False</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>robinsville</td>
<td>2600</td>
<td>575000</td>
<td>False</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>robinsville</td>
<td>2900</td>
<td>600000</td>
<td>False</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>robinsville</td>
<td>3100</td>
<td>620000</td>
<td>False</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">12</td>
<td>robinsville</td>
<td>3600</td>
<td>695000</td>
<td>False</td>
<td>True</td>
<td>False</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="6c3acc55" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">final <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> merged.drop([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'town'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'west windsor'</span>], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span>
<span id="cb20-2">final</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">area</th>
<th data-quarto-table-cell-role="th">price</th>
<th data-quarto-table-cell-role="th">monroe township</th>
<th data-quarto-table-cell-role="th">robinsville</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2600</td>
<td>550000</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>3000</td>
<td>565000</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>3200</td>
<td>610000</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>3600</td>
<td>680000</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>4000</td>
<td>725000</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>2600</td>
<td>585000</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>2800</td>
<td>615000</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>3300</td>
<td>650000</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>3600</td>
<td>710000</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>2600</td>
<td>575000</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>2900</td>
<td>600000</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>3100</td>
<td>620000</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">12</td>
<td>3600</td>
<td>695000</td>
<td>False</td>
<td>True</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="94d8fbde" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> final.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'price'</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span>
<span id="cb21-2">X</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">area</th>
<th data-quarto-table-cell-role="th">monroe township</th>
<th data-quarto-table-cell-role="th">robinsville</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2600</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>3000</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>3200</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>3600</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>4000</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>2600</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>2800</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>3300</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>3600</td>
<td>False</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>2600</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>2900</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>3100</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">12</td>
<td>3600</td>
<td>False</td>
<td>True</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="6678a247" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> final.price</span>
<span id="cb22-2">y</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>0     550000
1     565000
2     610000
3     680000
4     725000
5     585000
6     615000
7     650000
8     710000
9     575000
10    600000
11    620000
12    695000
Name: price, dtype: int64</code></pre>
</div>
</div>
<div id="067a6f13" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LinearRegression</span>
<span id="cb24-2">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LinearRegression()</span>
<span id="cb24-3">model.fit(X, y)</span>
<span id="cb24-4">model.predict([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/home/cryscham123/.local/lib/python3.12/site-packages/sklearn/base.py:493: UserWarning:

X does not have valid feature names, but LinearRegression was fitted with feature names
</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="17">
<pre><code>array([590775.63964739])</code></pre>
</div>
</div>
<div id="7796f570" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">model.score(X, y)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>0.9573929037221873</code></pre>
</div>
</div>
<div id="4ac58b85" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LabelEncoder</span>
<span id="cb29-2"></span>
<span id="cb29-3">le <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LabelEncoder()</span>
<span id="cb29-4">dfle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df</span>
<span id="cb29-5">dfle.town <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> le.fit_transform(dfle.town)</span>
<span id="cb29-6">dfle</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">town</th>
<th data-quarto-table-cell-role="th">area</th>
<th data-quarto-table-cell-role="th">price</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>0</td>
<td>2600</td>
<td>550000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>0</td>
<td>3000</td>
<td>565000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>0</td>
<td>3200</td>
<td>610000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>0</td>
<td>3600</td>
<td>680000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>0</td>
<td>4000</td>
<td>725000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>2</td>
<td>2600</td>
<td>585000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>2</td>
<td>2800</td>
<td>615000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>2</td>
<td>3300</td>
<td>650000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>2</td>
<td>3600</td>
<td>710000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>1</td>
<td>2600</td>
<td>575000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>1</td>
<td>2900</td>
<td>600000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>1</td>
<td>3100</td>
<td>620000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">12</td>
<td>1</td>
<td>3600</td>
<td>695000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>data mining</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/08.html</guid>
  <pubDate>Tue, 25 Mar 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Getting Started</title>
  <link>https://cryscham123.github.io/posts/02_areas/air_flow/notes/00.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/stat-thumb.jpg" class="post-thumbnail img-fluid"></p>
<section id="what-is-airflow" class="level2">
<h2 class="anchored" data-anchor-id="what-is-airflow">What is Airflow</h2>
<ul>
<li><p>open source platform to pragramatically author, schedule and monitor workflows</p></li>
<li><p>Not a data processing framework</p></li>
<li><p>Not a Real time streaming solution (only for batch processing)</p></li>
<li><p>Not a data storage system</p></li>
<li><p>and simple linear workflow might overkill</p></li>
</ul>
</section>
<section id="why-airflow" class="level2">
<h2 class="anchored" data-anchor-id="why-airflow">Why Airflow</h2>
<ol type="1">
<li>automation</li>
<li>visibility</li>
<li>flexibility and scalability</li>
<li>extensibility</li>
</ol>
</section>
<section id="core-components" class="level2">
<h2 class="anchored" data-anchor-id="core-components">Core Components</h2>
<ul>
<li>Webserver: provides UI</li>
<li>Scheduler: triggers tasks. ensure that task runs in correct time and order</li>
<li>meta database: memmory, communication between components</li>
<li>trigger: daemon that listens to external events and triggers tasks</li>
<li>executer: traffic controller that decide how tasks are executed (sequential or parallel, local or remote)</li>
<li>queue</li>
<li>worker</li>
</ul>
</section>
<section id="core-concepts" class="level2">
<h2 class="anchored" data-anchor-id="core-concepts">Core Concepts</h2>
<section id="dag" class="level3">
<h3 class="anchored" data-anchor-id="dag">DAG</h3>
<ul>
<li>Directed Acyclic Graph</li>
<li>collection of all the tasks you want to run, organized in a way that reflects their relationships and dependencies</li>
<li>no cycles in dependencies graph</li>
</ul>
</section>
<section id="operator" class="level3">
<h3 class="anchored" data-anchor-id="operator">Operator</h3>
<ul>
<li>defines a single task in a workflow</li>
<li>e.g.&nbsp;BashOperator, PythonOperator, EmailOperator, etc.</li>
</ul>
</section>
<section id="task-task-instance" class="level3">
<h3 class="anchored" data-anchor-id="task-task-instance">Task / Task Instance</h3>
<ul>
<li>specific instance of an operator</li>
<li>when operator assigned to a DAG, it becomes a task</li>
</ul>
</section>
<section id="workflow" class="level3">
<h3 class="anchored" data-anchor-id="workflow">Workflow</h3>
<ul>
<li>entire process defined by DAG</li>
<li>DAG = workflow</li>
</ul>
</section>
</section>
<section id="arcitecture" class="level2">
<h2 class="anchored" data-anchor-id="arcitecture">Arcitecture</h2>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>Air flow</category>
  <guid>https://cryscham123.github.io/posts/02_areas/air_flow/notes/00.html</guid>
  <pubDate>Tue, 25 Mar 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/06.pdf</link>
  <description><![CDATA[ undefined ]]></description>
  <category>보고서</category>
  <category>데이터 마이닝</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/06.pdf</guid>
  <pubDate>Tue, 25 Mar 2025 00:36:37 GMT</pubDate>
</item>
<item>
  <title>pandas</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/07.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<div id="478dad29" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"></span>
<span id="cb1-4">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.4</span>, np.nan],</span>
<span id="cb1-5">        [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.5</span>],</span>
<span id="cb1-6">        [np.nan, np.nan],</span>
<span id="cb1-7">        [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span>]]</span>
<span id="cb1-8">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(data, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'one'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'two'</span>], index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span>])</span>
<span id="cb1-9">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">one</th>
<th data-quarto-table-cell-role="th">two</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">a</td>
<td>1.40</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">b</td>
<td>7.10</td>
<td>-4.5</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">c</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">d</td>
<td>0.75</td>
<td>-1.3</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="0588af7e" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>one    9.25
two   -5.80
dtype: float64</code></pre>
</div>
</div>
<div id="1b1bc79b" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>a    1.40
b    2.60
c    0.00
d   -0.55
dtype: float64</code></pre>
</div>
</div>
<div id="080d79db" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">df.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, skipna<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>a      NaN
b    1.300
c      NaN
d   -0.275
dtype: float64</code></pre>
</div>
</div>
<div id="3bba8348" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'one'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>9.25</code></pre>
</div>
</div>
<div id="9034fe93" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">df.loc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">round</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>2.6</code></pre>
</div>
</div>
<div id="5506ede8" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">df2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(np.random.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'B'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'D'</span>], index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pd.date_range(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2025-03-24"</span>, periods<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb12-2">df2</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">A</th>
<th data-quarto-table-cell-role="th">B</th>
<th data-quarto-table-cell-role="th">C</th>
<th data-quarto-table-cell-role="th">D</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">2025-03-24</td>
<td>-2.067944</td>
<td>0.005654</td>
<td>-0.247531</td>
<td>0.415550</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2025-03-25</td>
<td>-0.060965</td>
<td>2.243269</td>
<td>0.130425</td>
<td>-1.306482</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2025-03-26</td>
<td>0.694764</td>
<td>-1.074375</td>
<td>1.032794</td>
<td>-0.562044</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2025-03-27</td>
<td>0.095192</td>
<td>-0.074051</td>
<td>-0.285623</td>
<td>0.045712</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2025-03-28</td>
<td>-2.189070</td>
<td>0.637167</td>
<td>1.609518</td>
<td>0.632818</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2025-03-29</td>
<td>-0.941798</td>
<td>-0.413012</td>
<td>-0.463396</td>
<td>0.260044</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="56c76b77" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">df2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span>].corr(df2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'B'</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>-0.13561373135141022</code></pre>
</div>
</div>
<div id="1b6721e9" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">df2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'B'</span>].cov(df2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C'</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>0.005500285499809432</code></pre>
</div>
</div>
<div id="f558f429" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">df2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span>].isin([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alpha'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'beta'</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>2025-03-24    False
2025-03-25    False
2025-03-26    False
2025-03-27    False
2025-03-28    False
2025-03-29    False
Freq: D, Name: A, dtype: bool</code></pre>
</div>
</div>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a> ]]></description>
  <category>data mining</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/data_mining/07.html</guid>
  <pubDate>Sun, 23 Mar 2025 15:00:00 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/07.pdf</link>
  <description><![CDATA[ undefined ]]></description>
  <category>보고서</category>
  <category>OR</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/OR/07.pdf</guid>
  <pubDate>Sat, 22 Mar 2025 03:04:57 GMT</pubDate>
</item>
<item>
  <title>공급 프로세스의 이해: 프로세스 처리능력 평가</title>
  <link>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/03.html</link>
  <description><![CDATA[ 




<p><img src="https://cryscham123.github.io/img/human-thumb.jpg" class="post-thumbnail img-fluid"></p>
<ul>
<li><strong>process capacity</strong>: 생산률의 upper bound(유량)</li>
</ul>
<section id="프로세스-흐름도" class="level2">
<h2 class="anchored" data-anchor-id="프로세스-흐름도">프로세스 흐름도</h2>
<ul>
<li>블랙박스적 관점: 정보 안보여줌</li>
<li>공학적 관점: 정보가 정적임. 얻을 수 있는 정보가 제한적</li>
</ul>
<p>→ 생산자 관점에서 둘 다 도움 안됨.<br>
→ input이 어떤 순서를 거쳐 output이 되는지 알아야 함<br>
→ 프로세스 흐름도</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/img/2025-03-30-15-25-33.png" class="img-fluid figure-img"></p>
<figcaption>프로세스 흐름도</figcaption>
</figure>
</div>
<ul>
<li>작업(네모)
<ul>
<li>리소스에 의하여 수행 된다.</li>
<li>하위 작업에도 capacity가 있다</li>
</ul></li>
<li>화살표</li>
<li>재고/버퍼(세모)
<ul>
<li>input이 output이 되기 위해 반드시 필요한건 아님</li>
<li>처리능력으로 표시 / 해석하지 않음</li>
</ul></li>
</ul>
</section>
<section id="프로세스-처리-능력-및-활용률" class="level2">
<h2 class="anchored" data-anchor-id="프로세스-처리-능력-및-활용률">프로세스 처리 능력 및 활용률</h2>
<ul>
<li>병목(bottleneck): 제일 낮은 처리능력의 자원<sup>1</sup></li>
<li>전체 프로세스의 처리 능력 = 병목 (단 작업이 일렬로 수행될 때)</li>
<li>product mix:
<ul>
<li>다양한 제품이 input으로 들어와 처리능력이 달라짐</li>
<li>bottleneck을 계산하기는 어려움
<ul>
<li>비율이 매번 달라질 수도 있어서</li>
<li>작업이 일렬로만 수행되지 않아서</li>
</ul></li>
</ul></li>
<li>실제 생산한 양(흐름률)은 capacity에서만 결정되지 않는다.
<ul>
<li>수요(market + 계절 / 안전 재고 같은 내부적 수요)</li>
<li>원자재 투입량</li>
</ul></li>
<li><strong>흐름률 = min(시간 당 투입량, 시간 당 수요, 프로세스 처리 능력)</strong></li>
<li>공급능력: 투입량, 처리 능력</li>
</ul>
<section id="수요-공급-제약적-상황" class="level3">
<h3 class="anchored" data-anchor-id="수요-공급-제약적-상황">수요 / 공급 제약적 상황</h3>
<p><img src="https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/img/2025-03-30-15-43-44.png" class="img-fluid"></p>
<ul>
<li>수요 제약적: 수요 &lt; 공급
<ul>
<li>bottleneck 활용률 &lt; 100%</li>
<li>flow rate == Demand rate</li>
</ul></li>
<li>공급 제약적: 수요 &gt; 공급
<ul>
<li>투입 제약적</li>
<li>처리능력 제약적
<ul>
<li>bottleneck 활용률 == 100%</li>
<li>flow rate = capacity</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="프로세스-capacity-찾기" class="level3">
<h3 class="anchored" data-anchor-id="프로세스-capacity-찾기">프로세스 capacity 찾기</h3>
<ul>
<li>X 단위 생산에 걸리는 시간
<ul>
<li>일정 시점에서 vs 처음부터(비어있는 상태에서) 시작</li>
<li>일정 시점: X/Flow rate</li>
</ul></li>
</ul>
</section>
<section id="활용률" class="level3">
<h3 class="anchored" data-anchor-id="활용률">활용률</h3>
<ul>
<li>실제 생산하는 양을 capacity로 나눈 것
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%ED%9D%90%EB%A6%84%EB%A5%A0%7D%7B%EC%B2%98%EB%A6%AC%EB%8A%A5%EB%A0%A5%7D"></li>
<li>활용률을 100% 달성하려면 쉬지 않고 프로세스가 돌아가야하지만 현실적으로 쉽지 않다.
<ul>
<li>수요가 공급보다 적을 수 있다.</li>
<li>투입물이 충분하지 않다.</li>
<li>몇몇 공정의 사용이 공장이나 수리로 제한될 수 있다.</li>
<li>불확실성</li>
</ul></li>
</ul></li>
<li>병목을 제외한 다른 하위 작업은 활용률이 떨어질 수 있다.
<ul>
<li>모든 프로세스가 병목인 것이 가장 이상적인 상황 (과도하게 높은 공급능력)</li>
</ul></li>
<li>공급 제약적 상황에서 수요가 얼마나 많은지 알 수 없음.<br>
→ implied utilization</li>
</ul>
</section>
<section id="implied-utilization" class="level3">
<h3 class="anchored" data-anchor-id="implied-utilization">implied utilization</h3>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?U%20=%20%5Cfrac%7BR%7D%7BCapacity%7D"></li>
<li><img src="https://latex.codecogs.com/png.latex?IU%20=%20%5Cfrac%7BDemand%20or%20workload%7D%7BCapacity%7D%20(%E2%89%A4100%25%20or%20%3E%20100%25)"></li>
<li>if min(demmand, capacity, input) = demand then U = IU</li>
<li>이 외에도 잠재적 수요 못따라가는 작업도 알 수 있음
<ul>
<li>IU 100 넘는거 개선 필요</li>
</ul></li>
<li>또, 작업이 sequential하게 진행되지 않을 때 병목현상을 확인할 수 있음</li>
</ul>
</section>
</section>
<section id="여러-종류의-흐름-단위" class="level2">
<h2 class="anchored" data-anchor-id="여러-종류의-흐름-단위">여러 종류의 흐름 단위</h2>
<p>input 당 뭐가 다르면 다른 단위로 치환</p>


</section>


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> 맨 위로</a><div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">각주</h2>

<ol>
<li id="fn1"><p>왜 전체 프로세스 능력이 안 더해지고 min임?<br>
같은 속도로 진행되야해서일듯↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>생산시스템관리</category>
  <guid>https://cryscham123.github.io/posts/01_projects/bs_3_1/notes/product/03.html</guid>
  <pubDate>Tue, 18 Mar 2025 15:00:00 GMT</pubDate>
</item>
</channel>
</rss>
